const eslintRecommended = {
  rules: {
    "constructor-super": `error`,
    "for-direction": `error`,
    "getter-return": `error`,
    "no-async-promise-executor": `error`,
    "no-case-declarations": `error`,
    "no-class-assign": `error`,
    "no-compare-neg-zero": `error`,
    "no-cond-assign": `error`,
    "no-const-assign": `error`,
    "no-constant-condition": `error`,
    "no-control-regex": `error`,
    "no-debugger": `error`,
    "no-delete-var": `error`,
    "no-dupe-args": `error`,
    "no-dupe-class-members": `error`,
    "no-dupe-else-if": `error`,
    "no-dupe-keys": `error`,
    "no-duplicate-case": `error`,
    "no-empty": `error`,
    "no-empty-character-class": `error`,
    "no-empty-pattern": `error`,
    "no-ex-assign": `error`,
    "no-extra-boolean-cast": `error`,
    "no-extra-semi": `error`,
    "no-fallthrough": `error`,
    "no-func-assign": `error`,
    "no-global-assign": `error`,
    "no-import-assign": `error`,
    "no-inner-declarations": `error`,
    "no-invalid-regexp": `error`,
    "no-irregular-whitespace": `error`,
    "no-misleading-character-class": `error`,
    "no-mixed-spaces-and-tabs": `error`,
    "no-new-symbol": `error`,
    "no-obj-calls": `error`,
    "no-octal": `error`,
    "no-prototype-builtins": `error`,
    "no-redeclare": `error`,
    "no-regex-spaces": `error`,
    "no-self-assign": `error`,
    "no-setter-return": `error`,
    "no-shadow-restricted-names": `error`,
    "no-sparse-arrays": `error`,
    "no-this-before-super": `error`,
    "no-undef": `error`,
    "no-unexpected-multiline": `error`,
    "no-unreachable": `error`,
    "no-unsafe-finally": `error`,
    "no-unsafe-negation": `error`,
    "no-unused-labels": `error`,
    "no-unused-vars": `error`,
    "no-useless-catch": `error`,
    "no-useless-escape": `error`,
    "no-with": `error`,
    "require-yield": `error`,
    "use-isnan": `error`,
    "valid-typeof": `error`,
  },
};

const typescriptEslintRecommended = {
  overrides: [
    {
      files: [`*.ts`, `*.tsx`],
      rules: {
        // Checked by Typescript - ts(2378)
        'getter-return': `off`,
        // Checked by Typescript - ts(2300)
        'no-dupe-args': `off`,
        // Checked by Typescript - ts(1117)
        'no-dupe-keys': `off`,
        // Checked by Typescript - ts(7027)
        'no-unreachable': `off`,
        // Checked by Typescript - ts(2367)
        'valid-typeof': `off`,
        // Checked by Typescript - ts(2588)
        'no-const-assign': `off`,
        // Checked by Typescript - ts(2588)
        'no-new-symbol': `off`,
        // Checked by Typescript - ts(2376)
        'no-this-before-super': `off`,
        // This is checked by Typescript using the option `strictNullChecks`.
        'no-undef': `off`,
        // This is already checked by Typescript.
        'no-dupe-class-members': `off`,
        // This is already checked by Typescript.
        'no-redeclare': `off`,
      },
    },
  ],
};

module.exports = {
  ...eslintRecommended,
  ...typescriptEslintRecommended,

  env: {
    node: true,
    es6: true,
  },
  parser: `@typescript-eslint/parser`,
  parserOptions: {
    ecmaVersion: 6,
    sourceType: `module`,
    ecmaFeatures: {
      modules: true,
    },
  },
  plugins: [
    `@typescript-eslint`,
    `arca`,
    `react`,
  ],
  rules: {
    "@typescript-eslint/adjacent-overload-signatures": 2,
    "@typescript-eslint/array-type": [`error`, {default: `generic`}],
    "@typescript-eslint/camelcase": [`error`, {allow: [`__non_webpack_module__`, `__non_webpack_require__`, `^npm(_[a-z]+)+$`]}],
    "@typescript-eslint/class-name-casing": 2,
    "@typescript-eslint/func-call-spacing": 2,
    "@typescript-eslint/indent": [`error`, 2, {SwitchCase: 1, ignoredNodes: [`TSTypeParameterInstantiation`]}],
    "@typescript-eslint/no-extra-non-null-assertion": 2,
    "@typescript-eslint/no-unused-vars": [1, {args: `none`, ignoreRestSiblings: true}],
    "@typescript-eslint/no-non-null-asserted-optional-chain": 2,
    "@typescript-eslint/quotes": [`error`, `backtick`],
    "@typescript-eslint/type-annotation-spacing": 2,
    "arca/curly": 2,
    "arca/import-align": [2, {collapseExtraSpaces: true}],
    "arca/import-ordering": 2,
    "arca/newline-after-import-section": 2,
    "arca/no-default-export": 2,
    "array-bracket-spacing": 2,
    "arrow-parens": [`error`, `as-needed`],
    "arrow-spacing": 2,
    "comma-dangle": [`error`, `always-multiline`],
    "computed-property-spacing": 2,
    "dot-notation": 2,
    "generator-star-spacing": [`error`, {before: true, after: true}],
    "space-before-blocks": 2,
    "jsx-quotes": 2,
    "keyword-spacing": 2,
    "no-multiple-empty-lines": 2,
    "no-tabs": 2,
    "no-trailing-spaces": 2,
    "no-unused-vars": `off`,
    "no-empty": [`error`, {allowEmptyCatch: true}],
    "no-constant-condition": [`error`, {checkLoops: false}],
    "no-unneeded-ternary": 2,
    "object-curly-spacing": 2,
    "object-shorthand": 2,
    "padded-blocks": [`error`, `never`],
    "prefer-arrow-callback": 2,
    "prefer-const": [`error`, {destructuring: `all`, ignoreReadBeforeAssign: true}],
    "prefer-template": 2,
    "quote-props": [`error`, `as-needed`],
    "react/jsx-uses-react": 1,
    "react/jsx-uses-vars": 1,
    "rest-spread-spacing": 2,
    semi: 2,
    "template-curly-spacing": 2,
  },
  overrides: [
    {
      files: [`*.test.{js,ts}`],
      env: {
        jest: true,
      },
    },
    {
      files: [`packages/acceptance-tests/pkg-tests-specs/**/*.test.{js,ts}`],
      globals: {
        makeTemporaryEnv: `readonly`,
      },
    },
  ],
};
