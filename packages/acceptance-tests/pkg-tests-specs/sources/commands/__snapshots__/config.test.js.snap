// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Commands config test (folder with rcfile / as json) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "{\\"key\\":\\"bstatePath\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/build-state.yml\\",\\"description\\":\\"Path of the file where the current state of the built packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/build-state.yml\\"}
{\\"key\\":\\"cacheFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/cache\\",\\"description\\":\\"Folder where the cache files must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/cache\\"}
{\\"key\\":\\"checksumBehavior\\",\\"effective\\":\\"throw\\",\\"description\\":\\"Enumeration defining what to do when a checksum doesn't match expectations\\",\\"type\\":\\"STRING\\",\\"default\\":\\"throw\\"}
{\\"key\\":\\"defaultLanguageName\\",\\"effective\\":\\"node\\",\\"description\\":\\"Default language mode that should be used when a package doesn't offer any insight\\",\\"type\\":\\"STRING\\",\\"default\\":\\"node\\"}
{\\"key\\":\\"defaultProtocol\\",\\"effective\\":\\"npm:\\",\\"description\\":\\"Default resolution protocol used when resolving pure semver and tag ranges\\",\\"type\\":\\"STRING\\",\\"default\\":\\"npm:\\"}
{\\"key\\":\\"defaultSemverRangePrefix\\",\\"effective\\":\\"^\\",\\"description\\":\\"The default save prefix: '^', '~' or ''\\",\\"type\\":\\"STRING\\",\\"default\\":\\"^\\"}
{\\"key\\":\\"enableAbsoluteVirtuals\\",\\"effective\\":true,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the virtual symlinks will use absolute paths if required [non portable!!]\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableColors\\",\\"effective\\":false,\\"description\\":\\"If true, the CLI is allowed to use colors in its output\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableGlobalCache\\",\\"effective\\":false,\\"description\\":\\"If true, the system-wide cache folder will be used regardless of \`cache-folder\`\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableImmutableCache\\",\\"effective\\":false,\\"description\\":\\"If true, the cache is reputed immutable and actions that would modify it will throw\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableImmutableInstalls\\",\\"effective\\":false,\\"description\\":\\"If true, prevents the install command from modifying the lockfile\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableInlineBuilds\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI will print the build output on the command line\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableMirror\\",\\"effective\\":true,\\"description\\":\\"If true, the downloaded packages will be retrieved and stored in both the local and global folders\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableNetwork\\",\\"effective\\":true,\\"description\\":\\"If false, the package manager will refuse to use the network if required to\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableProgressBars\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI is allowed to show a progress bar for long-running events\\",\\"type\\":\\"BOOLEAN\\",\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableScripts\\",\\"effective\\":true,\\"description\\":\\"If true, packages are allowed to have install scripts by default\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableTimers\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI is allowed to print the time spent executing commands\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"globalFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/global\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"Folder where are stored the system-wide settings\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"LOCAL_APP_DATA\\"}
{\\"key\\":\\"httpProxy\\",\\"effective\\":null,\\"description\\":\\"URL of the http proxy that must be used for outgoing http requests\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"httpsProxy\\",\\"effective\\":null,\\"description\\":\\"URL of the http proxy that must be used for outgoing https requests\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"ignorePath\\",\\"effective\\":false,\\"description\\":\\"If true, the local executable will be ignored when using the global one\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"initLicense\\",\\"effective\\":null,\\"description\\":\\"License used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"initScope\\",\\"effective\\":\\"my-test\\",\\"source\\":\\"WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc\\",\\"description\\":\\"Scope used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"initVersion\\",\\"effective\\":null,\\"description\\":\\"Version used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"lastUpdateCheck\\",\\"effective\\":null,\\"description\\":\\"Last timestamp we checked whether new Yarn versions were available\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"lockfileFilename\\",\\"effective\\":\\"yarn.lock\\",\\"description\\":\\"Name of the files where the Yarn dependency tree entries must be stored\\",\\"type\\":\\"STRING\\",\\"default\\":\\"yarn.lock\\"}
{\\"key\\":\\"npmAlwaysAuth\\",\\"effective\\":false,\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"npmAuthIdent\\",\\"effective\\":null,\\"description\\":\\"Authentication identity for the npm registry (_auth in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}
{\\"key\\":\\"npmAuthToken\\",\\"effective\\":null,\\"description\\":\\"Authentication token for the npm registry (_authToken in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}
{\\"key\\":\\"npmPublishAccess\\",\\"effective\\":null,\\"description\\":\\"Default access of the published packages\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"npmPublishRegistry\\",\\"effective\\":null,\\"description\\":\\"Registry to push packages to\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"npmRegistries\\",\\"effective\\":{},\\"description\\":\\"Settings per registry\\",\\"type\\":\\"MAP\\",\\"valueDefinition\\":{\\"description\\":\\"\\",\\"type\\":\\"SHAPE\\",\\"properties\\":{\\"npmAlwaysAuth\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false},\\"npmAuthIdent\\":{\\"description\\":\\"Authentication identity for the npm registry (_auth in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null},\\"npmAuthToken\\":{\\"description\\":\\"Authentication token for the npm registry (_authToken in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}}}}
{\\"key\\":\\"npmRegistryServer\\",\\"effective\\":\\"http://yarn.test.registry\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\"}
{\\"key\\":\\"npmScopes\\",\\"effective\\":{},\\"description\\":\\"Settings per package scope\\",\\"type\\":\\"MAP\\",\\"valueDefinition\\":{\\"description\\":\\"\\",\\"type\\":\\"SHAPE\\",\\"properties\\":{\\"npmPublishRegistry\\":{\\"description\\":\\"Registry to push packages to\\",\\"type\\":\\"STRING\\",\\"default\\":null},\\"npmRegistryServer\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\"}}}}
{\\"key\\":\\"pnpDataPath\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.data.json\\",\\"description\\":\\"Path of the file where the PnP data (used by the loader) must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.data.json\\"}
{\\"key\\":\\"pnpEnableInlining\\",\\"effective\\":true,\\"description\\":\\"If true, the PnP data will be inlined along with the generated loader\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"pnpFallbackMode\\",\\"effective\\":\\"none\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the generated PnP loader will follow the top-level fallback rule\\",\\"type\\":\\"STRING\\",\\"default\\":\\"dependencies-only\\"}
{\\"key\\":\\"pnpIgnorePattern\\",\\"effective\\":null,\\"description\\":\\"Regex defining a pattern of files that should use the classic resolution\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"pnpShebang\\",\\"effective\\":\\"#!/usr/bin/env node\\",\\"description\\":\\"String to prepend to the generated PnP script\\",\\"type\\":\\"STRING\\",\\"default\\":\\"#!/usr/bin/env node\\"}
{\\"key\\":\\"pnpUnpluggedFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/unplugged\\",\\"description\\":\\"Folder where the unplugged packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/unplugged\\"}
{\\"key\\":\\"preferDeferredVersions\\",\\"effective\\":false,\\"description\\":\\"If true, running \`yarn version\` will assume the \`--deferred\` flag unless \`--immediate\` is set\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"preferInteractive\\",\\"effective\\":false,\\"description\\":\\"If true, the CLI will automatically use the interactive mode when called from a TTY\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"progressBarStyle\\",\\"description\\":\\"Which style of progress bar should be used (only when progress bars are enabled)\\",\\"type\\":\\"STRING\\",\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"rcFilename\\",\\"effective\\":\\".spec-yarnrc\\",\\"description\\":\\"Name of the files where the configuration can be found\\",\\"type\\":\\"STRING\\",\\"default\\":\\".spec-yarnrc\\"}
{\\"key\\":\\"unsafeHttpWhitelist\\",\\"effective\\":[\\"localhost\\"],\\"source\\":\\"<environment>\\",\\"description\\":\\"List of the hostnames for which http queries are allowed (glob patterns are supported)\\",\\"type\\":\\"STRING\\",\\"default\\":[],\\"isArray\\":true}
{\\"key\\":\\"virtualFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/virtual\\",\\"description\\":\\"Folder where the virtual packages (cf doc) will be mapped on the disk\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/virtual\\"}
{\\"key\\":\\"yarnPath\\",\\"effective\\":null,\\"description\\":\\"Path to the local executable that must be used over the global one\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":null}
",
}
`;

exports[`Commands config test (folder with rcfile / showing explanation) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - Path of the file where the current state of the built packages must be stored - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - Folder where the cache files must be written - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - Enumeration defining what to do when a checksum doesn't match expectations - 'throw'
➤ YN0000: defaultLanguageName - Default language mode that should be used when a package doesn't offer any insight - 'node'
➤ YN0000: defaultProtocol - Default resolution protocol used when resolving pure semver and tag ranges - 'npm:'
➤ YN0000: defaultSemverRangePrefix - The default save prefix: '^', '~' or '' - '^'
➤ YN0000: enableAbsoluteVirtuals - If true, the virtual symlinks will use absolute paths if required [non portable!!] - true
➤ YN0000: enableColors - If true, the CLI is allowed to use colors in its output - false
➤ YN0000: enableGlobalCache - If true, the system-wide cache folder will be used regardless of \`cache-folder\` - false
➤ YN0000: enableImmutableCache - If true, the cache is reputed immutable and actions that would modify it will throw - false
➤ YN0000: enableImmutableInstalls - If true, prevents the install command from modifying the lockfile - false
➤ YN0000: enableInlineBuilds - If true, the CLI will print the build output on the command line - false
➤ YN0000: enableMirror - If true, the downloaded packages will be retrieved and stored in both the local and global folders - true
➤ YN0000: enableNetwork - If false, the package manager will refuse to use the network if required to - true
➤ YN0000: enableProgressBars - If true, the CLI is allowed to show a progress bar for long-running events - false
➤ YN0000: enableScripts - If true, packages are allowed to have install scripts by default - true
➤ YN0000: enableTimers - If true, the CLI is allowed to print the time spent executing commands - false
➤ YN0000: globalFolder - Folder where are stored the system-wide settings - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - URL of the http proxy that must be used for outgoing http requests - null
➤ YN0000: httpsProxy - URL of the http proxy that must be used for outgoing https requests - null
➤ YN0000: ignorePath - If true, the local executable will be ignored when using the global one - false
➤ YN0000: initLicense - License used when creating packages via the init command - null
➤ YN0000: initScope - Scope used when creating packages via the init command - 'my-test'
➤ YN0000: initVersion - Version used when creating packages via the init command - null
➤ YN0000: lastUpdateCheck - Last timestamp we checked whether new Yarn versions were available - null
➤ YN0000: lockfileFilename - Name of the files where the Yarn dependency tree entries must be stored - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - URL of the selected npm registry (note: npm enterprise isn't supported) - false
➤ YN0000: npmAuthIdent - Authentication identity for the npm registry (_auth in npm and yarn v1) - null
➤ YN0000: npmAuthToken - Authentication token for the npm registry (_authToken in npm and yarn v1) - null
➤ YN0000: npmPublishAccess - Default access of the published packages - null
➤ YN0000: npmPublishRegistry - Registry to push packages to - null
➤ YN0000: npmRegistries - Settings per registry - Map {}
➤ YN0000: npmRegistryServer - URL of the selected npm registry (note: npm enterprise isn't supported) - 'http://yarn.test.registry'
➤ YN0000: npmScopes - Settings per package scope - Map {}
➤ YN0000: pnpDataPath - Path of the file where the PnP data (used by the loader) must be written - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - If true, the PnP data will be inlined along with the generated loader - true
➤ YN0000: pnpFallbackMode - If true, the generated PnP loader will follow the top-level fallback rule - 'none'
➤ YN0000: pnpIgnorePattern - Regex defining a pattern of files that should use the classic resolution - null
➤ YN0000: pnpShebang - String to prepend to the generated PnP script - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - Folder where the unplugged packages must be stored - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - If true, running \`yarn version\` will assume the \`--deferred\` flag unless \`--immediate\` is set - false
➤ YN0000: preferInteractive - If true, the CLI will automatically use the interactive mode when called from a TTY - false
➤ YN0000: progressBarStyle - Which style of progress bar should be used (only when progress bars are enabled) - undefined
➤ YN0000: rcFilename - Name of the files where the configuration can be found - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - List of the hostnames for which http queries are allowed (glob patterns are supported) - [ 'localhost' ]
➤ YN0000: virtualFolder - Folder where the virtual packages (cf doc) will be mapped on the disk - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - Path to the local executable that must be used over the global one - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile / showing the source) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - <default> - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - <default> - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - <default> - 'throw'
➤ YN0000: defaultLanguageName - <default> - 'node'
➤ YN0000: defaultProtocol - <default> - 'npm:'
➤ YN0000: defaultSemverRangePrefix - <default> - '^'
➤ YN0000: enableAbsoluteVirtuals - <environment> - true
➤ YN0000: enableColors - <default> - false
➤ YN0000: enableGlobalCache - <default> - false
➤ YN0000: enableImmutableCache - <default> - false
➤ YN0000: enableImmutableInstalls - <default> - false
➤ YN0000: enableInlineBuilds - <environment> - false
➤ YN0000: enableMirror - <default> - true
➤ YN0000: enableNetwork - <default> - true
➤ YN0000: enableProgressBars - <environment> - false
➤ YN0000: enableScripts - <default> - true
➤ YN0000: enableTimers - <environment> - false
➤ YN0000: globalFolder - <environment> - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - <default> - null
➤ YN0000: httpsProxy - <default> - null
➤ YN0000: ignorePath - <default> - false
➤ YN0000: initLicense - <default> - null
➤ YN0000: initScope - WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc - 'my-test'
➤ YN0000: initVersion - <default> - null
➤ YN0000: lastUpdateCheck - <default> - null
➤ YN0000: lockfileFilename - <default> - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - <default> - false
➤ YN0000: npmAuthIdent - <default> - null
➤ YN0000: npmAuthToken - <default> - null
➤ YN0000: npmPublishAccess - <default> - null
➤ YN0000: npmPublishRegistry - <default> - null
➤ YN0000: npmRegistries - <default> - Map {}
➤ YN0000: npmRegistryServer - <environment> - 'http://yarn.test.registry'
➤ YN0000: npmScopes - <default> - Map {}
➤ YN0000: pnpDataPath - <default> - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - <default> - true
➤ YN0000: pnpFallbackMode - <environment> - 'none'
➤ YN0000: pnpIgnorePattern - <default> - null
➤ YN0000: pnpShebang - <default> - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - <default> - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - <default> - false
➤ YN0000: preferInteractive - <default> - false
➤ YN0000: progressBarStyle - <default> - undefined
➤ YN0000: rcFilename - <default> - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - <environment> - [ 'localhost' ]
➤ YN0000: virtualFolder - <default> - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - <default> - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile / without flags) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - 'throw'
➤ YN0000: defaultLanguageName - 'node'
➤ YN0000: defaultProtocol - 'npm:'
➤ YN0000: defaultSemverRangePrefix - '^'
➤ YN0000: enableAbsoluteVirtuals - true
➤ YN0000: enableColors - false
➤ YN0000: enableGlobalCache - false
➤ YN0000: enableImmutableCache - false
➤ YN0000: enableImmutableInstalls - false
➤ YN0000: enableInlineBuilds - false
➤ YN0000: enableMirror - true
➤ YN0000: enableNetwork - true
➤ YN0000: enableProgressBars - false
➤ YN0000: enableScripts - true
➤ YN0000: enableTimers - false
➤ YN0000: globalFolder - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - null
➤ YN0000: httpsProxy - null
➤ YN0000: ignorePath - false
➤ YN0000: initLicense - null
➤ YN0000: initScope - 'my-test'
➤ YN0000: initVersion - null
➤ YN0000: lastUpdateCheck - null
➤ YN0000: lockfileFilename - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - false
➤ YN0000: npmAuthIdent - null
➤ YN0000: npmAuthToken - null
➤ YN0000: npmPublishAccess - null
➤ YN0000: npmPublishRegistry - null
➤ YN0000: npmRegistries - Map {}
➤ YN0000: npmRegistryServer - 'http://yarn.test.registry'
➤ YN0000: npmScopes - Map {}
➤ YN0000: pnpDataPath - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - true
➤ YN0000: pnpFallbackMode - 'none'
➤ YN0000: pnpIgnorePattern - null
➤ YN0000: pnpShebang - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - false
➤ YN0000: preferInteractive - false
➤ YN0000: progressBarStyle - undefined
➤ YN0000: rcFilename - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - [ 'localhost' ]
➤ YN0000: virtualFolder - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile and rc in ancestor parent / as json) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "{\\"key\\":\\"bstatePath\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/build-state.yml\\",\\"description\\":\\"Path of the file where the current state of the built packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/build-state.yml\\"}
{\\"key\\":\\"cacheFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/cache\\",\\"description\\":\\"Folder where the cache files must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/cache\\"}
{\\"key\\":\\"checksumBehavior\\",\\"effective\\":\\"throw\\",\\"description\\":\\"Enumeration defining what to do when a checksum doesn't match expectations\\",\\"type\\":\\"STRING\\",\\"default\\":\\"throw\\"}
{\\"key\\":\\"defaultLanguageName\\",\\"effective\\":\\"node\\",\\"description\\":\\"Default language mode that should be used when a package doesn't offer any insight\\",\\"type\\":\\"STRING\\",\\"default\\":\\"node\\"}
{\\"key\\":\\"defaultProtocol\\",\\"effective\\":\\"npm:\\",\\"description\\":\\"Default resolution protocol used when resolving pure semver and tag ranges\\",\\"type\\":\\"STRING\\",\\"default\\":\\"npm:\\"}
{\\"key\\":\\"defaultSemverRangePrefix\\",\\"effective\\":\\"^\\",\\"description\\":\\"The default save prefix: '^', '~' or ''\\",\\"type\\":\\"STRING\\",\\"default\\":\\"^\\"}
{\\"key\\":\\"enableAbsoluteVirtuals\\",\\"effective\\":true,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the virtual symlinks will use absolute paths if required [non portable!!]\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableColors\\",\\"effective\\":false,\\"description\\":\\"If true, the CLI is allowed to use colors in its output\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableGlobalCache\\",\\"effective\\":false,\\"description\\":\\"If true, the system-wide cache folder will be used regardless of \`cache-folder\`\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableImmutableCache\\",\\"effective\\":false,\\"description\\":\\"If true, the cache is reputed immutable and actions that would modify it will throw\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableImmutableInstalls\\",\\"effective\\":false,\\"description\\":\\"If true, prevents the install command from modifying the lockfile\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableInlineBuilds\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI will print the build output on the command line\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableMirror\\",\\"effective\\":true,\\"description\\":\\"If true, the downloaded packages will be retrieved and stored in both the local and global folders\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableNetwork\\",\\"effective\\":true,\\"description\\":\\"If false, the package manager will refuse to use the network if required to\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableProgressBars\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI is allowed to show a progress bar for long-running events\\",\\"type\\":\\"BOOLEAN\\",\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableScripts\\",\\"effective\\":true,\\"description\\":\\"If true, packages are allowed to have install scripts by default\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableTimers\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI is allowed to print the time spent executing commands\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"globalFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/global\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"Folder where are stored the system-wide settings\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"LOCAL_APP_DATA\\"}
{\\"key\\":\\"httpProxy\\",\\"effective\\":null,\\"description\\":\\"URL of the http proxy that must be used for outgoing http requests\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"httpsProxy\\",\\"effective\\":null,\\"description\\":\\"URL of the http proxy that must be used for outgoing https requests\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"ignorePath\\",\\"effective\\":false,\\"description\\":\\"If true, the local executable will be ignored when using the global one\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"initLicense\\",\\"effective\\":null,\\"description\\":\\"License used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"initScope\\",\\"effective\\":\\"my-test\\",\\"source\\":\\"WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc\\",\\"description\\":\\"Scope used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"initVersion\\",\\"effective\\":null,\\"description\\":\\"Version used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"lastUpdateCheck\\",\\"effective\\":\\"1555784893958\\",\\"source\\":\\"WORKSPACE_ROOT/.spec-yarnrc\\",\\"description\\":\\"Last timestamp we checked whether new Yarn versions were available\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"lockfileFilename\\",\\"effective\\":\\"yarn.lock\\",\\"description\\":\\"Name of the files where the Yarn dependency tree entries must be stored\\",\\"type\\":\\"STRING\\",\\"default\\":\\"yarn.lock\\"}
{\\"key\\":\\"npmAlwaysAuth\\",\\"effective\\":false,\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"npmAuthIdent\\",\\"effective\\":null,\\"description\\":\\"Authentication identity for the npm registry (_auth in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}
{\\"key\\":\\"npmAuthToken\\",\\"effective\\":null,\\"description\\":\\"Authentication token for the npm registry (_authToken in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}
{\\"key\\":\\"npmPublishAccess\\",\\"effective\\":null,\\"description\\":\\"Default access of the published packages\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"npmPublishRegistry\\",\\"effective\\":null,\\"description\\":\\"Registry to push packages to\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"npmRegistries\\",\\"effective\\":{},\\"description\\":\\"Settings per registry\\",\\"type\\":\\"MAP\\",\\"valueDefinition\\":{\\"description\\":\\"\\",\\"type\\":\\"SHAPE\\",\\"properties\\":{\\"npmAlwaysAuth\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false},\\"npmAuthIdent\\":{\\"description\\":\\"Authentication identity for the npm registry (_auth in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null},\\"npmAuthToken\\":{\\"description\\":\\"Authentication token for the npm registry (_authToken in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}}}}
{\\"key\\":\\"npmRegistryServer\\",\\"effective\\":\\"http://yarn.test.registry\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\"}
{\\"key\\":\\"npmScopes\\",\\"effective\\":{},\\"description\\":\\"Settings per package scope\\",\\"type\\":\\"MAP\\",\\"valueDefinition\\":{\\"description\\":\\"\\",\\"type\\":\\"SHAPE\\",\\"properties\\":{\\"npmPublishRegistry\\":{\\"description\\":\\"Registry to push packages to\\",\\"type\\":\\"STRING\\",\\"default\\":null},\\"npmRegistryServer\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\"}}}}
{\\"key\\":\\"pnpDataPath\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.data.json\\",\\"description\\":\\"Path of the file where the PnP data (used by the loader) must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.data.json\\"}
{\\"key\\":\\"pnpEnableInlining\\",\\"effective\\":true,\\"description\\":\\"If true, the PnP data will be inlined along with the generated loader\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"pnpFallbackMode\\",\\"effective\\":\\"none\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the generated PnP loader will follow the top-level fallback rule\\",\\"type\\":\\"STRING\\",\\"default\\":\\"dependencies-only\\"}
{\\"key\\":\\"pnpIgnorePattern\\",\\"effective\\":null,\\"description\\":\\"Regex defining a pattern of files that should use the classic resolution\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"pnpShebang\\",\\"effective\\":\\"#!/usr/bin/env node\\",\\"description\\":\\"String to prepend to the generated PnP script\\",\\"type\\":\\"STRING\\",\\"default\\":\\"#!/usr/bin/env node\\"}
{\\"key\\":\\"pnpUnpluggedFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/unplugged\\",\\"description\\":\\"Folder where the unplugged packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/unplugged\\"}
{\\"key\\":\\"preferDeferredVersions\\",\\"effective\\":false,\\"description\\":\\"If true, running \`yarn version\` will assume the \`--deferred\` flag unless \`--immediate\` is set\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"preferInteractive\\",\\"effective\\":false,\\"description\\":\\"If true, the CLI will automatically use the interactive mode when called from a TTY\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"progressBarStyle\\",\\"description\\":\\"Which style of progress bar should be used (only when progress bars are enabled)\\",\\"type\\":\\"STRING\\",\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"rcFilename\\",\\"effective\\":\\".spec-yarnrc\\",\\"description\\":\\"Name of the files where the configuration can be found\\",\\"type\\":\\"STRING\\",\\"default\\":\\".spec-yarnrc\\"}
{\\"key\\":\\"unsafeHttpWhitelist\\",\\"effective\\":[\\"localhost\\"],\\"source\\":\\"<environment>\\",\\"description\\":\\"List of the hostnames for which http queries are allowed (glob patterns are supported)\\",\\"type\\":\\"STRING\\",\\"default\\":[],\\"isArray\\":true}
{\\"key\\":\\"virtualFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/virtual\\",\\"description\\":\\"Folder where the virtual packages (cf doc) will be mapped on the disk\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/virtual\\"}
{\\"key\\":\\"yarnPath\\",\\"effective\\":null,\\"description\\":\\"Path to the local executable that must be used over the global one\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":null}
",
}
`;

exports[`Commands config test (folder with rcfile and rc in ancestor parent / showing explanation) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - Path of the file where the current state of the built packages must be stored - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - Folder where the cache files must be written - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - Enumeration defining what to do when a checksum doesn't match expectations - 'throw'
➤ YN0000: defaultLanguageName - Default language mode that should be used when a package doesn't offer any insight - 'node'
➤ YN0000: defaultProtocol - Default resolution protocol used when resolving pure semver and tag ranges - 'npm:'
➤ YN0000: defaultSemverRangePrefix - The default save prefix: '^', '~' or '' - '^'
➤ YN0000: enableAbsoluteVirtuals - If true, the virtual symlinks will use absolute paths if required [non portable!!] - true
➤ YN0000: enableColors - If true, the CLI is allowed to use colors in its output - false
➤ YN0000: enableGlobalCache - If true, the system-wide cache folder will be used regardless of \`cache-folder\` - false
➤ YN0000: enableImmutableCache - If true, the cache is reputed immutable and actions that would modify it will throw - false
➤ YN0000: enableImmutableInstalls - If true, prevents the install command from modifying the lockfile - false
➤ YN0000: enableInlineBuilds - If true, the CLI will print the build output on the command line - false
➤ YN0000: enableMirror - If true, the downloaded packages will be retrieved and stored in both the local and global folders - true
➤ YN0000: enableNetwork - If false, the package manager will refuse to use the network if required to - true
➤ YN0000: enableProgressBars - If true, the CLI is allowed to show a progress bar for long-running events - false
➤ YN0000: enableScripts - If true, packages are allowed to have install scripts by default - true
➤ YN0000: enableTimers - If true, the CLI is allowed to print the time spent executing commands - false
➤ YN0000: globalFolder - Folder where are stored the system-wide settings - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - URL of the http proxy that must be used for outgoing http requests - null
➤ YN0000: httpsProxy - URL of the http proxy that must be used for outgoing https requests - null
➤ YN0000: ignorePath - If true, the local executable will be ignored when using the global one - false
➤ YN0000: initLicense - License used when creating packages via the init command - null
➤ YN0000: initScope - Scope used when creating packages via the init command - 'my-test'
➤ YN0000: initVersion - Version used when creating packages via the init command - null
➤ YN0000: lastUpdateCheck - Last timestamp we checked whether new Yarn versions were available - '1555784893958'
➤ YN0000: lockfileFilename - Name of the files where the Yarn dependency tree entries must be stored - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - URL of the selected npm registry (note: npm enterprise isn't supported) - false
➤ YN0000: npmAuthIdent - Authentication identity for the npm registry (_auth in npm and yarn v1) - null
➤ YN0000: npmAuthToken - Authentication token for the npm registry (_authToken in npm and yarn v1) - null
➤ YN0000: npmPublishAccess - Default access of the published packages - null
➤ YN0000: npmPublishRegistry - Registry to push packages to - null
➤ YN0000: npmRegistries - Settings per registry - Map {}
➤ YN0000: npmRegistryServer - URL of the selected npm registry (note: npm enterprise isn't supported) - 'http://yarn.test.registry'
➤ YN0000: npmScopes - Settings per package scope - Map {}
➤ YN0000: pnpDataPath - Path of the file where the PnP data (used by the loader) must be written - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - If true, the PnP data will be inlined along with the generated loader - true
➤ YN0000: pnpFallbackMode - If true, the generated PnP loader will follow the top-level fallback rule - 'none'
➤ YN0000: pnpIgnorePattern - Regex defining a pattern of files that should use the classic resolution - null
➤ YN0000: pnpShebang - String to prepend to the generated PnP script - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - Folder where the unplugged packages must be stored - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - If true, running \`yarn version\` will assume the \`--deferred\` flag unless \`--immediate\` is set - false
➤ YN0000: preferInteractive - If true, the CLI will automatically use the interactive mode when called from a TTY - false
➤ YN0000: progressBarStyle - Which style of progress bar should be used (only when progress bars are enabled) - undefined
➤ YN0000: rcFilename - Name of the files where the configuration can be found - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - List of the hostnames for which http queries are allowed (glob patterns are supported) - [ 'localhost' ]
➤ YN0000: virtualFolder - Folder where the virtual packages (cf doc) will be mapped on the disk - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - Path to the local executable that must be used over the global one - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile and rc in ancestor parent / showing the source) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - <default> - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - <default> - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - <default> - 'throw'
➤ YN0000: defaultLanguageName - <default> - 'node'
➤ YN0000: defaultProtocol - <default> - 'npm:'
➤ YN0000: defaultSemverRangePrefix - <default> - '^'
➤ YN0000: enableAbsoluteVirtuals - <environment> - true
➤ YN0000: enableColors - <default> - false
➤ YN0000: enableGlobalCache - <default> - false
➤ YN0000: enableImmutableCache - <default> - false
➤ YN0000: enableImmutableInstalls - <default> - false
➤ YN0000: enableInlineBuilds - <environment> - false
➤ YN0000: enableMirror - <default> - true
➤ YN0000: enableNetwork - <default> - true
➤ YN0000: enableProgressBars - <environment> - false
➤ YN0000: enableScripts - <default> - true
➤ YN0000: enableTimers - <environment> - false
➤ YN0000: globalFolder - <environment> - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - <default> - null
➤ YN0000: httpsProxy - <default> - null
➤ YN0000: ignorePath - <default> - false
➤ YN0000: initLicense - <default> - null
➤ YN0000: initScope - WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc - 'my-test'
➤ YN0000: initVersion - <default> - null
➤ YN0000: lastUpdateCheck - WORKSPACE_ROOT/.spec-yarnrc - '1555784893958'
➤ YN0000: lockfileFilename - <default> - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - <default> - false
➤ YN0000: npmAuthIdent - <default> - null
➤ YN0000: npmAuthToken - <default> - null
➤ YN0000: npmPublishAccess - <default> - null
➤ YN0000: npmPublishRegistry - <default> - null
➤ YN0000: npmRegistries - <default> - Map {}
➤ YN0000: npmRegistryServer - <environment> - 'http://yarn.test.registry'
➤ YN0000: npmScopes - <default> - Map {}
➤ YN0000: pnpDataPath - <default> - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - <default> - true
➤ YN0000: pnpFallbackMode - <environment> - 'none'
➤ YN0000: pnpIgnorePattern - <default> - null
➤ YN0000: pnpShebang - <default> - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - <default> - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - <default> - false
➤ YN0000: preferInteractive - <default> - false
➤ YN0000: progressBarStyle - <default> - undefined
➤ YN0000: rcFilename - <default> - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - <environment> - [ 'localhost' ]
➤ YN0000: virtualFolder - <default> - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - <default> - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile and rc in ancestor parent / without flags) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - 'throw'
➤ YN0000: defaultLanguageName - 'node'
➤ YN0000: defaultProtocol - 'npm:'
➤ YN0000: defaultSemverRangePrefix - '^'
➤ YN0000: enableAbsoluteVirtuals - true
➤ YN0000: enableColors - false
➤ YN0000: enableGlobalCache - false
➤ YN0000: enableImmutableCache - false
➤ YN0000: enableImmutableInstalls - false
➤ YN0000: enableInlineBuilds - false
➤ YN0000: enableMirror - true
➤ YN0000: enableNetwork - true
➤ YN0000: enableProgressBars - false
➤ YN0000: enableScripts - true
➤ YN0000: enableTimers - false
➤ YN0000: globalFolder - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - null
➤ YN0000: httpsProxy - null
➤ YN0000: ignorePath - false
➤ YN0000: initLicense - null
➤ YN0000: initScope - 'my-test'
➤ YN0000: initVersion - null
➤ YN0000: lastUpdateCheck - '1555784893958'
➤ YN0000: lockfileFilename - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - false
➤ YN0000: npmAuthIdent - null
➤ YN0000: npmAuthToken - null
➤ YN0000: npmPublishAccess - null
➤ YN0000: npmPublishRegistry - null
➤ YN0000: npmRegistries - Map {}
➤ YN0000: npmRegistryServer - 'http://yarn.test.registry'
➤ YN0000: npmScopes - Map {}
➤ YN0000: pnpDataPath - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - true
➤ YN0000: pnpFallbackMode - 'none'
➤ YN0000: pnpIgnorePattern - null
➤ YN0000: pnpShebang - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - false
➤ YN0000: preferInteractive - false
➤ YN0000: progressBarStyle - undefined
➤ YN0000: rcFilename - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - [ 'localhost' ]
➤ YN0000: virtualFolder - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile and rc in home folder / as json) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "{\\"key\\":\\"bstatePath\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/build-state.yml\\",\\"description\\":\\"Path of the file where the current state of the built packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/build-state.yml\\"}
{\\"key\\":\\"cacheFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/cache\\",\\"description\\":\\"Folder where the cache files must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/cache\\"}
{\\"key\\":\\"checksumBehavior\\",\\"effective\\":\\"throw\\",\\"description\\":\\"Enumeration defining what to do when a checksum doesn't match expectations\\",\\"type\\":\\"STRING\\",\\"default\\":\\"throw\\"}
{\\"key\\":\\"defaultLanguageName\\",\\"effective\\":\\"python\\",\\"source\\":\\"HOME/.spec-yarnrc\\",\\"description\\":\\"Default language mode that should be used when a package doesn't offer any insight\\",\\"type\\":\\"STRING\\",\\"default\\":\\"node\\"}
{\\"key\\":\\"defaultProtocol\\",\\"effective\\":\\"npm:\\",\\"description\\":\\"Default resolution protocol used when resolving pure semver and tag ranges\\",\\"type\\":\\"STRING\\",\\"default\\":\\"npm:\\"}
{\\"key\\":\\"defaultSemverRangePrefix\\",\\"effective\\":\\"^\\",\\"description\\":\\"The default save prefix: '^', '~' or ''\\",\\"type\\":\\"STRING\\",\\"default\\":\\"^\\"}
{\\"key\\":\\"enableAbsoluteVirtuals\\",\\"effective\\":true,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the virtual symlinks will use absolute paths if required [non portable!!]\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableColors\\",\\"effective\\":false,\\"description\\":\\"If true, the CLI is allowed to use colors in its output\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableGlobalCache\\",\\"effective\\":false,\\"description\\":\\"If true, the system-wide cache folder will be used regardless of \`cache-folder\`\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableImmutableCache\\",\\"effective\\":false,\\"description\\":\\"If true, the cache is reputed immutable and actions that would modify it will throw\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableImmutableInstalls\\",\\"effective\\":false,\\"description\\":\\"If true, prevents the install command from modifying the lockfile\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableInlineBuilds\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI will print the build output on the command line\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableMirror\\",\\"effective\\":true,\\"description\\":\\"If true, the downloaded packages will be retrieved and stored in both the local and global folders\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableNetwork\\",\\"effective\\":true,\\"description\\":\\"If false, the package manager will refuse to use the network if required to\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableProgressBars\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI is allowed to show a progress bar for long-running events\\",\\"type\\":\\"BOOLEAN\\",\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableScripts\\",\\"effective\\":true,\\"description\\":\\"If true, packages are allowed to have install scripts by default\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableTimers\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI is allowed to print the time spent executing commands\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"globalFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/global\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"Folder where are stored the system-wide settings\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"LOCAL_APP_DATA\\"}
{\\"key\\":\\"httpProxy\\",\\"effective\\":null,\\"description\\":\\"URL of the http proxy that must be used for outgoing http requests\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"httpsProxy\\",\\"effective\\":null,\\"description\\":\\"URL of the http proxy that must be used for outgoing https requests\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"ignorePath\\",\\"effective\\":false,\\"description\\":\\"If true, the local executable will be ignored when using the global one\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"initLicense\\",\\"effective\\":null,\\"description\\":\\"License used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"initScope\\",\\"effective\\":\\"my-test\\",\\"source\\":\\"WORKSPACE_ROOT/.spec-yarnrc\\",\\"description\\":\\"Scope used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"initVersion\\",\\"effective\\":null,\\"description\\":\\"Version used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"lastUpdateCheck\\",\\"effective\\":\\"1555784893958\\",\\"source\\":\\"WORKSPACE_ROOT/.spec-yarnrc\\",\\"description\\":\\"Last timestamp we checked whether new Yarn versions were available\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"lockfileFilename\\",\\"effective\\":\\"yarn.lock\\",\\"description\\":\\"Name of the files where the Yarn dependency tree entries must be stored\\",\\"type\\":\\"STRING\\",\\"default\\":\\"yarn.lock\\"}
{\\"key\\":\\"npmAlwaysAuth\\",\\"effective\\":false,\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"npmAuthIdent\\",\\"effective\\":null,\\"description\\":\\"Authentication identity for the npm registry (_auth in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}
{\\"key\\":\\"npmAuthToken\\",\\"effective\\":null,\\"description\\":\\"Authentication token for the npm registry (_authToken in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}
{\\"key\\":\\"npmPublishAccess\\",\\"effective\\":null,\\"description\\":\\"Default access of the published packages\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"npmPublishRegistry\\",\\"effective\\":null,\\"description\\":\\"Registry to push packages to\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"npmRegistries\\",\\"effective\\":{},\\"description\\":\\"Settings per registry\\",\\"type\\":\\"MAP\\",\\"valueDefinition\\":{\\"description\\":\\"\\",\\"type\\":\\"SHAPE\\",\\"properties\\":{\\"npmAlwaysAuth\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false},\\"npmAuthIdent\\":{\\"description\\":\\"Authentication identity for the npm registry (_auth in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null},\\"npmAuthToken\\":{\\"description\\":\\"Authentication token for the npm registry (_authToken in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}}}}
{\\"key\\":\\"npmRegistryServer\\",\\"effective\\":\\"http://yarn.test.registry\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\"}
{\\"key\\":\\"npmScopes\\",\\"effective\\":{},\\"description\\":\\"Settings per package scope\\",\\"type\\":\\"MAP\\",\\"valueDefinition\\":{\\"description\\":\\"\\",\\"type\\":\\"SHAPE\\",\\"properties\\":{\\"npmPublishRegistry\\":{\\"description\\":\\"Registry to push packages to\\",\\"type\\":\\"STRING\\",\\"default\\":null},\\"npmRegistryServer\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\"}}}}
{\\"key\\":\\"pnpDataPath\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.data.json\\",\\"description\\":\\"Path of the file where the PnP data (used by the loader) must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.data.json\\"}
{\\"key\\":\\"pnpEnableInlining\\",\\"effective\\":true,\\"description\\":\\"If true, the PnP data will be inlined along with the generated loader\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"pnpFallbackMode\\",\\"effective\\":\\"none\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the generated PnP loader will follow the top-level fallback rule\\",\\"type\\":\\"STRING\\",\\"default\\":\\"dependencies-only\\"}
{\\"key\\":\\"pnpIgnorePattern\\",\\"effective\\":null,\\"description\\":\\"Regex defining a pattern of files that should use the classic resolution\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"pnpShebang\\",\\"effective\\":\\"#!/usr/bin/env node\\",\\"description\\":\\"String to prepend to the generated PnP script\\",\\"type\\":\\"STRING\\",\\"default\\":\\"#!/usr/bin/env node\\"}
{\\"key\\":\\"pnpUnpluggedFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/unplugged\\",\\"description\\":\\"Folder where the unplugged packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/unplugged\\"}
{\\"key\\":\\"preferDeferredVersions\\",\\"effective\\":false,\\"description\\":\\"If true, running \`yarn version\` will assume the \`--deferred\` flag unless \`--immediate\` is set\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"preferInteractive\\",\\"effective\\":false,\\"description\\":\\"If true, the CLI will automatically use the interactive mode when called from a TTY\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"progressBarStyle\\",\\"description\\":\\"Which style of progress bar should be used (only when progress bars are enabled)\\",\\"type\\":\\"STRING\\",\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"rcFilename\\",\\"effective\\":\\".spec-yarnrc\\",\\"description\\":\\"Name of the files where the configuration can be found\\",\\"type\\":\\"STRING\\",\\"default\\":\\".spec-yarnrc\\"}
{\\"key\\":\\"unsafeHttpWhitelist\\",\\"effective\\":[\\"localhost\\"],\\"source\\":\\"<environment>\\",\\"description\\":\\"List of the hostnames for which http queries are allowed (glob patterns are supported)\\",\\"type\\":\\"STRING\\",\\"default\\":[],\\"isArray\\":true}
{\\"key\\":\\"virtualFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/virtual\\",\\"description\\":\\"Folder where the virtual packages (cf doc) will be mapped on the disk\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/virtual\\"}
{\\"key\\":\\"yarnPath\\",\\"effective\\":null,\\"description\\":\\"Path to the local executable that must be used over the global one\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":null}
",
}
`;

exports[`Commands config test (folder with rcfile and rc in home folder / showing explanation) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - Path of the file where the current state of the built packages must be stored - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - Folder where the cache files must be written - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - Enumeration defining what to do when a checksum doesn't match expectations - 'throw'
➤ YN0000: defaultLanguageName - Default language mode that should be used when a package doesn't offer any insight - 'python'
➤ YN0000: defaultProtocol - Default resolution protocol used when resolving pure semver and tag ranges - 'npm:'
➤ YN0000: defaultSemverRangePrefix - The default save prefix: '^', '~' or '' - '^'
➤ YN0000: enableAbsoluteVirtuals - If true, the virtual symlinks will use absolute paths if required [non portable!!] - true
➤ YN0000: enableColors - If true, the CLI is allowed to use colors in its output - false
➤ YN0000: enableGlobalCache - If true, the system-wide cache folder will be used regardless of \`cache-folder\` - false
➤ YN0000: enableImmutableCache - If true, the cache is reputed immutable and actions that would modify it will throw - false
➤ YN0000: enableImmutableInstalls - If true, prevents the install command from modifying the lockfile - false
➤ YN0000: enableInlineBuilds - If true, the CLI will print the build output on the command line - false
➤ YN0000: enableMirror - If true, the downloaded packages will be retrieved and stored in both the local and global folders - true
➤ YN0000: enableNetwork - If false, the package manager will refuse to use the network if required to - true
➤ YN0000: enableProgressBars - If true, the CLI is allowed to show a progress bar for long-running events - false
➤ YN0000: enableScripts - If true, packages are allowed to have install scripts by default - true
➤ YN0000: enableTimers - If true, the CLI is allowed to print the time spent executing commands - false
➤ YN0000: globalFolder - Folder where are stored the system-wide settings - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - URL of the http proxy that must be used for outgoing http requests - null
➤ YN0000: httpsProxy - URL of the http proxy that must be used for outgoing https requests - null
➤ YN0000: ignorePath - If true, the local executable will be ignored when using the global one - false
➤ YN0000: initLicense - License used when creating packages via the init command - null
➤ YN0000: initScope - Scope used when creating packages via the init command - 'my-test'
➤ YN0000: initVersion - Version used when creating packages via the init command - null
➤ YN0000: lastUpdateCheck - Last timestamp we checked whether new Yarn versions were available - '1555784893958'
➤ YN0000: lockfileFilename - Name of the files where the Yarn dependency tree entries must be stored - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - URL of the selected npm registry (note: npm enterprise isn't supported) - false
➤ YN0000: npmAuthIdent - Authentication identity for the npm registry (_auth in npm and yarn v1) - null
➤ YN0000: npmAuthToken - Authentication token for the npm registry (_authToken in npm and yarn v1) - null
➤ YN0000: npmPublishAccess - Default access of the published packages - null
➤ YN0000: npmPublishRegistry - Registry to push packages to - null
➤ YN0000: npmRegistries - Settings per registry - Map {}
➤ YN0000: npmRegistryServer - URL of the selected npm registry (note: npm enterprise isn't supported) - 'http://yarn.test.registry'
➤ YN0000: npmScopes - Settings per package scope - Map {}
➤ YN0000: pnpDataPath - Path of the file where the PnP data (used by the loader) must be written - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - If true, the PnP data will be inlined along with the generated loader - true
➤ YN0000: pnpFallbackMode - If true, the generated PnP loader will follow the top-level fallback rule - 'none'
➤ YN0000: pnpIgnorePattern - Regex defining a pattern of files that should use the classic resolution - null
➤ YN0000: pnpShebang - String to prepend to the generated PnP script - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - Folder where the unplugged packages must be stored - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - If true, running \`yarn version\` will assume the \`--deferred\` flag unless \`--immediate\` is set - false
➤ YN0000: preferInteractive - If true, the CLI will automatically use the interactive mode when called from a TTY - false
➤ YN0000: progressBarStyle - Which style of progress bar should be used (only when progress bars are enabled) - undefined
➤ YN0000: rcFilename - Name of the files where the configuration can be found - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - List of the hostnames for which http queries are allowed (glob patterns are supported) - [ 'localhost' ]
➤ YN0000: virtualFolder - Folder where the virtual packages (cf doc) will be mapped on the disk - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - Path to the local executable that must be used over the global one - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile and rc in home folder / showing the source) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - <default> - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - <default> - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - <default> - 'throw'
➤ YN0000: defaultLanguageName - HOME/.spec-yarnrc - 'python'
➤ YN0000: defaultProtocol - <default> - 'npm:'
➤ YN0000: defaultSemverRangePrefix - <default> - '^'
➤ YN0000: enableAbsoluteVirtuals - <environment> - true
➤ YN0000: enableColors - <default> - false
➤ YN0000: enableGlobalCache - <default> - false
➤ YN0000: enableImmutableCache - <default> - false
➤ YN0000: enableImmutableInstalls - <default> - false
➤ YN0000: enableInlineBuilds - <environment> - false
➤ YN0000: enableMirror - <default> - true
➤ YN0000: enableNetwork - <default> - true
➤ YN0000: enableProgressBars - <environment> - false
➤ YN0000: enableScripts - <default> - true
➤ YN0000: enableTimers - <environment> - false
➤ YN0000: globalFolder - <environment> - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - <default> - null
➤ YN0000: httpsProxy - <default> - null
➤ YN0000: ignorePath - <default> - false
➤ YN0000: initLicense - <default> - null
➤ YN0000: initScope - WORKSPACE_ROOT/.spec-yarnrc - 'my-test'
➤ YN0000: initVersion - <default> - null
➤ YN0000: lastUpdateCheck - WORKSPACE_ROOT/.spec-yarnrc - '1555784893958'
➤ YN0000: lockfileFilename - <default> - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - <default> - false
➤ YN0000: npmAuthIdent - <default> - null
➤ YN0000: npmAuthToken - <default> - null
➤ YN0000: npmPublishAccess - <default> - null
➤ YN0000: npmPublishRegistry - <default> - null
➤ YN0000: npmRegistries - <default> - Map {}
➤ YN0000: npmRegistryServer - <environment> - 'http://yarn.test.registry'
➤ YN0000: npmScopes - <default> - Map {}
➤ YN0000: pnpDataPath - <default> - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - <default> - true
➤ YN0000: pnpFallbackMode - <environment> - 'none'
➤ YN0000: pnpIgnorePattern - <default> - null
➤ YN0000: pnpShebang - <default> - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - <default> - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - <default> - false
➤ YN0000: preferInteractive - <default> - false
➤ YN0000: progressBarStyle - <default> - undefined
➤ YN0000: rcFilename - <default> - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - <environment> - [ 'localhost' ]
➤ YN0000: virtualFolder - <default> - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - <default> - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile and rc in home folder / without flags) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - 'throw'
➤ YN0000: defaultLanguageName - 'python'
➤ YN0000: defaultProtocol - 'npm:'
➤ YN0000: defaultSemverRangePrefix - '^'
➤ YN0000: enableAbsoluteVirtuals - true
➤ YN0000: enableColors - false
➤ YN0000: enableGlobalCache - false
➤ YN0000: enableImmutableCache - false
➤ YN0000: enableImmutableInstalls - false
➤ YN0000: enableInlineBuilds - false
➤ YN0000: enableMirror - true
➤ YN0000: enableNetwork - true
➤ YN0000: enableProgressBars - false
➤ YN0000: enableScripts - true
➤ YN0000: enableTimers - false
➤ YN0000: globalFolder - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - null
➤ YN0000: httpsProxy - null
➤ YN0000: ignorePath - false
➤ YN0000: initLicense - null
➤ YN0000: initScope - 'my-test'
➤ YN0000: initVersion - null
➤ YN0000: lastUpdateCheck - '1555784893958'
➤ YN0000: lockfileFilename - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - false
➤ YN0000: npmAuthIdent - null
➤ YN0000: npmAuthToken - null
➤ YN0000: npmPublishAccess - null
➤ YN0000: npmPublishRegistry - null
➤ YN0000: npmRegistries - Map {}
➤ YN0000: npmRegistryServer - 'http://yarn.test.registry'
➤ YN0000: npmScopes - Map {}
➤ YN0000: pnpDataPath - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - true
➤ YN0000: pnpFallbackMode - 'none'
➤ YN0000: pnpIgnorePattern - null
➤ YN0000: pnpShebang - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - false
➤ YN0000: preferInteractive - false
➤ YN0000: progressBarStyle - undefined
➤ YN0000: rcFilename - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - [ 'localhost' ]
➤ YN0000: virtualFolder - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile and rc in parent / as json) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "{\\"key\\":\\"bstatePath\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/build-state.yml\\",\\"description\\":\\"Path of the file where the current state of the built packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/build-state.yml\\"}
{\\"key\\":\\"cacheFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/cache\\",\\"description\\":\\"Folder where the cache files must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/cache\\"}
{\\"key\\":\\"checksumBehavior\\",\\"effective\\":\\"throw\\",\\"description\\":\\"Enumeration defining what to do when a checksum doesn't match expectations\\",\\"type\\":\\"STRING\\",\\"default\\":\\"throw\\"}
{\\"key\\":\\"defaultLanguageName\\",\\"effective\\":\\"node\\",\\"description\\":\\"Default language mode that should be used when a package doesn't offer any insight\\",\\"type\\":\\"STRING\\",\\"default\\":\\"node\\"}
{\\"key\\":\\"defaultProtocol\\",\\"effective\\":\\"npm:\\",\\"description\\":\\"Default resolution protocol used when resolving pure semver and tag ranges\\",\\"type\\":\\"STRING\\",\\"default\\":\\"npm:\\"}
{\\"key\\":\\"defaultSemverRangePrefix\\",\\"effective\\":\\"^\\",\\"description\\":\\"The default save prefix: '^', '~' or ''\\",\\"type\\":\\"STRING\\",\\"default\\":\\"^\\"}
{\\"key\\":\\"enableAbsoluteVirtuals\\",\\"effective\\":true,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the virtual symlinks will use absolute paths if required [non portable!!]\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableColors\\",\\"effective\\":false,\\"description\\":\\"If true, the CLI is allowed to use colors in its output\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableGlobalCache\\",\\"effective\\":false,\\"description\\":\\"If true, the system-wide cache folder will be used regardless of \`cache-folder\`\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableImmutableCache\\",\\"effective\\":false,\\"description\\":\\"If true, the cache is reputed immutable and actions that would modify it will throw\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableImmutableInstalls\\",\\"effective\\":false,\\"description\\":\\"If true, prevents the install command from modifying the lockfile\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableInlineBuilds\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI will print the build output on the command line\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableMirror\\",\\"effective\\":true,\\"description\\":\\"If true, the downloaded packages will be retrieved and stored in both the local and global folders\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableNetwork\\",\\"effective\\":true,\\"description\\":\\"If false, the package manager will refuse to use the network if required to\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableProgressBars\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI is allowed to show a progress bar for long-running events\\",\\"type\\":\\"BOOLEAN\\",\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableScripts\\",\\"effective\\":true,\\"description\\":\\"If true, packages are allowed to have install scripts by default\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableTimers\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI is allowed to print the time spent executing commands\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"globalFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/global\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"Folder where are stored the system-wide settings\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"LOCAL_APP_DATA\\"}
{\\"key\\":\\"httpProxy\\",\\"effective\\":null,\\"description\\":\\"URL of the http proxy that must be used for outgoing http requests\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"httpsProxy\\",\\"effective\\":null,\\"description\\":\\"URL of the http proxy that must be used for outgoing https requests\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"ignorePath\\",\\"effective\\":false,\\"description\\":\\"If true, the local executable will be ignored when using the global one\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"initLicense\\",\\"effective\\":null,\\"description\\":\\"License used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"initScope\\",\\"effective\\":\\"my-test\\",\\"source\\":\\"WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc\\",\\"description\\":\\"Scope used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"initVersion\\",\\"effective\\":null,\\"description\\":\\"Version used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"lastUpdateCheck\\",\\"effective\\":\\"1555784893958\\",\\"source\\":\\"WORKSPACE_ROOT/subfolder/.spec-yarnrc\\",\\"description\\":\\"Last timestamp we checked whether new Yarn versions were available\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"lockfileFilename\\",\\"effective\\":\\"yarn.lock\\",\\"description\\":\\"Name of the files where the Yarn dependency tree entries must be stored\\",\\"type\\":\\"STRING\\",\\"default\\":\\"yarn.lock\\"}
{\\"key\\":\\"npmAlwaysAuth\\",\\"effective\\":false,\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"npmAuthIdent\\",\\"effective\\":null,\\"description\\":\\"Authentication identity for the npm registry (_auth in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}
{\\"key\\":\\"npmAuthToken\\",\\"effective\\":null,\\"description\\":\\"Authentication token for the npm registry (_authToken in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}
{\\"key\\":\\"npmPublishAccess\\",\\"effective\\":null,\\"description\\":\\"Default access of the published packages\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"npmPublishRegistry\\",\\"effective\\":null,\\"description\\":\\"Registry to push packages to\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"npmRegistries\\",\\"effective\\":{},\\"description\\":\\"Settings per registry\\",\\"type\\":\\"MAP\\",\\"valueDefinition\\":{\\"description\\":\\"\\",\\"type\\":\\"SHAPE\\",\\"properties\\":{\\"npmAlwaysAuth\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false},\\"npmAuthIdent\\":{\\"description\\":\\"Authentication identity for the npm registry (_auth in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null},\\"npmAuthToken\\":{\\"description\\":\\"Authentication token for the npm registry (_authToken in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}}}}
{\\"key\\":\\"npmRegistryServer\\",\\"effective\\":\\"http://yarn.test.registry\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\"}
{\\"key\\":\\"npmScopes\\",\\"effective\\":{},\\"description\\":\\"Settings per package scope\\",\\"type\\":\\"MAP\\",\\"valueDefinition\\":{\\"description\\":\\"\\",\\"type\\":\\"SHAPE\\",\\"properties\\":{\\"npmPublishRegistry\\":{\\"description\\":\\"Registry to push packages to\\",\\"type\\":\\"STRING\\",\\"default\\":null},\\"npmRegistryServer\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\"}}}}
{\\"key\\":\\"pnpDataPath\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.data.json\\",\\"description\\":\\"Path of the file where the PnP data (used by the loader) must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.data.json\\"}
{\\"key\\":\\"pnpEnableInlining\\",\\"effective\\":true,\\"description\\":\\"If true, the PnP data will be inlined along with the generated loader\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"pnpFallbackMode\\",\\"effective\\":\\"none\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the generated PnP loader will follow the top-level fallback rule\\",\\"type\\":\\"STRING\\",\\"default\\":\\"dependencies-only\\"}
{\\"key\\":\\"pnpIgnorePattern\\",\\"effective\\":null,\\"description\\":\\"Regex defining a pattern of files that should use the classic resolution\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"pnpShebang\\",\\"effective\\":\\"#!/usr/bin/env node\\",\\"description\\":\\"String to prepend to the generated PnP script\\",\\"type\\":\\"STRING\\",\\"default\\":\\"#!/usr/bin/env node\\"}
{\\"key\\":\\"pnpUnpluggedFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/unplugged\\",\\"description\\":\\"Folder where the unplugged packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/unplugged\\"}
{\\"key\\":\\"preferDeferredVersions\\",\\"effective\\":false,\\"description\\":\\"If true, running \`yarn version\` will assume the \`--deferred\` flag unless \`--immediate\` is set\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"preferInteractive\\",\\"effective\\":false,\\"description\\":\\"If true, the CLI will automatically use the interactive mode when called from a TTY\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"progressBarStyle\\",\\"description\\":\\"Which style of progress bar should be used (only when progress bars are enabled)\\",\\"type\\":\\"STRING\\",\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"rcFilename\\",\\"effective\\":\\".spec-yarnrc\\",\\"description\\":\\"Name of the files where the configuration can be found\\",\\"type\\":\\"STRING\\",\\"default\\":\\".spec-yarnrc\\"}
{\\"key\\":\\"unsafeHttpWhitelist\\",\\"effective\\":[\\"localhost\\"],\\"source\\":\\"<environment>\\",\\"description\\":\\"List of the hostnames for which http queries are allowed (glob patterns are supported)\\",\\"type\\":\\"STRING\\",\\"default\\":[],\\"isArray\\":true}
{\\"key\\":\\"virtualFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/virtual\\",\\"description\\":\\"Folder where the virtual packages (cf doc) will be mapped on the disk\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/virtual\\"}
{\\"key\\":\\"yarnPath\\",\\"effective\\":null,\\"description\\":\\"Path to the local executable that must be used over the global one\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":null}
",
}
`;

exports[`Commands config test (folder with rcfile and rc in parent / showing explanation) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - Path of the file where the current state of the built packages must be stored - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - Folder where the cache files must be written - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - Enumeration defining what to do when a checksum doesn't match expectations - 'throw'
➤ YN0000: defaultLanguageName - Default language mode that should be used when a package doesn't offer any insight - 'node'
➤ YN0000: defaultProtocol - Default resolution protocol used when resolving pure semver and tag ranges - 'npm:'
➤ YN0000: defaultSemverRangePrefix - The default save prefix: '^', '~' or '' - '^'
➤ YN0000: enableAbsoluteVirtuals - If true, the virtual symlinks will use absolute paths if required [non portable!!] - true
➤ YN0000: enableColors - If true, the CLI is allowed to use colors in its output - false
➤ YN0000: enableGlobalCache - If true, the system-wide cache folder will be used regardless of \`cache-folder\` - false
➤ YN0000: enableImmutableCache - If true, the cache is reputed immutable and actions that would modify it will throw - false
➤ YN0000: enableImmutableInstalls - If true, prevents the install command from modifying the lockfile - false
➤ YN0000: enableInlineBuilds - If true, the CLI will print the build output on the command line - false
➤ YN0000: enableMirror - If true, the downloaded packages will be retrieved and stored in both the local and global folders - true
➤ YN0000: enableNetwork - If false, the package manager will refuse to use the network if required to - true
➤ YN0000: enableProgressBars - If true, the CLI is allowed to show a progress bar for long-running events - false
➤ YN0000: enableScripts - If true, packages are allowed to have install scripts by default - true
➤ YN0000: enableTimers - If true, the CLI is allowed to print the time spent executing commands - false
➤ YN0000: globalFolder - Folder where are stored the system-wide settings - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - URL of the http proxy that must be used for outgoing http requests - null
➤ YN0000: httpsProxy - URL of the http proxy that must be used for outgoing https requests - null
➤ YN0000: ignorePath - If true, the local executable will be ignored when using the global one - false
➤ YN0000: initLicense - License used when creating packages via the init command - null
➤ YN0000: initScope - Scope used when creating packages via the init command - 'my-test'
➤ YN0000: initVersion - Version used when creating packages via the init command - null
➤ YN0000: lastUpdateCheck - Last timestamp we checked whether new Yarn versions were available - '1555784893958'
➤ YN0000: lockfileFilename - Name of the files where the Yarn dependency tree entries must be stored - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - URL of the selected npm registry (note: npm enterprise isn't supported) - false
➤ YN0000: npmAuthIdent - Authentication identity for the npm registry (_auth in npm and yarn v1) - null
➤ YN0000: npmAuthToken - Authentication token for the npm registry (_authToken in npm and yarn v1) - null
➤ YN0000: npmPublishAccess - Default access of the published packages - null
➤ YN0000: npmPublishRegistry - Registry to push packages to - null
➤ YN0000: npmRegistries - Settings per registry - Map {}
➤ YN0000: npmRegistryServer - URL of the selected npm registry (note: npm enterprise isn't supported) - 'http://yarn.test.registry'
➤ YN0000: npmScopes - Settings per package scope - Map {}
➤ YN0000: pnpDataPath - Path of the file where the PnP data (used by the loader) must be written - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - If true, the PnP data will be inlined along with the generated loader - true
➤ YN0000: pnpFallbackMode - If true, the generated PnP loader will follow the top-level fallback rule - 'none'
➤ YN0000: pnpIgnorePattern - Regex defining a pattern of files that should use the classic resolution - null
➤ YN0000: pnpShebang - String to prepend to the generated PnP script - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - Folder where the unplugged packages must be stored - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - If true, running \`yarn version\` will assume the \`--deferred\` flag unless \`--immediate\` is set - false
➤ YN0000: preferInteractive - If true, the CLI will automatically use the interactive mode when called from a TTY - false
➤ YN0000: progressBarStyle - Which style of progress bar should be used (only when progress bars are enabled) - undefined
➤ YN0000: rcFilename - Name of the files where the configuration can be found - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - List of the hostnames for which http queries are allowed (glob patterns are supported) - [ 'localhost' ]
➤ YN0000: virtualFolder - Folder where the virtual packages (cf doc) will be mapped on the disk - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - Path to the local executable that must be used over the global one - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile and rc in parent / showing the source) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - <default> - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - <default> - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - <default> - 'throw'
➤ YN0000: defaultLanguageName - <default> - 'node'
➤ YN0000: defaultProtocol - <default> - 'npm:'
➤ YN0000: defaultSemverRangePrefix - <default> - '^'
➤ YN0000: enableAbsoluteVirtuals - <environment> - true
➤ YN0000: enableColors - <default> - false
➤ YN0000: enableGlobalCache - <default> - false
➤ YN0000: enableImmutableCache - <default> - false
➤ YN0000: enableImmutableInstalls - <default> - false
➤ YN0000: enableInlineBuilds - <environment> - false
➤ YN0000: enableMirror - <default> - true
➤ YN0000: enableNetwork - <default> - true
➤ YN0000: enableProgressBars - <environment> - false
➤ YN0000: enableScripts - <default> - true
➤ YN0000: enableTimers - <environment> - false
➤ YN0000: globalFolder - <environment> - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - <default> - null
➤ YN0000: httpsProxy - <default> - null
➤ YN0000: ignorePath - <default> - false
➤ YN0000: initLicense - <default> - null
➤ YN0000: initScope - WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc - 'my-test'
➤ YN0000: initVersion - <default> - null
➤ YN0000: lastUpdateCheck - WORKSPACE_ROOT/subfolder/.spec-yarnrc - '1555784893958'
➤ YN0000: lockfileFilename - <default> - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - <default> - false
➤ YN0000: npmAuthIdent - <default> - null
➤ YN0000: npmAuthToken - <default> - null
➤ YN0000: npmPublishAccess - <default> - null
➤ YN0000: npmPublishRegistry - <default> - null
➤ YN0000: npmRegistries - <default> - Map {}
➤ YN0000: npmRegistryServer - <environment> - 'http://yarn.test.registry'
➤ YN0000: npmScopes - <default> - Map {}
➤ YN0000: pnpDataPath - <default> - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - <default> - true
➤ YN0000: pnpFallbackMode - <environment> - 'none'
➤ YN0000: pnpIgnorePattern - <default> - null
➤ YN0000: pnpShebang - <default> - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - <default> - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - <default> - false
➤ YN0000: preferInteractive - <default> - false
➤ YN0000: progressBarStyle - <default> - undefined
➤ YN0000: rcFilename - <default> - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - <environment> - [ 'localhost' ]
➤ YN0000: virtualFolder - <default> - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - <default> - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile and rc in parent / without flags) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - 'throw'
➤ YN0000: defaultLanguageName - 'node'
➤ YN0000: defaultProtocol - 'npm:'
➤ YN0000: defaultSemverRangePrefix - '^'
➤ YN0000: enableAbsoluteVirtuals - true
➤ YN0000: enableColors - false
➤ YN0000: enableGlobalCache - false
➤ YN0000: enableImmutableCache - false
➤ YN0000: enableImmutableInstalls - false
➤ YN0000: enableInlineBuilds - false
➤ YN0000: enableMirror - true
➤ YN0000: enableNetwork - true
➤ YN0000: enableProgressBars - false
➤ YN0000: enableScripts - true
➤ YN0000: enableTimers - false
➤ YN0000: globalFolder - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - null
➤ YN0000: httpsProxy - null
➤ YN0000: ignorePath - false
➤ YN0000: initLicense - null
➤ YN0000: initScope - 'my-test'
➤ YN0000: initVersion - null
➤ YN0000: lastUpdateCheck - '1555784893958'
➤ YN0000: lockfileFilename - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - false
➤ YN0000: npmAuthIdent - null
➤ YN0000: npmAuthToken - null
➤ YN0000: npmPublishAccess - null
➤ YN0000: npmPublishRegistry - null
➤ YN0000: npmRegistries - Map {}
➤ YN0000: npmRegistryServer - 'http://yarn.test.registry'
➤ YN0000: npmScopes - Map {}
➤ YN0000: pnpDataPath - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - true
➤ YN0000: pnpFallbackMode - 'none'
➤ YN0000: pnpIgnorePattern - null
➤ YN0000: pnpShebang - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - false
➤ YN0000: preferInteractive - false
➤ YN0000: progressBarStyle - undefined
➤ YN0000: rcFilename - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - [ 'localhost' ]
➤ YN0000: virtualFolder - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile without trailing newline / as json) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "{\\"key\\":\\"bstatePath\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/build-state.yml\\",\\"description\\":\\"Path of the file where the current state of the built packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/build-state.yml\\"}
{\\"key\\":\\"cacheFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/cache\\",\\"description\\":\\"Folder where the cache files must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/cache\\"}
{\\"key\\":\\"checksumBehavior\\",\\"effective\\":\\"throw\\",\\"description\\":\\"Enumeration defining what to do when a checksum doesn't match expectations\\",\\"type\\":\\"STRING\\",\\"default\\":\\"throw\\"}
{\\"key\\":\\"defaultLanguageName\\",\\"effective\\":\\"node\\",\\"description\\":\\"Default language mode that should be used when a package doesn't offer any insight\\",\\"type\\":\\"STRING\\",\\"default\\":\\"node\\"}
{\\"key\\":\\"defaultProtocol\\",\\"effective\\":\\"npm:\\",\\"description\\":\\"Default resolution protocol used when resolving pure semver and tag ranges\\",\\"type\\":\\"STRING\\",\\"default\\":\\"npm:\\"}
{\\"key\\":\\"defaultSemverRangePrefix\\",\\"effective\\":\\"^\\",\\"description\\":\\"The default save prefix: '^', '~' or ''\\",\\"type\\":\\"STRING\\",\\"default\\":\\"^\\"}
{\\"key\\":\\"enableAbsoluteVirtuals\\",\\"effective\\":true,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the virtual symlinks will use absolute paths if required [non portable!!]\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableColors\\",\\"effective\\":false,\\"description\\":\\"If true, the CLI is allowed to use colors in its output\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableGlobalCache\\",\\"effective\\":false,\\"description\\":\\"If true, the system-wide cache folder will be used regardless of \`cache-folder\`\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableImmutableCache\\",\\"effective\\":false,\\"description\\":\\"If true, the cache is reputed immutable and actions that would modify it will throw\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableImmutableInstalls\\",\\"effective\\":false,\\"description\\":\\"If true, prevents the install command from modifying the lockfile\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableInlineBuilds\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI will print the build output on the command line\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableMirror\\",\\"effective\\":true,\\"description\\":\\"If true, the downloaded packages will be retrieved and stored in both the local and global folders\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableNetwork\\",\\"effective\\":true,\\"description\\":\\"If false, the package manager will refuse to use the network if required to\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableProgressBars\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI is allowed to show a progress bar for long-running events\\",\\"type\\":\\"BOOLEAN\\",\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableScripts\\",\\"effective\\":true,\\"description\\":\\"If true, packages are allowed to have install scripts by default\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableTimers\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI is allowed to print the time spent executing commands\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"globalFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/global\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"Folder where are stored the system-wide settings\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"LOCAL_APP_DATA\\"}
{\\"key\\":\\"httpProxy\\",\\"effective\\":null,\\"description\\":\\"URL of the http proxy that must be used for outgoing http requests\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"httpsProxy\\",\\"effective\\":null,\\"description\\":\\"URL of the http proxy that must be used for outgoing https requests\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"ignorePath\\",\\"effective\\":false,\\"description\\":\\"If true, the local executable will be ignored when using the global one\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"initLicense\\",\\"effective\\":null,\\"description\\":\\"License used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"initScope\\",\\"effective\\":\\"my-test\\",\\"source\\":\\"WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc\\",\\"description\\":\\"Scope used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"initVersion\\",\\"effective\\":null,\\"description\\":\\"Version used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"lastUpdateCheck\\",\\"effective\\":null,\\"description\\":\\"Last timestamp we checked whether new Yarn versions were available\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"lockfileFilename\\",\\"effective\\":\\"yarn.lock\\",\\"description\\":\\"Name of the files where the Yarn dependency tree entries must be stored\\",\\"type\\":\\"STRING\\",\\"default\\":\\"yarn.lock\\"}
{\\"key\\":\\"npmAlwaysAuth\\",\\"effective\\":false,\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"npmAuthIdent\\",\\"effective\\":null,\\"description\\":\\"Authentication identity for the npm registry (_auth in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}
{\\"key\\":\\"npmAuthToken\\",\\"effective\\":null,\\"description\\":\\"Authentication token for the npm registry (_authToken in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}
{\\"key\\":\\"npmPublishAccess\\",\\"effective\\":null,\\"description\\":\\"Default access of the published packages\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"npmPublishRegistry\\",\\"effective\\":null,\\"description\\":\\"Registry to push packages to\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"npmRegistries\\",\\"effective\\":{},\\"description\\":\\"Settings per registry\\",\\"type\\":\\"MAP\\",\\"valueDefinition\\":{\\"description\\":\\"\\",\\"type\\":\\"SHAPE\\",\\"properties\\":{\\"npmAlwaysAuth\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false},\\"npmAuthIdent\\":{\\"description\\":\\"Authentication identity for the npm registry (_auth in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null},\\"npmAuthToken\\":{\\"description\\":\\"Authentication token for the npm registry (_authToken in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}}}}
{\\"key\\":\\"npmRegistryServer\\",\\"effective\\":\\"http://yarn.test.registry\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\"}
{\\"key\\":\\"npmScopes\\",\\"effective\\":{},\\"description\\":\\"Settings per package scope\\",\\"type\\":\\"MAP\\",\\"valueDefinition\\":{\\"description\\":\\"\\",\\"type\\":\\"SHAPE\\",\\"properties\\":{\\"npmPublishRegistry\\":{\\"description\\":\\"Registry to push packages to\\",\\"type\\":\\"STRING\\",\\"default\\":null},\\"npmRegistryServer\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\"}}}}
{\\"key\\":\\"pnpDataPath\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.data.json\\",\\"description\\":\\"Path of the file where the PnP data (used by the loader) must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.data.json\\"}
{\\"key\\":\\"pnpEnableInlining\\",\\"effective\\":true,\\"description\\":\\"If true, the PnP data will be inlined along with the generated loader\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"pnpFallbackMode\\",\\"effective\\":\\"none\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the generated PnP loader will follow the top-level fallback rule\\",\\"type\\":\\"STRING\\",\\"default\\":\\"dependencies-only\\"}
{\\"key\\":\\"pnpIgnorePattern\\",\\"effective\\":null,\\"description\\":\\"Regex defining a pattern of files that should use the classic resolution\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"pnpShebang\\",\\"effective\\":\\"#!/usr/bin/env node\\",\\"description\\":\\"String to prepend to the generated PnP script\\",\\"type\\":\\"STRING\\",\\"default\\":\\"#!/usr/bin/env node\\"}
{\\"key\\":\\"pnpUnpluggedFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/unplugged\\",\\"description\\":\\"Folder where the unplugged packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/unplugged\\"}
{\\"key\\":\\"preferDeferredVersions\\",\\"effective\\":false,\\"description\\":\\"If true, running \`yarn version\` will assume the \`--deferred\` flag unless \`--immediate\` is set\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"preferInteractive\\",\\"effective\\":false,\\"description\\":\\"If true, the CLI will automatically use the interactive mode when called from a TTY\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"progressBarStyle\\",\\"description\\":\\"Which style of progress bar should be used (only when progress bars are enabled)\\",\\"type\\":\\"STRING\\",\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"rcFilename\\",\\"effective\\":\\".spec-yarnrc\\",\\"description\\":\\"Name of the files where the configuration can be found\\",\\"type\\":\\"STRING\\",\\"default\\":\\".spec-yarnrc\\"}
{\\"key\\":\\"unsafeHttpWhitelist\\",\\"effective\\":[\\"localhost\\"],\\"source\\":\\"<environment>\\",\\"description\\":\\"List of the hostnames for which http queries are allowed (glob patterns are supported)\\",\\"type\\":\\"STRING\\",\\"default\\":[],\\"isArray\\":true}
{\\"key\\":\\"virtualFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/virtual\\",\\"description\\":\\"Folder where the virtual packages (cf doc) will be mapped on the disk\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/virtual\\"}
{\\"key\\":\\"yarnPath\\",\\"effective\\":null,\\"description\\":\\"Path to the local executable that must be used over the global one\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":null}
",
}
`;

exports[`Commands config test (folder with rcfile without trailing newline / showing explanation) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - Path of the file where the current state of the built packages must be stored - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - Folder where the cache files must be written - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - Enumeration defining what to do when a checksum doesn't match expectations - 'throw'
➤ YN0000: defaultLanguageName - Default language mode that should be used when a package doesn't offer any insight - 'node'
➤ YN0000: defaultProtocol - Default resolution protocol used when resolving pure semver and tag ranges - 'npm:'
➤ YN0000: defaultSemverRangePrefix - The default save prefix: '^', '~' or '' - '^'
➤ YN0000: enableAbsoluteVirtuals - If true, the virtual symlinks will use absolute paths if required [non portable!!] - true
➤ YN0000: enableColors - If true, the CLI is allowed to use colors in its output - false
➤ YN0000: enableGlobalCache - If true, the system-wide cache folder will be used regardless of \`cache-folder\` - false
➤ YN0000: enableImmutableCache - If true, the cache is reputed immutable and actions that would modify it will throw - false
➤ YN0000: enableImmutableInstalls - If true, prevents the install command from modifying the lockfile - false
➤ YN0000: enableInlineBuilds - If true, the CLI will print the build output on the command line - false
➤ YN0000: enableMirror - If true, the downloaded packages will be retrieved and stored in both the local and global folders - true
➤ YN0000: enableNetwork - If false, the package manager will refuse to use the network if required to - true
➤ YN0000: enableProgressBars - If true, the CLI is allowed to show a progress bar for long-running events - false
➤ YN0000: enableScripts - If true, packages are allowed to have install scripts by default - true
➤ YN0000: enableTimers - If true, the CLI is allowed to print the time spent executing commands - false
➤ YN0000: globalFolder - Folder where are stored the system-wide settings - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - URL of the http proxy that must be used for outgoing http requests - null
➤ YN0000: httpsProxy - URL of the http proxy that must be used for outgoing https requests - null
➤ YN0000: ignorePath - If true, the local executable will be ignored when using the global one - false
➤ YN0000: initLicense - License used when creating packages via the init command - null
➤ YN0000: initScope - Scope used when creating packages via the init command - 'my-test'
➤ YN0000: initVersion - Version used when creating packages via the init command - null
➤ YN0000: lastUpdateCheck - Last timestamp we checked whether new Yarn versions were available - null
➤ YN0000: lockfileFilename - Name of the files where the Yarn dependency tree entries must be stored - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - URL of the selected npm registry (note: npm enterprise isn't supported) - false
➤ YN0000: npmAuthIdent - Authentication identity for the npm registry (_auth in npm and yarn v1) - null
➤ YN0000: npmAuthToken - Authentication token for the npm registry (_authToken in npm and yarn v1) - null
➤ YN0000: npmPublishAccess - Default access of the published packages - null
➤ YN0000: npmPublishRegistry - Registry to push packages to - null
➤ YN0000: npmRegistries - Settings per registry - Map {}
➤ YN0000: npmRegistryServer - URL of the selected npm registry (note: npm enterprise isn't supported) - 'http://yarn.test.registry'
➤ YN0000: npmScopes - Settings per package scope - Map {}
➤ YN0000: pnpDataPath - Path of the file where the PnP data (used by the loader) must be written - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - If true, the PnP data will be inlined along with the generated loader - true
➤ YN0000: pnpFallbackMode - If true, the generated PnP loader will follow the top-level fallback rule - 'none'
➤ YN0000: pnpIgnorePattern - Regex defining a pattern of files that should use the classic resolution - null
➤ YN0000: pnpShebang - String to prepend to the generated PnP script - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - Folder where the unplugged packages must be stored - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - If true, running \`yarn version\` will assume the \`--deferred\` flag unless \`--immediate\` is set - false
➤ YN0000: preferInteractive - If true, the CLI will automatically use the interactive mode when called from a TTY - false
➤ YN0000: progressBarStyle - Which style of progress bar should be used (only when progress bars are enabled) - undefined
➤ YN0000: rcFilename - Name of the files where the configuration can be found - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - List of the hostnames for which http queries are allowed (glob patterns are supported) - [ 'localhost' ]
➤ YN0000: virtualFolder - Folder where the virtual packages (cf doc) will be mapped on the disk - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - Path to the local executable that must be used over the global one - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile without trailing newline / showing the source) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - <default> - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - <default> - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - <default> - 'throw'
➤ YN0000: defaultLanguageName - <default> - 'node'
➤ YN0000: defaultProtocol - <default> - 'npm:'
➤ YN0000: defaultSemverRangePrefix - <default> - '^'
➤ YN0000: enableAbsoluteVirtuals - <environment> - true
➤ YN0000: enableColors - <default> - false
➤ YN0000: enableGlobalCache - <default> - false
➤ YN0000: enableImmutableCache - <default> - false
➤ YN0000: enableImmutableInstalls - <default> - false
➤ YN0000: enableInlineBuilds - <environment> - false
➤ YN0000: enableMirror - <default> - true
➤ YN0000: enableNetwork - <default> - true
➤ YN0000: enableProgressBars - <environment> - false
➤ YN0000: enableScripts - <default> - true
➤ YN0000: enableTimers - <environment> - false
➤ YN0000: globalFolder - <environment> - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - <default> - null
➤ YN0000: httpsProxy - <default> - null
➤ YN0000: ignorePath - <default> - false
➤ YN0000: initLicense - <default> - null
➤ YN0000: initScope - WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc - 'my-test'
➤ YN0000: initVersion - <default> - null
➤ YN0000: lastUpdateCheck - <default> - null
➤ YN0000: lockfileFilename - <default> - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - <default> - false
➤ YN0000: npmAuthIdent - <default> - null
➤ YN0000: npmAuthToken - <default> - null
➤ YN0000: npmPublishAccess - <default> - null
➤ YN0000: npmPublishRegistry - <default> - null
➤ YN0000: npmRegistries - <default> - Map {}
➤ YN0000: npmRegistryServer - <environment> - 'http://yarn.test.registry'
➤ YN0000: npmScopes - <default> - Map {}
➤ YN0000: pnpDataPath - <default> - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - <default> - true
➤ YN0000: pnpFallbackMode - <environment> - 'none'
➤ YN0000: pnpIgnorePattern - <default> - null
➤ YN0000: pnpShebang - <default> - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - <default> - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - <default> - false
➤ YN0000: preferInteractive - <default> - false
➤ YN0000: progressBarStyle - <default> - undefined
➤ YN0000: rcFilename - <default> - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - <environment> - [ 'localhost' ]
➤ YN0000: virtualFolder - <default> - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - <default> - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder with rcfile without trailing newline / without flags) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - 'throw'
➤ YN0000: defaultLanguageName - 'node'
➤ YN0000: defaultProtocol - 'npm:'
➤ YN0000: defaultSemverRangePrefix - '^'
➤ YN0000: enableAbsoluteVirtuals - true
➤ YN0000: enableColors - false
➤ YN0000: enableGlobalCache - false
➤ YN0000: enableImmutableCache - false
➤ YN0000: enableImmutableInstalls - false
➤ YN0000: enableInlineBuilds - false
➤ YN0000: enableMirror - true
➤ YN0000: enableNetwork - true
➤ YN0000: enableProgressBars - false
➤ YN0000: enableScripts - true
➤ YN0000: enableTimers - false
➤ YN0000: globalFolder - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - null
➤ YN0000: httpsProxy - null
➤ YN0000: ignorePath - false
➤ YN0000: initLicense - null
➤ YN0000: initScope - 'my-test'
➤ YN0000: initVersion - null
➤ YN0000: lastUpdateCheck - null
➤ YN0000: lockfileFilename - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - false
➤ YN0000: npmAuthIdent - null
➤ YN0000: npmAuthToken - null
➤ YN0000: npmPublishAccess - null
➤ YN0000: npmPublishRegistry - null
➤ YN0000: npmRegistries - Map {}
➤ YN0000: npmRegistryServer - 'http://yarn.test.registry'
➤ YN0000: npmScopes - Map {}
➤ YN0000: pnpDataPath - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - true
➤ YN0000: pnpFallbackMode - 'none'
➤ YN0000: pnpIgnorePattern - null
➤ YN0000: pnpShebang - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - false
➤ YN0000: preferInteractive - false
➤ YN0000: progressBarStyle - undefined
➤ YN0000: rcFilename - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - [ 'localhost' ]
➤ YN0000: virtualFolder - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder without rcfile in ancestry / as json) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "{\\"key\\":\\"bstatePath\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/build-state.yml\\",\\"description\\":\\"Path of the file where the current state of the built packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/build-state.yml\\"}
{\\"key\\":\\"cacheFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/cache\\",\\"description\\":\\"Folder where the cache files must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/cache\\"}
{\\"key\\":\\"checksumBehavior\\",\\"effective\\":\\"throw\\",\\"description\\":\\"Enumeration defining what to do when a checksum doesn't match expectations\\",\\"type\\":\\"STRING\\",\\"default\\":\\"throw\\"}
{\\"key\\":\\"defaultLanguageName\\",\\"effective\\":\\"node\\",\\"description\\":\\"Default language mode that should be used when a package doesn't offer any insight\\",\\"type\\":\\"STRING\\",\\"default\\":\\"node\\"}
{\\"key\\":\\"defaultProtocol\\",\\"effective\\":\\"npm:\\",\\"description\\":\\"Default resolution protocol used when resolving pure semver and tag ranges\\",\\"type\\":\\"STRING\\",\\"default\\":\\"npm:\\"}
{\\"key\\":\\"defaultSemverRangePrefix\\",\\"effective\\":\\"^\\",\\"description\\":\\"The default save prefix: '^', '~' or ''\\",\\"type\\":\\"STRING\\",\\"default\\":\\"^\\"}
{\\"key\\":\\"enableAbsoluteVirtuals\\",\\"effective\\":true,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the virtual symlinks will use absolute paths if required [non portable!!]\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableColors\\",\\"effective\\":false,\\"description\\":\\"If true, the CLI is allowed to use colors in its output\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableGlobalCache\\",\\"effective\\":false,\\"description\\":\\"If true, the system-wide cache folder will be used regardless of \`cache-folder\`\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableImmutableCache\\",\\"effective\\":false,\\"description\\":\\"If true, the cache is reputed immutable and actions that would modify it will throw\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableImmutableInstalls\\",\\"effective\\":false,\\"description\\":\\"If true, prevents the install command from modifying the lockfile\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"enableInlineBuilds\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI will print the build output on the command line\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableMirror\\",\\"effective\\":true,\\"description\\":\\"If true, the downloaded packages will be retrieved and stored in both the local and global folders\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableNetwork\\",\\"effective\\":true,\\"description\\":\\"If false, the package manager will refuse to use the network if required to\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableProgressBars\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI is allowed to show a progress bar for long-running events\\",\\"type\\":\\"BOOLEAN\\",\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"enableScripts\\",\\"effective\\":true,\\"description\\":\\"If true, packages are allowed to have install scripts by default\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"enableTimers\\",\\"effective\\":false,\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the CLI is allowed to print the time spent executing commands\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"globalFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/global\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"Folder where are stored the system-wide settings\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"LOCAL_APP_DATA\\"}
{\\"key\\":\\"httpProxy\\",\\"effective\\":null,\\"description\\":\\"URL of the http proxy that must be used for outgoing http requests\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"httpsProxy\\",\\"effective\\":null,\\"description\\":\\"URL of the http proxy that must be used for outgoing https requests\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"ignorePath\\",\\"effective\\":false,\\"description\\":\\"If true, the local executable will be ignored when using the global one\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"initLicense\\",\\"effective\\":null,\\"description\\":\\"License used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"initScope\\",\\"effective\\":null,\\"description\\":\\"Scope used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"initVersion\\",\\"effective\\":null,\\"description\\":\\"Version used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"lastUpdateCheck\\",\\"effective\\":null,\\"description\\":\\"Last timestamp we checked whether new Yarn versions were available\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"lockfileFilename\\",\\"effective\\":\\"yarn.lock\\",\\"description\\":\\"Name of the files where the Yarn dependency tree entries must be stored\\",\\"type\\":\\"STRING\\",\\"default\\":\\"yarn.lock\\"}
{\\"key\\":\\"npmAlwaysAuth\\",\\"effective\\":false,\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"npmAuthIdent\\",\\"effective\\":null,\\"description\\":\\"Authentication identity for the npm registry (_auth in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}
{\\"key\\":\\"npmAuthToken\\",\\"effective\\":null,\\"description\\":\\"Authentication token for the npm registry (_authToken in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}
{\\"key\\":\\"npmPublishAccess\\",\\"effective\\":null,\\"description\\":\\"Default access of the published packages\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"npmPublishRegistry\\",\\"effective\\":null,\\"description\\":\\"Registry to push packages to\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"npmRegistries\\",\\"effective\\":{},\\"description\\":\\"Settings per registry\\",\\"type\\":\\"MAP\\",\\"valueDefinition\\":{\\"description\\":\\"\\",\\"type\\":\\"SHAPE\\",\\"properties\\":{\\"npmAlwaysAuth\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false},\\"npmAuthIdent\\":{\\"description\\":\\"Authentication identity for the npm registry (_auth in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null},\\"npmAuthToken\\":{\\"description\\":\\"Authentication token for the npm registry (_authToken in npm and yarn v1)\\",\\"type\\":\\"SECRET\\",\\"default\\":null}}}}
{\\"key\\":\\"npmRegistryServer\\",\\"effective\\":\\"http://yarn.test.registry\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\"}
{\\"key\\":\\"npmScopes\\",\\"effective\\":{},\\"description\\":\\"Settings per package scope\\",\\"type\\":\\"MAP\\",\\"valueDefinition\\":{\\"description\\":\\"\\",\\"type\\":\\"SHAPE\\",\\"properties\\":{\\"npmPublishRegistry\\":{\\"description\\":\\"Registry to push packages to\\",\\"type\\":\\"STRING\\",\\"default\\":null},\\"npmRegistryServer\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\"}}}}
{\\"key\\":\\"pnpDataPath\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.data.json\\",\\"description\\":\\"Path of the file where the PnP data (used by the loader) must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.data.json\\"}
{\\"key\\":\\"pnpEnableInlining\\",\\"effective\\":true,\\"description\\":\\"If true, the PnP data will be inlined along with the generated loader\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true}
{\\"key\\":\\"pnpFallbackMode\\",\\"effective\\":\\"none\\",\\"source\\":\\"<environment>\\",\\"description\\":\\"If true, the generated PnP loader will follow the top-level fallback rule\\",\\"type\\":\\"STRING\\",\\"default\\":\\"dependencies-only\\"}
{\\"key\\":\\"pnpIgnorePattern\\",\\"effective\\":null,\\"description\\":\\"Regex defining a pattern of files that should use the classic resolution\\",\\"type\\":\\"STRING\\",\\"default\\":null}
{\\"key\\":\\"pnpShebang\\",\\"effective\\":\\"#!/usr/bin/env node\\",\\"description\\":\\"String to prepend to the generated PnP script\\",\\"type\\":\\"STRING\\",\\"default\\":\\"#!/usr/bin/env node\\"}
{\\"key\\":\\"pnpUnpluggedFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/unplugged\\",\\"description\\":\\"Folder where the unplugged packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/unplugged\\"}
{\\"key\\":\\"preferDeferredVersions\\",\\"effective\\":false,\\"description\\":\\"If true, running \`yarn version\` will assume the \`--deferred\` flag unless \`--immediate\` is set\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"preferInteractive\\",\\"effective\\":false,\\"description\\":\\"If true, the CLI will automatically use the interactive mode when called from a TTY\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false}
{\\"key\\":\\"progressBarStyle\\",\\"description\\":\\"Which style of progress bar should be used (only when progress bars are enabled)\\",\\"type\\":\\"STRING\\",\\"defaultText\\":\\"<dynamic>\\"}
{\\"key\\":\\"rcFilename\\",\\"effective\\":\\".spec-yarnrc\\",\\"description\\":\\"Name of the files where the configuration can be found\\",\\"type\\":\\"STRING\\",\\"default\\":\\".spec-yarnrc\\"}
{\\"key\\":\\"unsafeHttpWhitelist\\",\\"effective\\":[\\"localhost\\"],\\"source\\":\\"<environment>\\",\\"description\\":\\"List of the hostnames for which http queries are allowed (glob patterns are supported)\\",\\"type\\":\\"STRING\\",\\"default\\":[],\\"isArray\\":true}
{\\"key\\":\\"virtualFolder\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/virtual\\",\\"description\\":\\"Folder where the virtual packages (cf doc) will be mapped on the disk\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/virtual\\"}
{\\"key\\":\\"yarnPath\\",\\"effective\\":null,\\"description\\":\\"Path to the local executable that must be used over the global one\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":null}
",
}
`;

exports[`Commands config test (folder without rcfile in ancestry / showing explanation) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - Path of the file where the current state of the built packages must be stored - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - Folder where the cache files must be written - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - Enumeration defining what to do when a checksum doesn't match expectations - 'throw'
➤ YN0000: defaultLanguageName - Default language mode that should be used when a package doesn't offer any insight - 'node'
➤ YN0000: defaultProtocol - Default resolution protocol used when resolving pure semver and tag ranges - 'npm:'
➤ YN0000: defaultSemverRangePrefix - The default save prefix: '^', '~' or '' - '^'
➤ YN0000: enableAbsoluteVirtuals - If true, the virtual symlinks will use absolute paths if required [non portable!!] - true
➤ YN0000: enableColors - If true, the CLI is allowed to use colors in its output - false
➤ YN0000: enableGlobalCache - If true, the system-wide cache folder will be used regardless of \`cache-folder\` - false
➤ YN0000: enableImmutableCache - If true, the cache is reputed immutable and actions that would modify it will throw - false
➤ YN0000: enableImmutableInstalls - If true, prevents the install command from modifying the lockfile - false
➤ YN0000: enableInlineBuilds - If true, the CLI will print the build output on the command line - false
➤ YN0000: enableMirror - If true, the downloaded packages will be retrieved and stored in both the local and global folders - true
➤ YN0000: enableNetwork - If false, the package manager will refuse to use the network if required to - true
➤ YN0000: enableProgressBars - If true, the CLI is allowed to show a progress bar for long-running events - false
➤ YN0000: enableScripts - If true, packages are allowed to have install scripts by default - true
➤ YN0000: enableTimers - If true, the CLI is allowed to print the time spent executing commands - false
➤ YN0000: globalFolder - Folder where are stored the system-wide settings - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - URL of the http proxy that must be used for outgoing http requests - null
➤ YN0000: httpsProxy - URL of the http proxy that must be used for outgoing https requests - null
➤ YN0000: ignorePath - If true, the local executable will be ignored when using the global one - false
➤ YN0000: initLicense - License used when creating packages via the init command - null
➤ YN0000: initScope - Scope used when creating packages via the init command - null
➤ YN0000: initVersion - Version used when creating packages via the init command - null
➤ YN0000: lastUpdateCheck - Last timestamp we checked whether new Yarn versions were available - null
➤ YN0000: lockfileFilename - Name of the files where the Yarn dependency tree entries must be stored - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - URL of the selected npm registry (note: npm enterprise isn't supported) - false
➤ YN0000: npmAuthIdent - Authentication identity for the npm registry (_auth in npm and yarn v1) - null
➤ YN0000: npmAuthToken - Authentication token for the npm registry (_authToken in npm and yarn v1) - null
➤ YN0000: npmPublishAccess - Default access of the published packages - null
➤ YN0000: npmPublishRegistry - Registry to push packages to - null
➤ YN0000: npmRegistries - Settings per registry - Map {}
➤ YN0000: npmRegistryServer - URL of the selected npm registry (note: npm enterprise isn't supported) - 'http://yarn.test.registry'
➤ YN0000: npmScopes - Settings per package scope - Map {}
➤ YN0000: pnpDataPath - Path of the file where the PnP data (used by the loader) must be written - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - If true, the PnP data will be inlined along with the generated loader - true
➤ YN0000: pnpFallbackMode - If true, the generated PnP loader will follow the top-level fallback rule - 'none'
➤ YN0000: pnpIgnorePattern - Regex defining a pattern of files that should use the classic resolution - null
➤ YN0000: pnpShebang - String to prepend to the generated PnP script - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - Folder where the unplugged packages must be stored - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - If true, running \`yarn version\` will assume the \`--deferred\` flag unless \`--immediate\` is set - false
➤ YN0000: preferInteractive - If true, the CLI will automatically use the interactive mode when called from a TTY - false
➤ YN0000: progressBarStyle - Which style of progress bar should be used (only when progress bars are enabled) - undefined
➤ YN0000: rcFilename - Name of the files where the configuration can be found - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - List of the hostnames for which http queries are allowed (glob patterns are supported) - [ 'localhost' ]
➤ YN0000: virtualFolder - Folder where the virtual packages (cf doc) will be mapped on the disk - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - Path to the local executable that must be used over the global one - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder without rcfile in ancestry / showing the source) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - <default> - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - <default> - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - <default> - 'throw'
➤ YN0000: defaultLanguageName - <default> - 'node'
➤ YN0000: defaultProtocol - <default> - 'npm:'
➤ YN0000: defaultSemverRangePrefix - <default> - '^'
➤ YN0000: enableAbsoluteVirtuals - <environment> - true
➤ YN0000: enableColors - <default> - false
➤ YN0000: enableGlobalCache - <default> - false
➤ YN0000: enableImmutableCache - <default> - false
➤ YN0000: enableImmutableInstalls - <default> - false
➤ YN0000: enableInlineBuilds - <environment> - false
➤ YN0000: enableMirror - <default> - true
➤ YN0000: enableNetwork - <default> - true
➤ YN0000: enableProgressBars - <environment> - false
➤ YN0000: enableScripts - <default> - true
➤ YN0000: enableTimers - <environment> - false
➤ YN0000: globalFolder - <environment> - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - <default> - null
➤ YN0000: httpsProxy - <default> - null
➤ YN0000: ignorePath - <default> - false
➤ YN0000: initLicense - <default> - null
➤ YN0000: initScope - <default> - null
➤ YN0000: initVersion - <default> - null
➤ YN0000: lastUpdateCheck - <default> - null
➤ YN0000: lockfileFilename - <default> - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - <default> - false
➤ YN0000: npmAuthIdent - <default> - null
➤ YN0000: npmAuthToken - <default> - null
➤ YN0000: npmPublishAccess - <default> - null
➤ YN0000: npmPublishRegistry - <default> - null
➤ YN0000: npmRegistries - <default> - Map {}
➤ YN0000: npmRegistryServer - <environment> - 'http://yarn.test.registry'
➤ YN0000: npmScopes - <default> - Map {}
➤ YN0000: pnpDataPath - <default> - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - <default> - true
➤ YN0000: pnpFallbackMode - <environment> - 'none'
➤ YN0000: pnpIgnorePattern - <default> - null
➤ YN0000: pnpShebang - <default> - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - <default> - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - <default> - false
➤ YN0000: preferInteractive - <default> - false
➤ YN0000: progressBarStyle - <default> - undefined
➤ YN0000: rcFilename - <default> - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - <environment> - [ 'localhost' ]
➤ YN0000: virtualFolder - <default> - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - <default> - null
➤ YN0000: Done
",
}
`;

exports[`Commands config test (folder without rcfile in ancestry / without flags) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "➤ YN0000: bstatePath - 'WORKSPACE_ROOT/.yarn/build-state.yml'
➤ YN0000: cacheFolder - 'WORKSPACE_ROOT/.yarn/cache'
➤ YN0000: checksumBehavior - 'throw'
➤ YN0000: defaultLanguageName - 'node'
➤ YN0000: defaultProtocol - 'npm:'
➤ YN0000: defaultSemverRangePrefix - '^'
➤ YN0000: enableAbsoluteVirtuals - true
➤ YN0000: enableColors - false
➤ YN0000: enableGlobalCache - false
➤ YN0000: enableImmutableCache - false
➤ YN0000: enableImmutableInstalls - false
➤ YN0000: enableInlineBuilds - false
➤ YN0000: enableMirror - true
➤ YN0000: enableNetwork - true
➤ YN0000: enableProgressBars - false
➤ YN0000: enableScripts - true
➤ YN0000: enableTimers - false
➤ YN0000: globalFolder - 'WORKSPACE_ROOT/.yarn/global'
➤ YN0000: httpProxy - null
➤ YN0000: httpsProxy - null
➤ YN0000: ignorePath - false
➤ YN0000: initLicense - null
➤ YN0000: initScope - null
➤ YN0000: initVersion - null
➤ YN0000: lastUpdateCheck - null
➤ YN0000: lockfileFilename - 'yarn.lock'
➤ YN0000: npmAlwaysAuth - false
➤ YN0000: npmAuthIdent - null
➤ YN0000: npmAuthToken - null
➤ YN0000: npmPublishAccess - null
➤ YN0000: npmPublishRegistry - null
➤ YN0000: npmRegistries - Map {}
➤ YN0000: npmRegistryServer - 'http://yarn.test.registry'
➤ YN0000: npmScopes - Map {}
➤ YN0000: pnpDataPath - 'WORKSPACE_ROOT/.pnp.data.json'
➤ YN0000: pnpEnableInlining - true
➤ YN0000: pnpFallbackMode - 'none'
➤ YN0000: pnpIgnorePattern - null
➤ YN0000: pnpShebang - '#!/usr/bin/env node'
➤ YN0000: pnpUnpluggedFolder - 'WORKSPACE_ROOT/.yarn/unplugged'
➤ YN0000: preferDeferredVersions - false
➤ YN0000: preferInteractive - false
➤ YN0000: progressBarStyle - undefined
➤ YN0000: rcFilename - '.spec-yarnrc'
➤ YN0000: unsafeHttpWhitelist - [ 'localhost' ]
➤ YN0000: virtualFolder - 'WORKSPACE_ROOT/.yarn/virtual'
➤ YN0000: yarnPath - null
➤ YN0000: Done
",
}
`;
