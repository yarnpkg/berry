// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Commands config test (folder with rcfile / as json) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "{\\"lastUpdateCheck\\":{\\"description\\":\\"Last timestamp we checked whether new Yarn versions were available\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"yarnPath\\":{\\"description\\":\\"Path to the local executable that must be used over the global one\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":null,\\"effective\\":null},\\"ignorePath\\":{\\"description\\":\\"If true, the local executable will be ignored when using the global one\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"globalFolder\\":{\\"description\\":\\"Folder where are stored the system-wide settings\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"DEFAULT_GLOBAL_FOLDER\\",\\"effective\\":\\"WORKSPACE_ROOT/.berry/global\\",\\"source\\":\\"<environment>\\"},\\"lockfilePath\\":{\\"description\\":\\"Path of the file where the dependency tree must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./yarn.lock\\",\\"effective\\":\\"WORKSPACE_ROOT/yarn.lock\\"},\\"cacheFolder\\":{\\"description\\":\\"Folder where the cache files must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/cache\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/cache\\"},\\"virtualFolder\\":{\\"description\\":\\"Folder where the symlinks generated for virtual packages must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/virtual\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/virtual\\"},\\"bstatePath\\":{\\"description\\":\\"Path of the file where the current state of the built packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/build-state.yml\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/build-state.yml\\"},\\"rcFilename\\":{\\"description\\":\\"Name of the files where the configuration can be found\\",\\"type\\":\\"STRING\\",\\"default\\":\\".spec-yarnrc\\",\\"effective\\":\\".spec-yarnrc\\"},\\"enableGlobalCache\\":{\\"description\\":\\"If true, the system-wide cache folder will be used regardless of \`cache-folder\`\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"enableAbsoluteVirtuals\\":{\\"description\\":\\"If true, the virtual symlinks will use absolute paths if required [non portable!!]\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":true,\\"source\\":\\"<environment>\\"},\\"enableColors\\":{\\"description\\":\\"If true, the CLI is allowed to use colors in its output\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\",\\"effective\\":false},\\"enableTimers\\":{\\"description\\":\\"If true, the CLI is allowed to print the time spent executing commands\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":false,\\"source\\":\\"<environment>\\"},\\"preferInteractive\\":{\\"description\\":\\"If true, the CLI will automatically use the interactive mode when called from a TTY\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"defaultLanguageName\\":{\\"description\\":\\"Default language mode that should be used when a package doesn't offer any insight\\",\\"type\\":\\"STRING\\",\\"default\\":\\"node\\",\\"effective\\":\\"node\\"},\\"defaultProtocol\\":{\\"description\\":\\"Default resolution protocol used when resolving pure semver and tag ranges\\",\\"type\\":\\"STRING\\",\\"default\\":\\"npm:\\",\\"effective\\":\\"npm:\\"},\\"enableNetwork\\":{\\"description\\":\\"If false, the package manager will refuse to use the network if required to\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"httpProxy\\":{\\"description\\":\\"URL of the http proxy that must be used for outgoing http requests\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"httpsProxy\\":{\\"description\\":\\"URL of the http proxy that must be used for outgoing https requests\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"enableScripts\\":{\\"description\\":\\"If true, packages are allowed to have install scripts by default\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"checksumBehavior\\":{\\"description\\":\\"Enumeration defining what to do when a checksum doesn't match expectations\\",\\"type\\":\\"STRING\\",\\"default\\":\\"throw\\",\\"effective\\":\\"throw\\"},\\"frozenInstalls\\":{\\"description\\":\\"If true, prevents the install command from modifying the lockfile\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"initLicense\\":{\\"description\\":\\"License used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"initScope\\":{\\"description\\":\\"Scope used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":\\"berry-test\\",\\"source\\":\\"WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc\\"},\\"initVersion\\":{\\"description\\":\\"Version used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"nodeGypMagicLocator\\":{\\"description\\":\\"Package to use when node-gyp is omitted from the dependencies\\",\\"type\\":\\"LOCATOR_LOOSE\\",\\"default\\":\\"node-gyp\\",\\"effective\\":\\"node-gyp\\"},\\"npmRegistryServer\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\",\\"effective\\":\\"http://yarn.test.registry\\",\\"source\\":\\"<environment>\\"},\\"pnpShebang\\":{\\"description\\":\\"String to prepend to the generated PnP script\\",\\"type\\":\\"STRING\\",\\"default\\":\\"#!/usr/bin/env node\\",\\"effective\\":\\"#!/usr/bin/env node\\"},\\"pnpIgnorePattern\\":{\\"description\\":\\"Regex defining a pattern of files that should use the classic resolution\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"pnpEnableInlining\\":{\\"description\\":\\"If true, the PnP data will be inlined along with the generated loader\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"pnpUnpluggedFolder\\":{\\"description\\":\\"Folder where the unplugged packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/unplugged\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/unplugged\\"},\\"pnpDataPath\\":{\\"description\\":\\"Path of the file where the PnP data (used by the loader) must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.data.json\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.data.json\\"},\\"pnpPath\\":{\\"description\\":\\"Path of the file where the PnP loader must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.js\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.js\\"}}",
}
`;

exports[`Commands config test (folder with rcfile / showing explanation) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - Path of the file where the current state of the built packages must be stored - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - Folder where the cache files must be written - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - Enumeration defining what to do when a checksum doesn't match expectations - 'throw'
defaultLanguageName - Default language mode that should be used when a package doesn't offer any insight - 'node'
defaultProtocol - Default resolution protocol used when resolving pure semver and tag ranges - 'npm:'
enableAbsoluteVirtuals - If true, the virtual symlinks will use absolute paths if required [non portable!!] - true
enableColors - If true, the CLI is allowed to use colors in its output - false
enableGlobalCache - If true, the system-wide cache folder will be used regardless of \`cache-folder\` - false
enableNetwork - If false, the package manager will refuse to use the network if required to - true
enableScripts - If true, packages are allowed to have install scripts by default - true
enableTimers - If true, the CLI is allowed to print the time spent executing commands - false
frozenInstalls - If true, prevents the install command from modifying the lockfile - false
globalFolder - Folder where are stored the system-wide settings - 'WORKSPACE_ROOT/.berry/global'
httpProxy - URL of the http proxy that must be used for outgoing http requests - null
httpsProxy - URL of the http proxy that must be used for outgoing https requests - null
ignorePath - If true, the local executable will be ignored when using the global one - false
initLicense - License used when creating packages via the init command - null
initScope - Scope used when creating packages via the init command - 'berry-test'
initVersion - Version used when creating packages via the init command - null
lastUpdateCheck - Last timestamp we checked whether new Yarn versions were available - null
lockfilePath - Path of the file where the dependency tree must be stored - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - Package to use when node-gyp is omitted from the dependencies - 'node-gyp'
npmRegistryServer - URL of the selected npm registry (note: npm enterprise isn't supported) - 'http://yarn.test.registry'
pnpDataPath - Path of the file where the PnP data (used by the loader) must be written - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - If true, the PnP data will be inlined along with the generated loader - true
pnpIgnorePattern - Regex defining a pattern of files that should use the classic resolution - null
pnpPath - Path of the file where the PnP loader must be written - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - String to prepend to the generated PnP script - '#!/usr/bin/env node'
pnpUnpluggedFolder - Folder where the unplugged packages must be stored - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - If true, the CLI will automatically use the interactive mode when called from a TTY - false
rcFilename - Name of the files where the configuration can be found - '.spec-yarnrc'
virtualFolder - Folder where the symlinks generated for virtual packages must be written - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - Path to the local executable that must be used over the global one - null
",
}
`;

exports[`Commands config test (folder with rcfile / showing the source) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - <default> - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - <default> - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - <default> - 'throw'
defaultLanguageName - <default> - 'node'
defaultProtocol - <default> - 'npm:'
enableAbsoluteVirtuals - <environment> - true
enableColors - <default> - false
enableGlobalCache - <default> - false
enableNetwork - <default> - true
enableScripts - <default> - true
enableTimers - <environment> - false
frozenInstalls - <default> - false
globalFolder - <environment> - 'WORKSPACE_ROOT/.berry/global'
httpProxy - <default> - null
httpsProxy - <default> - null
ignorePath - <default> - false
initLicense - <default> - null
initScope - WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc - 'berry-test'
initVersion - <default> - null
lastUpdateCheck - <default> - null
lockfilePath - <default> - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - <default> - 'node-gyp'
npmRegistryServer - <environment> - 'http://yarn.test.registry'
pnpDataPath - <default> - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - <default> - true
pnpIgnorePattern - <default> - null
pnpPath - <default> - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - <default> - '#!/usr/bin/env node'
pnpUnpluggedFolder - <default> - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - <default> - false
rcFilename - <default> - '.spec-yarnrc'
virtualFolder - <default> - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - <default> - null
",
}
`;

exports[`Commands config test (folder with rcfile / without flags) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - 'throw'
defaultLanguageName - 'node'
defaultProtocol - 'npm:'
enableAbsoluteVirtuals - true
enableColors - false
enableGlobalCache - false
enableNetwork - true
enableScripts - true
enableTimers - false
frozenInstalls - false
globalFolder - 'WORKSPACE_ROOT/.berry/global'
httpProxy - null
httpsProxy - null
ignorePath - false
initLicense - null
initScope - 'berry-test'
initVersion - null
lastUpdateCheck - null
lockfilePath - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - 'node-gyp'
npmRegistryServer - 'http://yarn.test.registry'
pnpDataPath - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - true
pnpIgnorePattern - null
pnpPath - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - '#!/usr/bin/env node'
pnpUnpluggedFolder - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - false
rcFilename - '.spec-yarnrc'
virtualFolder - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - null
",
}
`;

exports[`Commands config test (folder with rcfile and rc in ancestor parent / as json) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "{\\"lastUpdateCheck\\":{\\"description\\":\\"Last timestamp we checked whether new Yarn versions were available\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":\\"1555784893958\\",\\"source\\":\\"WORKSPACE_ROOT/.spec-yarnrc\\"},\\"yarnPath\\":{\\"description\\":\\"Path to the local executable that must be used over the global one\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":null,\\"effective\\":null},\\"ignorePath\\":{\\"description\\":\\"If true, the local executable will be ignored when using the global one\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"globalFolder\\":{\\"description\\":\\"Folder where are stored the system-wide settings\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"DEFAULT_GLOBAL_FOLDER\\",\\"effective\\":\\"WORKSPACE_ROOT/.berry/global\\",\\"source\\":\\"<environment>\\"},\\"lockfilePath\\":{\\"description\\":\\"Path of the file where the dependency tree must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./yarn.lock\\",\\"effective\\":\\"WORKSPACE_ROOT/yarn.lock\\"},\\"cacheFolder\\":{\\"description\\":\\"Folder where the cache files must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/cache\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/cache\\"},\\"virtualFolder\\":{\\"description\\":\\"Folder where the symlinks generated for virtual packages must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/virtual\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/virtual\\"},\\"bstatePath\\":{\\"description\\":\\"Path of the file where the current state of the built packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/build-state.yml\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/build-state.yml\\"},\\"rcFilename\\":{\\"description\\":\\"Name of the files where the configuration can be found\\",\\"type\\":\\"STRING\\",\\"default\\":\\".spec-yarnrc\\",\\"effective\\":\\".spec-yarnrc\\"},\\"enableGlobalCache\\":{\\"description\\":\\"If true, the system-wide cache folder will be used regardless of \`cache-folder\`\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"enableAbsoluteVirtuals\\":{\\"description\\":\\"If true, the virtual symlinks will use absolute paths if required [non portable!!]\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":true,\\"source\\":\\"<environment>\\"},\\"enableColors\\":{\\"description\\":\\"If true, the CLI is allowed to use colors in its output\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\",\\"effective\\":false},\\"enableTimers\\":{\\"description\\":\\"If true, the CLI is allowed to print the time spent executing commands\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":false,\\"source\\":\\"<environment>\\"},\\"preferInteractive\\":{\\"description\\":\\"If true, the CLI will automatically use the interactive mode when called from a TTY\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"defaultLanguageName\\":{\\"description\\":\\"Default language mode that should be used when a package doesn't offer any insight\\",\\"type\\":\\"STRING\\",\\"default\\":\\"node\\",\\"effective\\":\\"node\\"},\\"defaultProtocol\\":{\\"description\\":\\"Default resolution protocol used when resolving pure semver and tag ranges\\",\\"type\\":\\"STRING\\",\\"default\\":\\"npm:\\",\\"effective\\":\\"npm:\\"},\\"enableNetwork\\":{\\"description\\":\\"If false, the package manager will refuse to use the network if required to\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"httpProxy\\":{\\"description\\":\\"URL of the http proxy that must be used for outgoing http requests\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"httpsProxy\\":{\\"description\\":\\"URL of the http proxy that must be used for outgoing https requests\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"enableScripts\\":{\\"description\\":\\"If true, packages are allowed to have install scripts by default\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"checksumBehavior\\":{\\"description\\":\\"Enumeration defining what to do when a checksum doesn't match expectations\\",\\"type\\":\\"STRING\\",\\"default\\":\\"throw\\",\\"effective\\":\\"throw\\"},\\"frozenInstalls\\":{\\"description\\":\\"If true, prevents the install command from modifying the lockfile\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"initLicense\\":{\\"description\\":\\"License used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"initScope\\":{\\"description\\":\\"Scope used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":\\"berry-test\\",\\"source\\":\\"WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc\\"},\\"initVersion\\":{\\"description\\":\\"Version used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"nodeGypMagicLocator\\":{\\"description\\":\\"Package to use when node-gyp is omitted from the dependencies\\",\\"type\\":\\"LOCATOR_LOOSE\\",\\"default\\":\\"node-gyp\\",\\"effective\\":\\"node-gyp\\"},\\"npmRegistryServer\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\",\\"effective\\":\\"http://yarn.test.registry\\",\\"source\\":\\"<environment>\\"},\\"pnpShebang\\":{\\"description\\":\\"String to prepend to the generated PnP script\\",\\"type\\":\\"STRING\\",\\"default\\":\\"#!/usr/bin/env node\\",\\"effective\\":\\"#!/usr/bin/env node\\"},\\"pnpIgnorePattern\\":{\\"description\\":\\"Regex defining a pattern of files that should use the classic resolution\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"pnpEnableInlining\\":{\\"description\\":\\"If true, the PnP data will be inlined along with the generated loader\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"pnpUnpluggedFolder\\":{\\"description\\":\\"Folder where the unplugged packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/unplugged\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/unplugged\\"},\\"pnpDataPath\\":{\\"description\\":\\"Path of the file where the PnP data (used by the loader) must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.data.json\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.data.json\\"},\\"pnpPath\\":{\\"description\\":\\"Path of the file where the PnP loader must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.js\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.js\\"}}",
}
`;

exports[`Commands config test (folder with rcfile and rc in ancestor parent / showing explanation) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - Path of the file where the current state of the built packages must be stored - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - Folder where the cache files must be written - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - Enumeration defining what to do when a checksum doesn't match expectations - 'throw'
defaultLanguageName - Default language mode that should be used when a package doesn't offer any insight - 'node'
defaultProtocol - Default resolution protocol used when resolving pure semver and tag ranges - 'npm:'
enableAbsoluteVirtuals - If true, the virtual symlinks will use absolute paths if required [non portable!!] - true
enableColors - If true, the CLI is allowed to use colors in its output - false
enableGlobalCache - If true, the system-wide cache folder will be used regardless of \`cache-folder\` - false
enableNetwork - If false, the package manager will refuse to use the network if required to - true
enableScripts - If true, packages are allowed to have install scripts by default - true
enableTimers - If true, the CLI is allowed to print the time spent executing commands - false
frozenInstalls - If true, prevents the install command from modifying the lockfile - false
globalFolder - Folder where are stored the system-wide settings - 'WORKSPACE_ROOT/.berry/global'
httpProxy - URL of the http proxy that must be used for outgoing http requests - null
httpsProxy - URL of the http proxy that must be used for outgoing https requests - null
ignorePath - If true, the local executable will be ignored when using the global one - false
initLicense - License used when creating packages via the init command - null
initScope - Scope used when creating packages via the init command - 'berry-test'
initVersion - Version used when creating packages via the init command - null
lastUpdateCheck - Last timestamp we checked whether new Yarn versions were available - '1555784893958'
lockfilePath - Path of the file where the dependency tree must be stored - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - Package to use when node-gyp is omitted from the dependencies - 'node-gyp'
npmRegistryServer - URL of the selected npm registry (note: npm enterprise isn't supported) - 'http://yarn.test.registry'
pnpDataPath - Path of the file where the PnP data (used by the loader) must be written - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - If true, the PnP data will be inlined along with the generated loader - true
pnpIgnorePattern - Regex defining a pattern of files that should use the classic resolution - null
pnpPath - Path of the file where the PnP loader must be written - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - String to prepend to the generated PnP script - '#!/usr/bin/env node'
pnpUnpluggedFolder - Folder where the unplugged packages must be stored - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - If true, the CLI will automatically use the interactive mode when called from a TTY - false
rcFilename - Name of the files where the configuration can be found - '.spec-yarnrc'
virtualFolder - Folder where the symlinks generated for virtual packages must be written - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - Path to the local executable that must be used over the global one - null
",
}
`;

exports[`Commands config test (folder with rcfile and rc in ancestor parent / showing the source) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - <default> - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - <default> - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - <default> - 'throw'
defaultLanguageName - <default> - 'node'
defaultProtocol - <default> - 'npm:'
enableAbsoluteVirtuals - <environment> - true
enableColors - <default> - false
enableGlobalCache - <default> - false
enableNetwork - <default> - true
enableScripts - <default> - true
enableTimers - <environment> - false
frozenInstalls - <default> - false
globalFolder - <environment> - 'WORKSPACE_ROOT/.berry/global'
httpProxy - <default> - null
httpsProxy - <default> - null
ignorePath - <default> - false
initLicense - <default> - null
initScope - WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc - 'berry-test'
initVersion - <default> - null
lastUpdateCheck - WORKSPACE_ROOT/.spec-yarnrc - '1555784893958'
lockfilePath - <default> - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - <default> - 'node-gyp'
npmRegistryServer - <environment> - 'http://yarn.test.registry'
pnpDataPath - <default> - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - <default> - true
pnpIgnorePattern - <default> - null
pnpPath - <default> - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - <default> - '#!/usr/bin/env node'
pnpUnpluggedFolder - <default> - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - <default> - false
rcFilename - <default> - '.spec-yarnrc'
virtualFolder - <default> - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - <default> - null
",
}
`;

exports[`Commands config test (folder with rcfile and rc in ancestor parent / without flags) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - 'throw'
defaultLanguageName - 'node'
defaultProtocol - 'npm:'
enableAbsoluteVirtuals - true
enableColors - false
enableGlobalCache - false
enableNetwork - true
enableScripts - true
enableTimers - false
frozenInstalls - false
globalFolder - 'WORKSPACE_ROOT/.berry/global'
httpProxy - null
httpsProxy - null
ignorePath - false
initLicense - null
initScope - 'berry-test'
initVersion - null
lastUpdateCheck - '1555784893958'
lockfilePath - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - 'node-gyp'
npmRegistryServer - 'http://yarn.test.registry'
pnpDataPath - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - true
pnpIgnorePattern - null
pnpPath - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - '#!/usr/bin/env node'
pnpUnpluggedFolder - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - false
rcFilename - '.spec-yarnrc'
virtualFolder - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - null
",
}
`;

exports[`Commands config test (folder with rcfile and rc in parent / as json) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "{\\"lastUpdateCheck\\":{\\"description\\":\\"Last timestamp we checked whether new Yarn versions were available\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":\\"1555784893958\\",\\"source\\":\\"WORKSPACE_ROOT/subfolder/.spec-yarnrc\\"},\\"yarnPath\\":{\\"description\\":\\"Path to the local executable that must be used over the global one\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":null,\\"effective\\":null},\\"ignorePath\\":{\\"description\\":\\"If true, the local executable will be ignored when using the global one\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"globalFolder\\":{\\"description\\":\\"Folder where are stored the system-wide settings\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"DEFAULT_GLOBAL_FOLDER\\",\\"effective\\":\\"WORKSPACE_ROOT/.berry/global\\",\\"source\\":\\"<environment>\\"},\\"lockfilePath\\":{\\"description\\":\\"Path of the file where the dependency tree must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./yarn.lock\\",\\"effective\\":\\"WORKSPACE_ROOT/yarn.lock\\"},\\"cacheFolder\\":{\\"description\\":\\"Folder where the cache files must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/cache\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/cache\\"},\\"virtualFolder\\":{\\"description\\":\\"Folder where the symlinks generated for virtual packages must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/virtual\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/virtual\\"},\\"bstatePath\\":{\\"description\\":\\"Path of the file where the current state of the built packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/build-state.yml\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/build-state.yml\\"},\\"rcFilename\\":{\\"description\\":\\"Name of the files where the configuration can be found\\",\\"type\\":\\"STRING\\",\\"default\\":\\".spec-yarnrc\\",\\"effective\\":\\".spec-yarnrc\\"},\\"enableGlobalCache\\":{\\"description\\":\\"If true, the system-wide cache folder will be used regardless of \`cache-folder\`\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"enableAbsoluteVirtuals\\":{\\"description\\":\\"If true, the virtual symlinks will use absolute paths if required [non portable!!]\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":true,\\"source\\":\\"<environment>\\"},\\"enableColors\\":{\\"description\\":\\"If true, the CLI is allowed to use colors in its output\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\",\\"effective\\":false},\\"enableTimers\\":{\\"description\\":\\"If true, the CLI is allowed to print the time spent executing commands\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":false,\\"source\\":\\"<environment>\\"},\\"preferInteractive\\":{\\"description\\":\\"If true, the CLI will automatically use the interactive mode when called from a TTY\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"defaultLanguageName\\":{\\"description\\":\\"Default language mode that should be used when a package doesn't offer any insight\\",\\"type\\":\\"STRING\\",\\"default\\":\\"node\\",\\"effective\\":\\"node\\"},\\"defaultProtocol\\":{\\"description\\":\\"Default resolution protocol used when resolving pure semver and tag ranges\\",\\"type\\":\\"STRING\\",\\"default\\":\\"npm:\\",\\"effective\\":\\"npm:\\"},\\"enableNetwork\\":{\\"description\\":\\"If false, the package manager will refuse to use the network if required to\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"httpProxy\\":{\\"description\\":\\"URL of the http proxy that must be used for outgoing http requests\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"httpsProxy\\":{\\"description\\":\\"URL of the http proxy that must be used for outgoing https requests\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"enableScripts\\":{\\"description\\":\\"If true, packages are allowed to have install scripts by default\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"checksumBehavior\\":{\\"description\\":\\"Enumeration defining what to do when a checksum doesn't match expectations\\",\\"type\\":\\"STRING\\",\\"default\\":\\"throw\\",\\"effective\\":\\"throw\\"},\\"frozenInstalls\\":{\\"description\\":\\"If true, prevents the install command from modifying the lockfile\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"initLicense\\":{\\"description\\":\\"License used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"initScope\\":{\\"description\\":\\"Scope used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":\\"berry-test\\",\\"source\\":\\"WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc\\"},\\"initVersion\\":{\\"description\\":\\"Version used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"nodeGypMagicLocator\\":{\\"description\\":\\"Package to use when node-gyp is omitted from the dependencies\\",\\"type\\":\\"LOCATOR_LOOSE\\",\\"default\\":\\"node-gyp\\",\\"effective\\":\\"node-gyp\\"},\\"npmRegistryServer\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\",\\"effective\\":\\"http://yarn.test.registry\\",\\"source\\":\\"<environment>\\"},\\"pnpShebang\\":{\\"description\\":\\"String to prepend to the generated PnP script\\",\\"type\\":\\"STRING\\",\\"default\\":\\"#!/usr/bin/env node\\",\\"effective\\":\\"#!/usr/bin/env node\\"},\\"pnpIgnorePattern\\":{\\"description\\":\\"Regex defining a pattern of files that should use the classic resolution\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"pnpEnableInlining\\":{\\"description\\":\\"If true, the PnP data will be inlined along with the generated loader\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"pnpUnpluggedFolder\\":{\\"description\\":\\"Folder where the unplugged packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/unplugged\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/unplugged\\"},\\"pnpDataPath\\":{\\"description\\":\\"Path of the file where the PnP data (used by the loader) must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.data.json\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.data.json\\"},\\"pnpPath\\":{\\"description\\":\\"Path of the file where the PnP loader must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.js\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.js\\"}}",
}
`;

exports[`Commands config test (folder with rcfile and rc in parent / showing explanation) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - Path of the file where the current state of the built packages must be stored - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - Folder where the cache files must be written - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - Enumeration defining what to do when a checksum doesn't match expectations - 'throw'
defaultLanguageName - Default language mode that should be used when a package doesn't offer any insight - 'node'
defaultProtocol - Default resolution protocol used when resolving pure semver and tag ranges - 'npm:'
enableAbsoluteVirtuals - If true, the virtual symlinks will use absolute paths if required [non portable!!] - true
enableColors - If true, the CLI is allowed to use colors in its output - false
enableGlobalCache - If true, the system-wide cache folder will be used regardless of \`cache-folder\` - false
enableNetwork - If false, the package manager will refuse to use the network if required to - true
enableScripts - If true, packages are allowed to have install scripts by default - true
enableTimers - If true, the CLI is allowed to print the time spent executing commands - false
frozenInstalls - If true, prevents the install command from modifying the lockfile - false
globalFolder - Folder where are stored the system-wide settings - 'WORKSPACE_ROOT/.berry/global'
httpProxy - URL of the http proxy that must be used for outgoing http requests - null
httpsProxy - URL of the http proxy that must be used for outgoing https requests - null
ignorePath - If true, the local executable will be ignored when using the global one - false
initLicense - License used when creating packages via the init command - null
initScope - Scope used when creating packages via the init command - 'berry-test'
initVersion - Version used when creating packages via the init command - null
lastUpdateCheck - Last timestamp we checked whether new Yarn versions were available - '1555784893958'
lockfilePath - Path of the file where the dependency tree must be stored - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - Package to use when node-gyp is omitted from the dependencies - 'node-gyp'
npmRegistryServer - URL of the selected npm registry (note: npm enterprise isn't supported) - 'http://yarn.test.registry'
pnpDataPath - Path of the file where the PnP data (used by the loader) must be written - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - If true, the PnP data will be inlined along with the generated loader - true
pnpIgnorePattern - Regex defining a pattern of files that should use the classic resolution - null
pnpPath - Path of the file where the PnP loader must be written - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - String to prepend to the generated PnP script - '#!/usr/bin/env node'
pnpUnpluggedFolder - Folder where the unplugged packages must be stored - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - If true, the CLI will automatically use the interactive mode when called from a TTY - false
rcFilename - Name of the files where the configuration can be found - '.spec-yarnrc'
virtualFolder - Folder where the symlinks generated for virtual packages must be written - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - Path to the local executable that must be used over the global one - null
",
}
`;

exports[`Commands config test (folder with rcfile and rc in parent / showing the source) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - <default> - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - <default> - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - <default> - 'throw'
defaultLanguageName - <default> - 'node'
defaultProtocol - <default> - 'npm:'
enableAbsoluteVirtuals - <environment> - true
enableColors - <default> - false
enableGlobalCache - <default> - false
enableNetwork - <default> - true
enableScripts - <default> - true
enableTimers - <environment> - false
frozenInstalls - <default> - false
globalFolder - <environment> - 'WORKSPACE_ROOT/.berry/global'
httpProxy - <default> - null
httpsProxy - <default> - null
ignorePath - <default> - false
initLicense - <default> - null
initScope - WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc - 'berry-test'
initVersion - <default> - null
lastUpdateCheck - WORKSPACE_ROOT/subfolder/.spec-yarnrc - '1555784893958'
lockfilePath - <default> - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - <default> - 'node-gyp'
npmRegistryServer - <environment> - 'http://yarn.test.registry'
pnpDataPath - <default> - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - <default> - true
pnpIgnorePattern - <default> - null
pnpPath - <default> - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - <default> - '#!/usr/bin/env node'
pnpUnpluggedFolder - <default> - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - <default> - false
rcFilename - <default> - '.spec-yarnrc'
virtualFolder - <default> - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - <default> - null
",
}
`;

exports[`Commands config test (folder with rcfile and rc in parent / without flags) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - 'throw'
defaultLanguageName - 'node'
defaultProtocol - 'npm:'
enableAbsoluteVirtuals - true
enableColors - false
enableGlobalCache - false
enableNetwork - true
enableScripts - true
enableTimers - false
frozenInstalls - false
globalFolder - 'WORKSPACE_ROOT/.berry/global'
httpProxy - null
httpsProxy - null
ignorePath - false
initLicense - null
initScope - 'berry-test'
initVersion - null
lastUpdateCheck - '1555784893958'
lockfilePath - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - 'node-gyp'
npmRegistryServer - 'http://yarn.test.registry'
pnpDataPath - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - true
pnpIgnorePattern - null
pnpPath - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - '#!/usr/bin/env node'
pnpUnpluggedFolder - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - false
rcFilename - '.spec-yarnrc'
virtualFolder - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - null
",
}
`;

exports[`Commands config test (folder with rcfile without trailing newline / as json) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "{\\"lastUpdateCheck\\":{\\"description\\":\\"Last timestamp we checked whether new Yarn versions were available\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"yarnPath\\":{\\"description\\":\\"Path to the local executable that must be used over the global one\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":null,\\"effective\\":null},\\"ignorePath\\":{\\"description\\":\\"If true, the local executable will be ignored when using the global one\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"globalFolder\\":{\\"description\\":\\"Folder where are stored the system-wide settings\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"DEFAULT_GLOBAL_FOLDER\\",\\"effective\\":\\"WORKSPACE_ROOT/.berry/global\\",\\"source\\":\\"<environment>\\"},\\"lockfilePath\\":{\\"description\\":\\"Path of the file where the dependency tree must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./yarn.lock\\",\\"effective\\":\\"WORKSPACE_ROOT/yarn.lock\\"},\\"cacheFolder\\":{\\"description\\":\\"Folder where the cache files must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/cache\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/cache\\"},\\"virtualFolder\\":{\\"description\\":\\"Folder where the symlinks generated for virtual packages must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/virtual\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/virtual\\"},\\"bstatePath\\":{\\"description\\":\\"Path of the file where the current state of the built packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/build-state.yml\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/build-state.yml\\"},\\"rcFilename\\":{\\"description\\":\\"Name of the files where the configuration can be found\\",\\"type\\":\\"STRING\\",\\"default\\":\\".spec-yarnrc\\",\\"effective\\":\\".spec-yarnrc\\"},\\"enableGlobalCache\\":{\\"description\\":\\"If true, the system-wide cache folder will be used regardless of \`cache-folder\`\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"enableAbsoluteVirtuals\\":{\\"description\\":\\"If true, the virtual symlinks will use absolute paths if required [non portable!!]\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":true,\\"source\\":\\"<environment>\\"},\\"enableColors\\":{\\"description\\":\\"If true, the CLI is allowed to use colors in its output\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\",\\"effective\\":false},\\"enableTimers\\":{\\"description\\":\\"If true, the CLI is allowed to print the time spent executing commands\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":false,\\"source\\":\\"<environment>\\"},\\"preferInteractive\\":{\\"description\\":\\"If true, the CLI will automatically use the interactive mode when called from a TTY\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"defaultLanguageName\\":{\\"description\\":\\"Default language mode that should be used when a package doesn't offer any insight\\",\\"type\\":\\"STRING\\",\\"default\\":\\"node\\",\\"effective\\":\\"node\\"},\\"defaultProtocol\\":{\\"description\\":\\"Default resolution protocol used when resolving pure semver and tag ranges\\",\\"type\\":\\"STRING\\",\\"default\\":\\"npm:\\",\\"effective\\":\\"npm:\\"},\\"enableNetwork\\":{\\"description\\":\\"If false, the package manager will refuse to use the network if required to\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"httpProxy\\":{\\"description\\":\\"URL of the http proxy that must be used for outgoing http requests\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"httpsProxy\\":{\\"description\\":\\"URL of the http proxy that must be used for outgoing https requests\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"enableScripts\\":{\\"description\\":\\"If true, packages are allowed to have install scripts by default\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"checksumBehavior\\":{\\"description\\":\\"Enumeration defining what to do when a checksum doesn't match expectations\\",\\"type\\":\\"STRING\\",\\"default\\":\\"throw\\",\\"effective\\":\\"throw\\"},\\"frozenInstalls\\":{\\"description\\":\\"If true, prevents the install command from modifying the lockfile\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"initLicense\\":{\\"description\\":\\"License used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"initScope\\":{\\"description\\":\\"Scope used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":\\"berry-test\\",\\"source\\":\\"WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc\\"},\\"initVersion\\":{\\"description\\":\\"Version used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"nodeGypMagicLocator\\":{\\"description\\":\\"Package to use when node-gyp is omitted from the dependencies\\",\\"type\\":\\"LOCATOR_LOOSE\\",\\"default\\":\\"node-gyp\\",\\"effective\\":\\"node-gyp\\"},\\"npmRegistryServer\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\",\\"effective\\":\\"http://yarn.test.registry\\",\\"source\\":\\"<environment>\\"},\\"pnpShebang\\":{\\"description\\":\\"String to prepend to the generated PnP script\\",\\"type\\":\\"STRING\\",\\"default\\":\\"#!/usr/bin/env node\\",\\"effective\\":\\"#!/usr/bin/env node\\"},\\"pnpIgnorePattern\\":{\\"description\\":\\"Regex defining a pattern of files that should use the classic resolution\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"pnpEnableInlining\\":{\\"description\\":\\"If true, the PnP data will be inlined along with the generated loader\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"pnpUnpluggedFolder\\":{\\"description\\":\\"Folder where the unplugged packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/unplugged\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/unplugged\\"},\\"pnpDataPath\\":{\\"description\\":\\"Path of the file where the PnP data (used by the loader) must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.data.json\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.data.json\\"},\\"pnpPath\\":{\\"description\\":\\"Path of the file where the PnP loader must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.js\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.js\\"}}",
}
`;

exports[`Commands config test (folder with rcfile without trailing newline / showing explanation) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - Path of the file where the current state of the built packages must be stored - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - Folder where the cache files must be written - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - Enumeration defining what to do when a checksum doesn't match expectations - 'throw'
defaultLanguageName - Default language mode that should be used when a package doesn't offer any insight - 'node'
defaultProtocol - Default resolution protocol used when resolving pure semver and tag ranges - 'npm:'
enableAbsoluteVirtuals - If true, the virtual symlinks will use absolute paths if required [non portable!!] - true
enableColors - If true, the CLI is allowed to use colors in its output - false
enableGlobalCache - If true, the system-wide cache folder will be used regardless of \`cache-folder\` - false
enableNetwork - If false, the package manager will refuse to use the network if required to - true
enableScripts - If true, packages are allowed to have install scripts by default - true
enableTimers - If true, the CLI is allowed to print the time spent executing commands - false
frozenInstalls - If true, prevents the install command from modifying the lockfile - false
globalFolder - Folder where are stored the system-wide settings - 'WORKSPACE_ROOT/.berry/global'
httpProxy - URL of the http proxy that must be used for outgoing http requests - null
httpsProxy - URL of the http proxy that must be used for outgoing https requests - null
ignorePath - If true, the local executable will be ignored when using the global one - false
initLicense - License used when creating packages via the init command - null
initScope - Scope used when creating packages via the init command - 'berry-test'
initVersion - Version used when creating packages via the init command - null
lastUpdateCheck - Last timestamp we checked whether new Yarn versions were available - null
lockfilePath - Path of the file where the dependency tree must be stored - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - Package to use when node-gyp is omitted from the dependencies - 'node-gyp'
npmRegistryServer - URL of the selected npm registry (note: npm enterprise isn't supported) - 'http://yarn.test.registry'
pnpDataPath - Path of the file where the PnP data (used by the loader) must be written - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - If true, the PnP data will be inlined along with the generated loader - true
pnpIgnorePattern - Regex defining a pattern of files that should use the classic resolution - null
pnpPath - Path of the file where the PnP loader must be written - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - String to prepend to the generated PnP script - '#!/usr/bin/env node'
pnpUnpluggedFolder - Folder where the unplugged packages must be stored - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - If true, the CLI will automatically use the interactive mode when called from a TTY - false
rcFilename - Name of the files where the configuration can be found - '.spec-yarnrc'
virtualFolder - Folder where the symlinks generated for virtual packages must be written - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - Path to the local executable that must be used over the global one - null
",
}
`;

exports[`Commands config test (folder with rcfile without trailing newline / showing the source) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - <default> - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - <default> - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - <default> - 'throw'
defaultLanguageName - <default> - 'node'
defaultProtocol - <default> - 'npm:'
enableAbsoluteVirtuals - <environment> - true
enableColors - <default> - false
enableGlobalCache - <default> - false
enableNetwork - <default> - true
enableScripts - <default> - true
enableTimers - <environment> - false
frozenInstalls - <default> - false
globalFolder - <environment> - 'WORKSPACE_ROOT/.berry/global'
httpProxy - <default> - null
httpsProxy - <default> - null
ignorePath - <default> - false
initLicense - <default> - null
initScope - WORKSPACE_ROOT/subfolder/subfolder/.spec-yarnrc - 'berry-test'
initVersion - <default> - null
lastUpdateCheck - <default> - null
lockfilePath - <default> - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - <default> - 'node-gyp'
npmRegistryServer - <environment> - 'http://yarn.test.registry'
pnpDataPath - <default> - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - <default> - true
pnpIgnorePattern - <default> - null
pnpPath - <default> - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - <default> - '#!/usr/bin/env node'
pnpUnpluggedFolder - <default> - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - <default> - false
rcFilename - <default> - '.spec-yarnrc'
virtualFolder - <default> - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - <default> - null
",
}
`;

exports[`Commands config test (folder with rcfile without trailing newline / without flags) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - 'throw'
defaultLanguageName - 'node'
defaultProtocol - 'npm:'
enableAbsoluteVirtuals - true
enableColors - false
enableGlobalCache - false
enableNetwork - true
enableScripts - true
enableTimers - false
frozenInstalls - false
globalFolder - 'WORKSPACE_ROOT/.berry/global'
httpProxy - null
httpsProxy - null
ignorePath - false
initLicense - null
initScope - 'berry-test'
initVersion - null
lastUpdateCheck - null
lockfilePath - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - 'node-gyp'
npmRegistryServer - 'http://yarn.test.registry'
pnpDataPath - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - true
pnpIgnorePattern - null
pnpPath - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - '#!/usr/bin/env node'
pnpUnpluggedFolder - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - false
rcFilename - '.spec-yarnrc'
virtualFolder - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - null
",
}
`;

exports[`Commands config test (folder without rcfile in ancestry / as json) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "{\\"lastUpdateCheck\\":{\\"description\\":\\"Last timestamp we checked whether new Yarn versions were available\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"yarnPath\\":{\\"description\\":\\"Path to the local executable that must be used over the global one\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":null,\\"effective\\":null},\\"ignorePath\\":{\\"description\\":\\"If true, the local executable will be ignored when using the global one\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"globalFolder\\":{\\"description\\":\\"Folder where are stored the system-wide settings\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"DEFAULT_GLOBAL_FOLDER\\",\\"effective\\":\\"WORKSPACE_ROOT/.berry/global\\",\\"source\\":\\"<environment>\\"},\\"lockfilePath\\":{\\"description\\":\\"Path of the file where the dependency tree must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./yarn.lock\\",\\"effective\\":\\"WORKSPACE_ROOT/yarn.lock\\"},\\"cacheFolder\\":{\\"description\\":\\"Folder where the cache files must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/cache\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/cache\\"},\\"virtualFolder\\":{\\"description\\":\\"Folder where the symlinks generated for virtual packages must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/virtual\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/virtual\\"},\\"bstatePath\\":{\\"description\\":\\"Path of the file where the current state of the built packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/build-state.yml\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/build-state.yml\\"},\\"rcFilename\\":{\\"description\\":\\"Name of the files where the configuration can be found\\",\\"type\\":\\"STRING\\",\\"default\\":\\".spec-yarnrc\\",\\"effective\\":\\".spec-yarnrc\\"},\\"enableGlobalCache\\":{\\"description\\":\\"If true, the system-wide cache folder will be used regardless of \`cache-folder\`\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"enableAbsoluteVirtuals\\":{\\"description\\":\\"If true, the virtual symlinks will use absolute paths if required [non portable!!]\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":true,\\"source\\":\\"<environment>\\"},\\"enableColors\\":{\\"description\\":\\"If true, the CLI is allowed to use colors in its output\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"defaultText\\":\\"<dynamic>\\",\\"effective\\":false},\\"enableTimers\\":{\\"description\\":\\"If true, the CLI is allowed to print the time spent executing commands\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":false,\\"source\\":\\"<environment>\\"},\\"preferInteractive\\":{\\"description\\":\\"If true, the CLI will automatically use the interactive mode when called from a TTY\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"defaultLanguageName\\":{\\"description\\":\\"Default language mode that should be used when a package doesn't offer any insight\\",\\"type\\":\\"STRING\\",\\"default\\":\\"node\\",\\"effective\\":\\"node\\"},\\"defaultProtocol\\":{\\"description\\":\\"Default resolution protocol used when resolving pure semver and tag ranges\\",\\"type\\":\\"STRING\\",\\"default\\":\\"npm:\\",\\"effective\\":\\"npm:\\"},\\"enableNetwork\\":{\\"description\\":\\"If false, the package manager will refuse to use the network if required to\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"httpProxy\\":{\\"description\\":\\"URL of the http proxy that must be used for outgoing http requests\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"httpsProxy\\":{\\"description\\":\\"URL of the http proxy that must be used for outgoing https requests\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"enableScripts\\":{\\"description\\":\\"If true, packages are allowed to have install scripts by default\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"checksumBehavior\\":{\\"description\\":\\"Enumeration defining what to do when a checksum doesn't match expectations\\",\\"type\\":\\"STRING\\",\\"default\\":\\"throw\\",\\"effective\\":\\"throw\\"},\\"frozenInstalls\\":{\\"description\\":\\"If true, prevents the install command from modifying the lockfile\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":false,\\"effective\\":false},\\"initLicense\\":{\\"description\\":\\"License used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"initScope\\":{\\"description\\":\\"Scope used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"initVersion\\":{\\"description\\":\\"Version used when creating packages via the init command\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"nodeGypMagicLocator\\":{\\"description\\":\\"Package to use when node-gyp is omitted from the dependencies\\",\\"type\\":\\"LOCATOR_LOOSE\\",\\"default\\":\\"node-gyp\\",\\"effective\\":\\"node-gyp\\"},\\"npmRegistryServer\\":{\\"description\\":\\"URL of the selected npm registry (note: npm enterprise isn't supported)\\",\\"type\\":\\"STRING\\",\\"default\\":\\"https://registry.yarnpkg.com\\",\\"effective\\":\\"http://yarn.test.registry\\",\\"source\\":\\"<environment>\\"},\\"pnpShebang\\":{\\"description\\":\\"String to prepend to the generated PnP script\\",\\"type\\":\\"STRING\\",\\"default\\":\\"#!/usr/bin/env node\\",\\"effective\\":\\"#!/usr/bin/env node\\"},\\"pnpIgnorePattern\\":{\\"description\\":\\"Regex defining a pattern of files that should use the classic resolution\\",\\"type\\":\\"STRING\\",\\"default\\":null,\\"effective\\":null},\\"pnpEnableInlining\\":{\\"description\\":\\"If true, the PnP data will be inlined along with the generated loader\\",\\"type\\":\\"BOOLEAN\\",\\"default\\":true,\\"effective\\":true},\\"pnpUnpluggedFolder\\":{\\"description\\":\\"Folder where the unplugged packages must be stored\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.yarn/unplugged\\",\\"effective\\":\\"WORKSPACE_ROOT/.yarn/unplugged\\"},\\"pnpDataPath\\":{\\"description\\":\\"Path of the file where the PnP data (used by the loader) must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.data.json\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.data.json\\"},\\"pnpPath\\":{\\"description\\":\\"Path of the file where the PnP loader must be written\\",\\"type\\":\\"ABSOLUTE_PATH\\",\\"default\\":\\"./.pnp.js\\",\\"effective\\":\\"WORKSPACE_ROOT/.pnp.js\\"}}",
}
`;

exports[`Commands config test (folder without rcfile in ancestry / showing explanation) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - Path of the file where the current state of the built packages must be stored - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - Folder where the cache files must be written - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - Enumeration defining what to do when a checksum doesn't match expectations - 'throw'
defaultLanguageName - Default language mode that should be used when a package doesn't offer any insight - 'node'
defaultProtocol - Default resolution protocol used when resolving pure semver and tag ranges - 'npm:'
enableAbsoluteVirtuals - If true, the virtual symlinks will use absolute paths if required [non portable!!] - true
enableColors - If true, the CLI is allowed to use colors in its output - false
enableGlobalCache - If true, the system-wide cache folder will be used regardless of \`cache-folder\` - false
enableNetwork - If false, the package manager will refuse to use the network if required to - true
enableScripts - If true, packages are allowed to have install scripts by default - true
enableTimers - If true, the CLI is allowed to print the time spent executing commands - false
frozenInstalls - If true, prevents the install command from modifying the lockfile - false
globalFolder - Folder where are stored the system-wide settings - 'WORKSPACE_ROOT/.berry/global'
httpProxy - URL of the http proxy that must be used for outgoing http requests - null
httpsProxy - URL of the http proxy that must be used for outgoing https requests - null
ignorePath - If true, the local executable will be ignored when using the global one - false
initLicense - License used when creating packages via the init command - null
initScope - Scope used when creating packages via the init command - null
initVersion - Version used when creating packages via the init command - null
lastUpdateCheck - Last timestamp we checked whether new Yarn versions were available - null
lockfilePath - Path of the file where the dependency tree must be stored - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - Package to use when node-gyp is omitted from the dependencies - 'node-gyp'
npmRegistryServer - URL of the selected npm registry (note: npm enterprise isn't supported) - 'http://yarn.test.registry'
pnpDataPath - Path of the file where the PnP data (used by the loader) must be written - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - If true, the PnP data will be inlined along with the generated loader - true
pnpIgnorePattern - Regex defining a pattern of files that should use the classic resolution - null
pnpPath - Path of the file where the PnP loader must be written - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - String to prepend to the generated PnP script - '#!/usr/bin/env node'
pnpUnpluggedFolder - Folder where the unplugged packages must be stored - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - If true, the CLI will automatically use the interactive mode when called from a TTY - false
rcFilename - Name of the files where the configuration can be found - '.spec-yarnrc'
virtualFolder - Folder where the symlinks generated for virtual packages must be written - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - Path to the local executable that must be used over the global one - null
",
}
`;

exports[`Commands config test (folder without rcfile in ancestry / showing the source) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - <default> - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - <default> - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - <default> - 'throw'
defaultLanguageName - <default> - 'node'
defaultProtocol - <default> - 'npm:'
enableAbsoluteVirtuals - <environment> - true
enableColors - <default> - false
enableGlobalCache - <default> - false
enableNetwork - <default> - true
enableScripts - <default> - true
enableTimers - <environment> - false
frozenInstalls - <default> - false
globalFolder - <environment> - 'WORKSPACE_ROOT/.berry/global'
httpProxy - <default> - null
httpsProxy - <default> - null
ignorePath - <default> - false
initLicense - <default> - null
initScope - <default> - null
initVersion - <default> - null
lastUpdateCheck - <default> - null
lockfilePath - <default> - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - <default> - 'node-gyp'
npmRegistryServer - <environment> - 'http://yarn.test.registry'
pnpDataPath - <default> - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - <default> - true
pnpIgnorePattern - <default> - null
pnpPath - <default> - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - <default> - '#!/usr/bin/env node'
pnpUnpluggedFolder - <default> - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - <default> - false
rcFilename - <default> - '.spec-yarnrc'
virtualFolder - <default> - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - <default> - null
",
}
`;

exports[`Commands config test (folder without rcfile in ancestry / without flags) 1`] = `
Object {
  "code": 0,
  "stderr": "",
  "stdout": "bstatePath - 'WORKSPACE_ROOT/.yarn/build-state.yml'
cacheFolder - 'WORKSPACE_ROOT/.yarn/cache'
checksumBehavior - 'throw'
defaultLanguageName - 'node'
defaultProtocol - 'npm:'
enableAbsoluteVirtuals - true
enableColors - false
enableGlobalCache - false
enableNetwork - true
enableScripts - true
enableTimers - false
frozenInstalls - false
globalFolder - 'WORKSPACE_ROOT/.berry/global'
httpProxy - null
httpsProxy - null
ignorePath - false
initLicense - null
initScope - null
initVersion - null
lastUpdateCheck - null
lockfilePath - 'WORKSPACE_ROOT/yarn.lock'
nodeGypMagicLocator - 'node-gyp'
npmRegistryServer - 'http://yarn.test.registry'
pnpDataPath - 'WORKSPACE_ROOT/.pnp.data.json'
pnpEnableInlining - true
pnpIgnorePattern - null
pnpPath - 'WORKSPACE_ROOT/.pnp.js'
pnpShebang - '#!/usr/bin/env node'
pnpUnpluggedFolder - 'WORKSPACE_ROOT/.yarn/unplugged'
preferInteractive - false
rcFilename - '.spec-yarnrc'
virtualFolder - 'WORKSPACE_ROOT/.yarn/virtual'
yarnPath - null
",
}
`;
