module.exports = "module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst fslib_1 = __webpack_require__(1);\r\nconst fs_1 = __importDefault(__webpack_require__(3));\r\nconst module_1 = __importDefault(__webpack_require__(18));\r\nconst path_1 = __importDefault(__webpack_require__(4));\r\nconst string_decoder_1 = __importDefault(__webpack_require__(19));\r\nconst applyPatch_1 = __webpack_require__(20);\r\nconst hydrateRuntimeState_1 = __webpack_require__(22);\r\nconst makeApi_1 = __webpack_require__(23);\r\n// We must copy the fs into a local, because otherwise\r\n// 1. we would make the NodeFS instance use the function that we patched (infinite loop)\r\n// 2. Object.create(fs) isn't enough, since it won't prevent the proto from being modified\r\nconst localFs = Object.assign({}, fs_1.default);\r\nconst nodeFs = new fslib_1.NodeFS(localFs);\r\nconst zipOpenFs = new fslib_1.ZipOpenFS({ baseFs: nodeFs });\r\nmodule.exports = makeApi_1.makeApi($$SETUP_STATE(hydrateRuntimeState_1.hydrateRuntimeState), {\r\n    compatibilityMode: true,\r\n    pnpapiResolution: path_1.default.resolve(__dirname, __filename),\r\n    fakeFs: zipOpenFs,\r\n});\r\nif (__non_webpack_module__.parent && __non_webpack_module__.parent.id === 'internal/preload') {\r\n    applyPatch_1.applyPatch(module.exports, {\r\n        compatibilityMode: true,\r\n        fakeFs: zipOpenFs,\r\n    });\r\n    if (__non_webpack_module__.filename) {\r\n        // We delete it from the cache in order to support the case where the CLI resolver is invoked from \"yarn run\"\r\n        // It's annoying because it might cause some issues when the file is multiple times in NODE_OPTIONS, but it shouldn't happen anyway.\r\n        delete module_1.default._cache[__non_webpack_module__.filename];\r\n    }\r\n}\r\n// @ts-ignore\r\nif (process.mainModule === __non_webpack_module__) {\r\n    const reportError = (code, message, data) => {\r\n        process.stdout.write(`${JSON.stringify([{ code, message, data }, null])}\\n`);\r\n    };\r\n    const reportSuccess = (resolution) => {\r\n        process.stdout.write(`${JSON.stringify([null, resolution])}\\n`);\r\n    };\r\n    const processResolution = (request, issuer) => {\r\n        try {\r\n            reportSuccess(module.exports.resolveRequest(request, issuer));\r\n        }\r\n        catch (error) {\r\n            reportError(error.code, error.message, error.data);\r\n        }\r\n    };\r\n    const processRequest = (data) => {\r\n        try {\r\n            const [request, issuer] = JSON.parse(data);\r\n            processResolution(request, issuer);\r\n        }\r\n        catch (error) {\r\n            reportError(`INVALID_JSON`, error.message, error.data);\r\n        }\r\n    };\r\n    if (process.argv.length > 2) {\r\n        if (process.argv.length !== 4) {\r\n            process.stderr.write(`Usage: ${process.argv[0]} ${process.argv[1]} <request> <issuer>\\n`);\r\n            process.exitCode = 64; /* EX_USAGE */\r\n        }\r\n        else {\r\n            processResolution(process.argv[2], process.argv[3]);\r\n        }\r\n    }\r\n    else {\r\n        let buffer = '';\r\n        const decoder = new string_decoder_1.default.StringDecoder();\r\n        process.stdin.on('data', chunk => {\r\n            buffer += decoder.write(chunk);\r\n            do {\r\n                const index = buffer.indexOf('\\n');\r\n                if (index === -1)\r\n                    break;\r\n                const line = buffer.slice(0, index);\r\n                buffer = buffer.slice(index + 1);\r\n                processRequest(line);\r\n            } while (true);\r\n        });\r\n    }\r\n}\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst NodeFS_1 = __webpack_require__(2);\r\nvar AliasFS_1 = __webpack_require__(6);\r\nexports.AliasFS = AliasFS_1.AliasFS;\r\nvar FakeFS_1 = __webpack_require__(5);\r\nexports.FakeFS = FakeFS_1.FakeFS;\r\nvar CwdFS_1 = __webpack_require__(7);\r\nexports.CwdFS = CwdFS_1.CwdFS;\r\nvar JailFS_1 = __webpack_require__(8);\r\nexports.JailFS = JailFS_1.JailFS;\r\nvar LazyFS_1 = __webpack_require__(9);\r\nexports.LazyFS = LazyFS_1.LazyFS;\r\nvar NodeFS_2 = __webpack_require__(2);\r\nexports.NodeFS = NodeFS_2.NodeFS;\r\nvar PosixFS_1 = __webpack_require__(10);\r\nexports.PosixFS = PosixFS_1.PosixFS;\r\nvar ZipFS_1 = __webpack_require__(11);\r\nexports.ZipFS = ZipFS_1.ZipFS;\r\nvar ZipOpenFS_1 = __webpack_require__(17);\r\nexports.ZipOpenFS = ZipOpenFS_1.ZipOpenFS;\r\nfunction patchFs(patchedFs, fakeFs) {\r\n    const SYNC_IMPLEMENTATIONS = new Set([\r\n        `accessSync`,\r\n        `createReadStream`,\r\n        `chmodSync`,\r\n        `copyFileSync`,\r\n        `lstatSync`,\r\n        `openSync`,\r\n        `readlinkSync`,\r\n        `readFileSync`,\r\n        `readdirSync`,\r\n        `readlinkSync`,\r\n        `realpathSync`,\r\n        `rmdirSync`,\r\n        `statSync`,\r\n        `symlinkSync`,\r\n        `unlinkSync`,\r\n        `utimesSync`,\r\n        `writeFileSync`,\r\n    ]);\r\n    const ASYNC_IMPLEMENTATIONS = new Set([\r\n        `accessPromise`,\r\n        `chmodPromise`,\r\n        `copyFilePromise`,\r\n        `lstatPromise`,\r\n        `openPromise`,\r\n        `readdirPromise`,\r\n        `realpathPromise`,\r\n        `readFilePromise`,\r\n        `readdirPromise`,\r\n        `readlinkPromise`,\r\n        `rmdirPromise`,\r\n        `statPromise`,\r\n        `symlinkPromise`,\r\n        `unlinkPromise`,\r\n        `utimesPromise`,\r\n        `writeFilePromise`,\r\n    ]);\r\n    patchedFs.existsSync = (p) => {\r\n        try {\r\n            return fakeFs.existsSync(p);\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    };\r\n    patchedFs.exists = (p, callback) => {\r\n        fakeFs.existsPromise(p).then(result => {\r\n            if (callback) {\r\n                callback(result);\r\n            }\r\n        }, () => {\r\n            if (callback) {\r\n                callback(false);\r\n            }\r\n        });\r\n    };\r\n    for (const fnName of ASYNC_IMPLEMENTATIONS) {\r\n        const fakeImpl = fakeFs[fnName].bind(fakeFs);\r\n        const origName = fnName.replace(/Promise$/, ``);\r\n        patchedFs[origName] = (...args) => {\r\n            const hasCallback = typeof args[args.length - 1] === `function`;\r\n            const callback = hasCallback ? args.pop() : () => { };\r\n            fakeImpl(...args).then((result) => {\r\n                callback(undefined, result);\r\n            }, (error) => {\r\n                callback(error);\r\n            });\r\n        };\r\n    }\r\n    for (const fnName of SYNC_IMPLEMENTATIONS) {\r\n        const fakeImpl = fakeFs[fnName].bind(fakeFs);\r\n        const origName = fnName;\r\n        patchedFs[origName] = fakeImpl;\r\n    }\r\n    patchedFs.realpathSync.native = patchedFs.realpathSync;\r\n    patchedFs.realpath.native = patchedFs.realpath;\r\n}\r\nexports.patchFs = patchFs;\r\nfunction extendFs(realFs, fakeFs) {\r\n    const patchedFs = Object.create(realFs);\r\n    patchFs(patchedFs, fakeFs);\r\n    return patchedFs;\r\n}\r\nexports.extendFs = extendFs;\r\nexports.xfs = new NodeFS_1.NodeFS();\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst fs_1 = __importDefault(__webpack_require__(3));\r\nconst path_1 = __webpack_require__(4);\r\nconst FakeFS_1 = __webpack_require__(5);\r\nconst PORTABLE_PATH_PREFIX = `/mnt/`;\r\nconst PORTABLE_PREFIX_REGEXP = /^\\/mnt\\/([a-zA-Z])(?:\\/(.*))?$/;\r\nclass NodeFS extends FakeFS_1.FakeFS {\r\n    constructor(realFs = fs_1.default) {\r\n        super();\r\n        this.realFs = realFs;\r\n    }\r\n    getRealPath() {\r\n        return `/`;\r\n    }\r\n    async openPromise(p, flags, mode) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.open(NodeFS.fromPortablePath(p), flags, mode, this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    openSync(p, flags, mode) {\r\n        return this.realFs.openSync(NodeFS.fromPortablePath(p), flags, mode);\r\n    }\r\n    async closePromise(fd) {\r\n        await new Promise((resolve, reject) => {\r\n            this.realFs.close(fd, this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    closeSync(fd) {\r\n        this.realFs.closeSync(fd);\r\n    }\r\n    createReadStream(p, opts) {\r\n        return this.realFs.createReadStream(NodeFS.fromPortablePath(p), opts);\r\n    }\r\n    createWriteStream(p, opts) {\r\n        return this.realFs.createWriteStream(NodeFS.fromPortablePath(p), opts);\r\n    }\r\n    async realpathPromise(p) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.realpath(NodeFS.fromPortablePath(p), {}, this.makeCallback(resolve, reject));\r\n        }).then(path => {\r\n            return NodeFS.toPortablePath(path);\r\n        });\r\n    }\r\n    realpathSync(p) {\r\n        return NodeFS.toPortablePath(this.realFs.realpathSync(NodeFS.fromPortablePath(p), {}));\r\n    }\r\n    async existsPromise(p) {\r\n        return await new Promise(resolve => {\r\n            this.realFs.exists(NodeFS.fromPortablePath(p), resolve);\r\n        });\r\n    }\r\n    accessSync(p, mode) {\r\n        return this.realFs.accessSync(NodeFS.fromPortablePath(p), mode);\r\n    }\r\n    async accessPromise(p, mode) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.access(NodeFS.fromPortablePath(p), mode, this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    existsSync(p) {\r\n        return this.realFs.existsSync(NodeFS.fromPortablePath(p));\r\n    }\r\n    async statPromise(p) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.stat(NodeFS.fromPortablePath(p), this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    statSync(p) {\r\n        return this.realFs.statSync(NodeFS.fromPortablePath(p));\r\n    }\r\n    async lstatPromise(p) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.lstat(NodeFS.fromPortablePath(p), this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    lstatSync(p) {\r\n        return this.realFs.lstatSync(NodeFS.fromPortablePath(p));\r\n    }\r\n    async chmodPromise(p, mask) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.chmod(NodeFS.fromPortablePath(p), mask, this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    chmodSync(p, mask) {\r\n        return this.realFs.chmodSync(NodeFS.fromPortablePath(p), mask);\r\n    }\r\n    async renamePromise(oldP, newP) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.rename(NodeFS.fromPortablePath(oldP), NodeFS.fromPortablePath(newP), this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    renameSync(oldP, newP) {\r\n        return this.realFs.renameSync(NodeFS.fromPortablePath(oldP), NodeFS.fromPortablePath(newP));\r\n    }\r\n    async copyFilePromise(sourceP, destP, flags = 0) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.copyFile(NodeFS.fromPortablePath(sourceP), NodeFS.fromPortablePath(destP), flags, this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    copyFileSync(sourceP, destP, flags = 0) {\r\n        return this.realFs.copyFileSync(NodeFS.fromPortablePath(sourceP), NodeFS.fromPortablePath(destP), flags);\r\n    }\r\n    async writeFilePromise(p, content, opts) {\r\n        return await new Promise((resolve, reject) => {\r\n            if (opts) {\r\n                this.realFs.writeFile(NodeFS.fromPortablePath(p), content, opts, this.makeCallback(resolve, reject));\r\n            }\r\n            else {\r\n                this.realFs.writeFile(NodeFS.fromPortablePath(p), content, this.makeCallback(resolve, reject));\r\n            }\r\n        });\r\n    }\r\n    writeFileSync(p, content, opts) {\r\n        if (opts) {\r\n            this.realFs.writeFileSync(NodeFS.fromPortablePath(p), content, opts);\r\n        }\r\n        else {\r\n            this.realFs.writeFileSync(NodeFS.fromPortablePath(p), content);\r\n        }\r\n    }\r\n    async unlinkPromise(p) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.unlink(NodeFS.fromPortablePath(p), this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    unlinkSync(p) {\r\n        return this.realFs.unlinkSync(NodeFS.fromPortablePath(p));\r\n    }\r\n    async utimesPromise(p, atime, mtime) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.utimes(NodeFS.fromPortablePath(p), atime, mtime, this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    utimesSync(p, atime, mtime) {\r\n        this.realFs.utimesSync(NodeFS.fromPortablePath(p), atime, mtime);\r\n    }\r\n    async mkdirPromise(p) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.mkdir(NodeFS.fromPortablePath(p), this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    mkdirSync(p) {\r\n        return this.realFs.mkdirSync(NodeFS.fromPortablePath(p));\r\n    }\r\n    async rmdirPromise(p) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.rmdir(NodeFS.fromPortablePath(p), this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    rmdirSync(p) {\r\n        return this.realFs.rmdirSync(NodeFS.fromPortablePath(p));\r\n    }\r\n    async symlinkPromise(target, p) {\r\n        const type = target.endsWith(`/`) ? `dir` : `file`;\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.symlink(NodeFS.fromPortablePath(target.replace(/\\/+$/, ``)), NodeFS.fromPortablePath(p), type, this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    symlinkSync(target, p) {\r\n        const type = target.endsWith(`/`) ? `dir` : `file`;\r\n        return this.realFs.symlinkSync(NodeFS.fromPortablePath(target.replace(/\\/+$/, ``)), NodeFS.fromPortablePath(p), type);\r\n    }\r\n    async readFilePromise(p, encoding) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.readFile(NodeFS.fromPortablePath(p), encoding, this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    readFileSync(p, encoding) {\r\n        return this.realFs.readFileSync(NodeFS.fromPortablePath(p), encoding);\r\n    }\r\n    async readdirPromise(p) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.readdir(NodeFS.fromPortablePath(p), this.makeCallback(resolve, reject));\r\n        });\r\n    }\r\n    readdirSync(p) {\r\n        return this.realFs.readdirSync(NodeFS.fromPortablePath(p));\r\n    }\r\n    async readlinkPromise(p) {\r\n        return await new Promise((resolve, reject) => {\r\n            this.realFs.readlink(NodeFS.fromPortablePath(p), this.makeCallback(resolve, reject));\r\n        }).then(path => {\r\n            return NodeFS.toPortablePath(path);\r\n        });\r\n    }\r\n    readlinkSync(p) {\r\n        return NodeFS.toPortablePath(this.realFs.readlinkSync(NodeFS.fromPortablePath(p)));\r\n    }\r\n    makeCallback(resolve, reject) {\r\n        return (err, result) => {\r\n            if (err) {\r\n                reject(err);\r\n            }\r\n            else {\r\n                resolve(result);\r\n            }\r\n        };\r\n    }\r\n    // Path should look like \"/mnt/N/berry/scripts/plugin-pack.js\"\r\n    // And transform to \"N:\\berry\\scripts\\plugin-pack.js\"\r\n    static fromPortablePath(p) {\r\n        if (path_1.win32.isAbsolute(p) && !path_1.posix.isAbsolute(p)) {\r\n            return p.replace(/\\//g, `\\\\`);\r\n        }\r\n        else if (process.platform === `win32`) {\r\n            const match = p.match(PORTABLE_PREFIX_REGEXP);\r\n            if (!match)\r\n                return p;\r\n            const [, drive, pathWithoutPrefix = ''] = match;\r\n            const windowsPath = pathWithoutPrefix.replace(/\\//g, '\\\\');\r\n            return `${drive}:\\\\${windowsPath}`;\r\n        }\r\n        else {\r\n            return p;\r\n        }\r\n    }\r\n    // Path should look like \"N:/berry/scripts/plugin-pack.js\"\r\n    // And transform to \"/mnt/N/berry/scripts/plugin-pack.js\"\r\n    static toPortablePath(p) {\r\n        p = p.replace(/\\\\/g, `/`);\r\n        if (!path_1.win32.isAbsolute(p) || path_1.posix.isAbsolute(p))\r\n            return p;\r\n        const { root } = path_1.win32.parse(p);\r\n        const driveLetter = root[0];\r\n        const pathWithoutRoot = p.substr(root.length);\r\n        return `${PORTABLE_PATH_PREFIX}${driveLetter}/${pathWithoutRoot}`;\r\n    }\r\n}\r\nexports.NodeFS = NodeFS;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"fs\");\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"path\");\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = __webpack_require__(4);\r\nclass FakeFS {\r\n    resolve(p) {\r\n        return path_1.posix.resolve(`/`, p);\r\n    }\r\n    async removePromise(p) {\r\n        let stat;\r\n        try {\r\n            stat = await this.lstatPromise(p);\r\n        }\r\n        catch (error) {\r\n            if (error.code === `ENOENT`) {\r\n                return;\r\n            }\r\n            else {\r\n                throw error;\r\n            }\r\n        }\r\n        if (stat.isDirectory()) {\r\n            for (const entry of await this.readdirPromise(p))\r\n                await this.removePromise(path_1.posix.resolve(p, entry));\r\n            // 5 gives 1s worth of retries at worst\r\n            for (let t = 0; t < 5; ++t) {\r\n                try {\r\n                    await this.rmdirPromise(p);\r\n                    break;\r\n                }\r\n                catch (error) {\r\n                    if (error.code === `EBUSY` || error.code === `ENOTEMPTY`) {\r\n                        await new Promise(resolve => setTimeout(resolve, t * 100));\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        throw error;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            await this.unlinkPromise(p);\r\n        }\r\n    }\r\n    removeSync(p) {\r\n        let stat;\r\n        try {\r\n            stat = this.lstatSync(p);\r\n        }\r\n        catch (error) {\r\n            if (error.code === `ENOENT`) {\r\n                return;\r\n            }\r\n            else {\r\n                throw error;\r\n            }\r\n        }\r\n        if (stat.isDirectory()) {\r\n            for (const entry of this.readdirSync(p))\r\n                this.removeSync(path_1.posix.resolve(p, entry));\r\n            this.rmdirSync(p);\r\n        }\r\n        else {\r\n            this.unlinkSync(p);\r\n        }\r\n    }\r\n    async mkdirpPromise(p, { chmod, utimes } = {}) {\r\n        p = this.resolve(p);\r\n        if (p === `/`)\r\n            return;\r\n        const parts = p.split(`/`);\r\n        for (let u = 2; u <= parts.length; ++u) {\r\n            const subPath = parts.slice(0, u).join(`/`);\r\n            if (!this.existsSync(subPath)) {\r\n                try {\r\n                    await this.mkdirPromise(subPath);\r\n                }\r\n                catch (error) {\r\n                    if (error.code === `EEXIST`) {\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        throw error;\r\n                    }\r\n                }\r\n                if (chmod != null)\r\n                    await this.chmodPromise(subPath, chmod);\r\n                if (utimes != null) {\r\n                    await this.utimesPromise(subPath, utimes[0], utimes[1]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    mkdirpSync(p, { chmod, utimes } = {}) {\r\n        p = this.resolve(p);\r\n        if (p === `/`)\r\n            return;\r\n        const parts = p.split(`/`);\r\n        for (let u = 2; u <= parts.length; ++u) {\r\n            const subPath = parts.slice(0, u).join(`/`);\r\n            if (!this.existsSync(subPath)) {\r\n                try {\r\n                    this.mkdirSync(subPath);\r\n                }\r\n                catch (error) {\r\n                    if (error.code === `EEXIST`) {\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        throw error;\r\n                    }\r\n                }\r\n                if (chmod != null)\r\n                    this.chmodSync(subPath, chmod);\r\n                if (utimes != null) {\r\n                    this.utimesSync(subPath, utimes[0], utimes[1]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    async copyPromise(destination, source, { baseFs = this, overwrite = true } = {}) {\r\n        const stat = await baseFs.lstatPromise(source);\r\n        const exists = await this.existsSync(destination);\r\n        if (stat.isDirectory()) {\r\n            await this.mkdirpPromise(destination);\r\n            const directoryListing = await baseFs.readdirPromise(source);\r\n            await Promise.all(directoryListing.map(entry => {\r\n                return this.copyPromise(path_1.posix.join(destination, entry), path_1.posix.join(source, entry), { baseFs, overwrite });\r\n            }));\r\n        }\r\n        else if (stat.isFile()) {\r\n            if (!exists || overwrite) {\r\n                if (exists)\r\n                    await this.removePromise(destination);\r\n                const content = await baseFs.readFilePromise(source);\r\n                await this.writeFilePromise(destination, content);\r\n            }\r\n        }\r\n        else if (stat.isSymbolicLink()) {\r\n            if (!exists || overwrite) {\r\n                if (exists)\r\n                    await this.removePromise(destination);\r\n                const target = await baseFs.readlinkPromise(source);\r\n                await this.symlinkPromise(target, destination);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(`Unsupported file type (file: ${source}, mode: 0o${stat.mode.toString(8).padStart(6, `0`)})`);\r\n        }\r\n        const mode = stat.mode & 0o777;\r\n        await this.chmodPromise(destination, mode);\r\n    }\r\n    copySync(destination, source, { baseFs = this, overwrite = true } = {}) {\r\n        const stat = baseFs.lstatSync(source);\r\n        const exists = this.existsSync(destination);\r\n        if (stat.isDirectory()) {\r\n            this.mkdirpSync(destination);\r\n            const directoryListing = baseFs.readdirSync(source);\r\n            for (const entry of directoryListing) {\r\n                this.copySync(path_1.posix.join(destination, entry), path_1.posix.join(source, entry), { baseFs, overwrite });\r\n            }\r\n        }\r\n        else if (stat.isFile()) {\r\n            if (!exists || overwrite) {\r\n                if (exists)\r\n                    this.removeSync(destination);\r\n                const content = baseFs.readFileSync(source);\r\n                this.writeFileSync(destination, content);\r\n            }\r\n        }\r\n        else if (stat.isSymbolicLink()) {\r\n            if (!exists || overwrite) {\r\n                if (exists)\r\n                    this.removeSync(destination);\r\n                const target = baseFs.readlinkSync(source);\r\n                this.symlinkSync(target, destination);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(`Unsupported file type (file: ${source}, mode: 0o${stat.mode.toString(8).padStart(6, `0`)})`);\r\n        }\r\n        const mode = stat.mode & 0o777;\r\n        this.chmodSync(destination, mode);\r\n    }\r\n    async changeFilePromise(p, content) {\r\n        try {\r\n            const current = await this.readFilePromise(p, `utf8`);\r\n            if (current === content) {\r\n                return;\r\n            }\r\n        }\r\n        catch (error) {\r\n            // ignore errors, no big deal\r\n        }\r\n        await this.writeFilePromise(p, content);\r\n    }\r\n    changeFileSync(p, content) {\r\n        try {\r\n            const current = this.readFileSync(p, `utf8`);\r\n            if (current === content) {\r\n                return;\r\n            }\r\n        }\r\n        catch (error) {\r\n            // ignore errors, no big deal\r\n        }\r\n        this.writeFileSync(p, content);\r\n    }\r\n    async movePromise(fromP, toP) {\r\n        try {\r\n            await this.renamePromise(fromP, toP);\r\n        }\r\n        catch (error) {\r\n            if (error.code === `EXDEV`) {\r\n                await this.copyPromise(toP, fromP);\r\n                await this.removePromise(fromP);\r\n            }\r\n            else {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n    moveSync(fromP, toP) {\r\n        try {\r\n            this.renameSync(fromP, toP);\r\n        }\r\n        catch (error) {\r\n            if (error.code === `EXDEV`) {\r\n                this.copySync(toP, fromP);\r\n                this.removeSync(fromP);\r\n            }\r\n            else {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n    async lockPromise(affectedPath, callback) {\r\n        const lockPath = `${affectedPath}.lock`;\r\n        const interval = 1000 / 60;\r\n        const timeout = Date.now() + 60 * 1000;\r\n        let fd = null;\r\n        while (fd === null) {\r\n            try {\r\n                fd = await this.openPromise(lockPath, `wx`);\r\n            }\r\n            catch (error) {\r\n                if (error.code === `EEXIST`) {\r\n                    if (Date.now() < timeout) {\r\n                        await new Promise(resolve => setTimeout(resolve, interval));\r\n                    }\r\n                    else {\r\n                        throw new Error(`Couldn't acquire a lock in a reasonable time (via ${lockPath})`);\r\n                    }\r\n                }\r\n                else {\r\n                    throw error;\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            await callback();\r\n        }\r\n        finally {\r\n            await this.closePromise(fd);\r\n            await this.unlinkPromise(lockPath);\r\n        }\r\n    }\r\n}\r\nexports.FakeFS = FakeFS;\r\n;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst FakeFS_1 = __webpack_require__(5);\r\nclass AliasFS extends FakeFS_1.FakeFS {\r\n    constructor(target, { baseFs }) {\r\n        super();\r\n        this.target = target;\r\n        this.baseFs = baseFs;\r\n    }\r\n    getRealPath() {\r\n        return this.target;\r\n    }\r\n    getBaseFs() {\r\n        return this.baseFs;\r\n    }\r\n    async openPromise(p, flags, mode) {\r\n        return await this.baseFs.openPromise(p, flags, mode);\r\n    }\r\n    openSync(p, flags, mode) {\r\n        return this.baseFs.openSync(p, flags, mode);\r\n    }\r\n    async closePromise(fd) {\r\n        await this.baseFs.closePromise(fd);\r\n    }\r\n    closeSync(fd) {\r\n        this.baseFs.closeSync(fd);\r\n    }\r\n    createReadStream(p, opts) {\r\n        return this.baseFs.createReadStream(p, opts);\r\n    }\r\n    createWriteStream(p, opts) {\r\n        return this.baseFs.createWriteStream(p, opts);\r\n    }\r\n    async realpathPromise(p) {\r\n        return await this.baseFs.realpathPromise(p);\r\n    }\r\n    realpathSync(p) {\r\n        return this.baseFs.realpathSync(p);\r\n    }\r\n    async existsPromise(p) {\r\n        return await this.baseFs.existsPromise(p);\r\n    }\r\n    existsSync(p) {\r\n        return this.baseFs.existsSync(p);\r\n    }\r\n    async accessPromise(p, mode) {\r\n        return await this.baseFs.accessPromise(p, mode);\r\n    }\r\n    accessSync(p, mode) {\r\n        return this.baseFs.accessSync(p, mode);\r\n    }\r\n    async statPromise(p) {\r\n        return await this.baseFs.statPromise(p);\r\n    }\r\n    statSync(p) {\r\n        return this.baseFs.statSync(p);\r\n    }\r\n    async lstatPromise(p) {\r\n        return await this.baseFs.lstatPromise(p);\r\n    }\r\n    lstatSync(p) {\r\n        return this.baseFs.lstatSync(p);\r\n    }\r\n    async chmodPromise(p, mask) {\r\n        return await this.baseFs.chmodPromise(p, mask);\r\n    }\r\n    chmodSync(p, mask) {\r\n        return this.baseFs.chmodSync(p, mask);\r\n    }\r\n    async renamePromise(oldP, newP) {\r\n        return await this.baseFs.renamePromise(oldP, newP);\r\n    }\r\n    renameSync(oldP, newP) {\r\n        return this.baseFs.renameSync(oldP, newP);\r\n    }\r\n    async copyFilePromise(sourceP, destP, flags) {\r\n        return await this.baseFs.copyFilePromise(sourceP, destP, flags);\r\n    }\r\n    copyFileSync(sourceP, destP, flags) {\r\n        return this.baseFs.copyFileSync(sourceP, destP, flags);\r\n    }\r\n    async writeFilePromise(p, content, opts) {\r\n        return await this.baseFs.writeFilePromise(p, content, opts);\r\n    }\r\n    writeFileSync(p, content, opts) {\r\n        return this.baseFs.writeFileSync(p, content, opts);\r\n    }\r\n    async unlinkPromise(p) {\r\n        return await this.baseFs.unlinkPromise(p);\r\n    }\r\n    unlinkSync(p) {\r\n        return this.baseFs.unlinkSync(p);\r\n    }\r\n    async utimesPromise(p, atime, mtime) {\r\n        return await this.baseFs.utimesPromise(p, atime, mtime);\r\n    }\r\n    utimesSync(p, atime, mtime) {\r\n        return this.baseFs.utimesSync(p, atime, mtime);\r\n    }\r\n    async mkdirPromise(p) {\r\n        return await this.baseFs.mkdirPromise(p);\r\n    }\r\n    mkdirSync(p) {\r\n        return this.baseFs.mkdirSync(p);\r\n    }\r\n    async rmdirPromise(p) {\r\n        return await this.baseFs.rmdirPromise(p);\r\n    }\r\n    rmdirSync(p) {\r\n        return this.baseFs.rmdirSync(p);\r\n    }\r\n    async symlinkPromise(target, p) {\r\n        return await this.baseFs.symlinkPromise(target, p);\r\n    }\r\n    symlinkSync(target, p) {\r\n        return this.baseFs.symlinkSync(target, p);\r\n    }\r\n    async readFilePromise(p, encoding) {\r\n        // This weird switch is required to tell TypeScript that the signatures are proper (otherwise it thinks that only the generic one is covered)\r\n        switch (encoding) {\r\n            case `utf8`:\r\n                return await this.baseFs.readFilePromise(p, encoding);\r\n            default:\r\n                return await this.baseFs.readFilePromise(p, encoding);\r\n        }\r\n    }\r\n    readFileSync(p, encoding) {\r\n        // This weird switch is required to tell TypeScript that the signatures are proper (otherwise it thinks that only the generic one is covered)\r\n        switch (encoding) {\r\n            case `utf8`:\r\n                return this.baseFs.readFileSync(p, encoding);\r\n            default:\r\n                return this.baseFs.readFileSync(p, encoding);\r\n        }\r\n    }\r\n    async readdirPromise(p) {\r\n        return await this.baseFs.readdirPromise(p);\r\n    }\r\n    readdirSync(p) {\r\n        return this.baseFs.readdirSync(p);\r\n    }\r\n    async readlinkPromise(p) {\r\n        return await this.baseFs.readlinkPromise(p);\r\n    }\r\n    readlinkSync(p) {\r\n        return this.baseFs.readlinkSync(p);\r\n    }\r\n}\r\nexports.AliasFS = AliasFS;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = __webpack_require__(4);\r\nconst FakeFS_1 = __webpack_require__(5);\r\nconst NodeFS_1 = __webpack_require__(2);\r\nclass CwdFS extends FakeFS_1.FakeFS {\r\n    constructor(target, { baseFs = new NodeFS_1.NodeFS() } = {}) {\r\n        super();\r\n        this.target = target;\r\n        this.baseFs = baseFs;\r\n    }\r\n    getRealPath() {\r\n        return path_1.posix.resolve(this.baseFs.getRealPath(), this.target);\r\n    }\r\n    getTarget() {\r\n        return this.target;\r\n    }\r\n    getBaseFs() {\r\n        return this.baseFs;\r\n    }\r\n    resolve(p) {\r\n        return this.baseFs.resolve(this.fromCwdPath(p));\r\n    }\r\n    async openPromise(p, flags, mode) {\r\n        return await this.baseFs.openPromise(this.fromCwdPath(p), flags, mode);\r\n    }\r\n    openSync(p, flags, mode) {\r\n        return this.baseFs.openSync(this.fromCwdPath(p), flags, mode);\r\n    }\r\n    async closePromise(fd) {\r\n        await this.baseFs.closePromise(fd);\r\n    }\r\n    closeSync(fd) {\r\n        this.baseFs.closeSync(fd);\r\n    }\r\n    createReadStream(p, opts) {\r\n        return this.baseFs.createReadStream(this.fromCwdPath(p), opts);\r\n    }\r\n    createWriteStream(p, opts) {\r\n        return this.baseFs.createWriteStream(this.fromCwdPath(p), opts);\r\n    }\r\n    async realpathPromise(p) {\r\n        return await this.baseFs.realpathPromise(this.fromCwdPath(p));\r\n    }\r\n    realpathSync(p) {\r\n        return this.baseFs.realpathSync(this.fromCwdPath(p));\r\n    }\r\n    async existsPromise(p) {\r\n        return await this.baseFs.existsPromise(this.fromCwdPath(p));\r\n    }\r\n    existsSync(p) {\r\n        return this.baseFs.existsSync(this.fromCwdPath(p));\r\n    }\r\n    async accessPromise(p, mode) {\r\n        return await this.baseFs.accessPromise(this.fromCwdPath(p), mode);\r\n    }\r\n    accessSync(p, mode) {\r\n        return this.baseFs.accessSync(this.fromCwdPath(p), mode);\r\n    }\r\n    async statPromise(p) {\r\n        return await this.baseFs.statPromise(this.fromCwdPath(p));\r\n    }\r\n    statSync(p) {\r\n        return this.baseFs.statSync(this.fromCwdPath(p));\r\n    }\r\n    async lstatPromise(p) {\r\n        return await this.baseFs.lstatPromise(this.fromCwdPath(p));\r\n    }\r\n    lstatSync(p) {\r\n        return this.baseFs.lstatSync(this.fromCwdPath(p));\r\n    }\r\n    async chmodPromise(p, mask) {\r\n        return await this.baseFs.chmodPromise(this.fromCwdPath(p), mask);\r\n    }\r\n    chmodSync(p, mask) {\r\n        return this.baseFs.chmodSync(this.fromCwdPath(p), mask);\r\n    }\r\n    async renamePromise(oldP, newP) {\r\n        return await this.baseFs.renamePromise(this.fromCwdPath(oldP), this.fromCwdPath(newP));\r\n    }\r\n    renameSync(oldP, newP) {\r\n        return this.baseFs.renameSync(this.fromCwdPath(oldP), this.fromCwdPath(newP));\r\n    }\r\n    async copyFilePromise(sourceP, destP, flags) {\r\n        return await this.baseFs.copyFilePromise(this.fromCwdPath(sourceP), this.fromCwdPath(destP), flags);\r\n    }\r\n    copyFileSync(sourceP, destP, flags) {\r\n        return this.baseFs.copyFileSync(this.fromCwdPath(sourceP), this.fromCwdPath(destP), flags);\r\n    }\r\n    async writeFilePromise(p, content, opts) {\r\n        return await this.baseFs.writeFilePromise(this.fromCwdPath(p), content, opts);\r\n    }\r\n    writeFileSync(p, content, opts) {\r\n        return this.baseFs.writeFileSync(this.fromCwdPath(p), content, opts);\r\n    }\r\n    async unlinkPromise(p) {\r\n        return await this.baseFs.unlinkPromise(this.fromCwdPath(p));\r\n    }\r\n    unlinkSync(p) {\r\n        return this.baseFs.unlinkSync(this.fromCwdPath(p));\r\n    }\r\n    async utimesPromise(p, atime, mtime) {\r\n        return await this.baseFs.utimesPromise(this.fromCwdPath(p), atime, mtime);\r\n    }\r\n    utimesSync(p, atime, mtime) {\r\n        return this.baseFs.utimesSync(this.fromCwdPath(p), atime, mtime);\r\n    }\r\n    async mkdirPromise(p) {\r\n        return await this.baseFs.mkdirPromise(this.fromCwdPath(p));\r\n    }\r\n    mkdirSync(p) {\r\n        return this.baseFs.mkdirSync(this.fromCwdPath(p));\r\n    }\r\n    async rmdirPromise(p) {\r\n        return await this.baseFs.rmdirPromise(this.fromCwdPath(p));\r\n    }\r\n    rmdirSync(p) {\r\n        return this.baseFs.rmdirSync(this.fromCwdPath(p));\r\n    }\r\n    async symlinkPromise(target, p) {\r\n        return await this.baseFs.symlinkPromise(target, this.fromCwdPath(p));\r\n    }\r\n    symlinkSync(target, p) {\r\n        return this.baseFs.symlinkSync(target, this.fromCwdPath(p));\r\n    }\r\n    async readFilePromise(p, encoding) {\r\n        // This weird switch is required to tell TypeScript that the signatures are proper (otherwise it thinks that only the generic one is covered)\r\n        switch (encoding) {\r\n            case `utf8`:\r\n                return await this.baseFs.readFilePromise(this.fromCwdPath(p), encoding);\r\n            default:\r\n                return await this.baseFs.readFilePromise(this.fromCwdPath(p), encoding);\r\n        }\r\n    }\r\n    readFileSync(p, encoding) {\r\n        // This weird switch is required to tell TypeScript that the signatures are proper (otherwise it thinks that only the generic one is covered)\r\n        switch (encoding) {\r\n            case `utf8`:\r\n                return this.baseFs.readFileSync(this.fromCwdPath(p), encoding);\r\n            default:\r\n                return this.baseFs.readFileSync(this.fromCwdPath(p), encoding);\r\n        }\r\n    }\r\n    async readdirPromise(p) {\r\n        return await this.baseFs.readdirPromise(this.fromCwdPath(p));\r\n    }\r\n    readdirSync(p) {\r\n        return this.baseFs.readdirSync(this.fromCwdPath(p));\r\n    }\r\n    async readlinkPromise(p) {\r\n        return await this.baseFs.readlinkPromise(this.fromCwdPath(p));\r\n    }\r\n    readlinkSync(p) {\r\n        return this.baseFs.readlinkSync(this.fromCwdPath(p));\r\n    }\r\n    fromCwdPath(p) {\r\n        return path_1.posix.resolve(this.getRealPath(), p);\r\n    }\r\n}\r\nexports.CwdFS = CwdFS;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = __webpack_require__(4);\r\nconst FakeFS_1 = __webpack_require__(5);\r\nconst NodeFS_1 = __webpack_require__(2);\r\nclass JailFS extends FakeFS_1.FakeFS {\r\n    constructor(target, { baseFs = new NodeFS_1.NodeFS() } = {}) {\r\n        super();\r\n        this.target = path_1.posix.resolve(`/`, target);\r\n        this.baseFs = baseFs;\r\n    }\r\n    getRealPath() {\r\n        return path_1.posix.resolve(this.baseFs.getRealPath(), path_1.posix.relative(`/`, this.target));\r\n    }\r\n    getTarget() {\r\n        return this.target;\r\n    }\r\n    getBaseFs() {\r\n        return this.baseFs;\r\n    }\r\n    async openPromise(p, flags, mode) {\r\n        return await this.baseFs.openPromise(this.fromJailedPath(p), flags, mode);\r\n    }\r\n    openSync(p, flags, mode) {\r\n        return this.baseFs.openSync(this.fromJailedPath(p), flags, mode);\r\n    }\r\n    async closePromise(fd) {\r\n        await this.baseFs.closePromise(fd);\r\n    }\r\n    closeSync(fd) {\r\n        this.baseFs.closeSync(fd);\r\n    }\r\n    createReadStream(p, opts) {\r\n        return this.baseFs.createReadStream(this.fromJailedPath(p), opts);\r\n    }\r\n    createWriteStream(p, opts) {\r\n        return this.baseFs.createWriteStream(this.fromJailedPath(p), opts);\r\n    }\r\n    async realpathPromise(p) {\r\n        return this.toJailedPath(await this.baseFs.realpathPromise(this.fromJailedPath(p)));\r\n    }\r\n    realpathSync(p) {\r\n        return this.toJailedPath(this.baseFs.realpathSync(this.fromJailedPath(p)));\r\n    }\r\n    async existsPromise(p) {\r\n        return await this.baseFs.existsPromise(this.fromJailedPath(p));\r\n    }\r\n    existsSync(p) {\r\n        return this.baseFs.existsSync(this.fromJailedPath(p));\r\n    }\r\n    async accessPromise(p, mode) {\r\n        return await this.baseFs.accessPromise(this.fromJailedPath(p), mode);\r\n    }\r\n    accessSync(p, mode) {\r\n        return this.baseFs.accessSync(this.fromJailedPath(p), mode);\r\n    }\r\n    async statPromise(p) {\r\n        return await this.baseFs.statPromise(this.fromJailedPath(p));\r\n    }\r\n    statSync(p) {\r\n        return this.baseFs.statSync(this.fromJailedPath(p));\r\n    }\r\n    async lstatPromise(p) {\r\n        return await this.baseFs.lstatPromise(this.fromJailedPath(p));\r\n    }\r\n    lstatSync(p) {\r\n        return this.baseFs.lstatSync(this.fromJailedPath(p));\r\n    }\r\n    async chmodPromise(p, mask) {\r\n        return await this.baseFs.chmodPromise(this.fromJailedPath(p), mask);\r\n    }\r\n    chmodSync(p, mask) {\r\n        return this.baseFs.chmodSync(this.fromJailedPath(p), mask);\r\n    }\r\n    async renamePromise(oldP, newP) {\r\n        return await this.baseFs.renamePromise(this.fromJailedPath(oldP), this.fromJailedPath(newP));\r\n    }\r\n    renameSync(oldP, newP) {\r\n        return this.baseFs.renameSync(this.fromJailedPath(oldP), this.fromJailedPath(newP));\r\n    }\r\n    async copyFilePromise(sourceP, destP, flags) {\r\n        return await this.baseFs.copyFilePromise(this.fromJailedPath(sourceP), this.fromJailedPath(destP), flags);\r\n    }\r\n    copyFileSync(sourceP, destP, flags) {\r\n        return this.baseFs.copyFileSync(this.fromJailedPath(sourceP), this.fromJailedPath(destP), flags);\r\n    }\r\n    async writeFilePromise(p, content, opts) {\r\n        return await this.baseFs.writeFilePromise(this.fromJailedPath(p), content, opts);\r\n    }\r\n    writeFileSync(p, content, opts) {\r\n        return this.baseFs.writeFileSync(this.fromJailedPath(p), content, opts);\r\n    }\r\n    async unlinkPromise(p) {\r\n        return await this.baseFs.unlinkPromise(this.fromJailedPath(p));\r\n    }\r\n    unlinkSync(p) {\r\n        return this.baseFs.unlinkSync(this.fromJailedPath(p));\r\n    }\r\n    async utimesPromise(p, atime, mtime) {\r\n        return await this.baseFs.utimesPromise(this.fromJailedPath(p), atime, mtime);\r\n    }\r\n    utimesSync(p, atime, mtime) {\r\n        return this.baseFs.utimesSync(this.fromJailedPath(p), atime, mtime);\r\n    }\r\n    async mkdirPromise(p) {\r\n        return await this.baseFs.mkdirPromise(this.fromJailedPath(p));\r\n    }\r\n    mkdirSync(p) {\r\n        return this.baseFs.mkdirSync(this.fromJailedPath(p));\r\n    }\r\n    async rmdirPromise(p) {\r\n        return await this.baseFs.rmdirPromise(this.fromJailedPath(p));\r\n    }\r\n    rmdirSync(p) {\r\n        return this.baseFs.rmdirSync(this.fromJailedPath(p));\r\n    }\r\n    async symlinkPromise(target, p) {\r\n        return await this.baseFs.symlinkPromise(target, this.fromJailedPath(p));\r\n    }\r\n    symlinkSync(target, p) {\r\n        return this.baseFs.symlinkSync(target, this.fromJailedPath(p));\r\n    }\r\n    async readFilePromise(p, encoding) {\r\n        // This weird switch is required to tell TypeScript that the signatures are proper (otherwise it thinks that only the generic one is covered)\r\n        switch (encoding) {\r\n            case `utf8`:\r\n                return await this.baseFs.readFilePromise(this.fromJailedPath(p), encoding);\r\n            default:\r\n                return await this.baseFs.readFilePromise(this.fromJailedPath(p), encoding);\r\n        }\r\n    }\r\n    readFileSync(p, encoding) {\r\n        // This weird switch is required to tell TypeScript that the signatures are proper (otherwise it thinks that only the generic one is covered)\r\n        switch (encoding) {\r\n            case `utf8`:\r\n                return this.baseFs.readFileSync(this.fromJailedPath(p), encoding);\r\n            default:\r\n                return this.baseFs.readFileSync(this.fromJailedPath(p), encoding);\r\n        }\r\n    }\r\n    async readdirPromise(p) {\r\n        return await this.baseFs.readdirPromise(this.fromJailedPath(p));\r\n    }\r\n    readdirSync(p) {\r\n        return this.baseFs.readdirSync(this.fromJailedPath(p));\r\n    }\r\n    async readlinkPromise(p) {\r\n        return await this.baseFs.readlinkPromise(this.fromJailedPath(p));\r\n    }\r\n    readlinkSync(p) {\r\n        return this.baseFs.readlinkSync(this.fromJailedPath(p));\r\n    }\r\n    fromJailedPath(p) {\r\n        const normalized = path_1.posix.normalize(p);\r\n        if (path_1.posix.isAbsolute(p))\r\n            return path_1.posix.resolve(this.target, path_1.posix.relative(`/`, p));\r\n        if (normalized.match(/^\\.\\.\\//))\r\n            throw new Error(`Resolving this path (${p}) would escape the jail`);\r\n        return path_1.posix.resolve(this.target, p);\r\n    }\r\n    toJailedPath(p) {\r\n        return path_1.posix.resolve(`/`, path_1.posix.relative(this.target, p));\r\n    }\r\n}\r\nexports.JailFS = JailFS;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst FakeFS_1 = __webpack_require__(5);\r\nclass LazyFS extends FakeFS_1.FakeFS {\r\n    constructor(factory) {\r\n        super();\r\n        this.baseFs = null;\r\n        this.factory = factory;\r\n    }\r\n    getRealPath() {\r\n        return this.prepareFs().getRealPath();\r\n    }\r\n    async openPromise(p, flags, mode) {\r\n        return await this.prepareFs().openPromise(p, flags, mode);\r\n    }\r\n    openSync(p, flags, mode) {\r\n        return this.prepareFs().openSync(p, flags, mode);\r\n    }\r\n    async closePromise(fd) {\r\n        await this.prepareFs().closePromise(fd);\r\n    }\r\n    closeSync(fd) {\r\n        this.prepareFs().closeSync(fd);\r\n    }\r\n    createReadStream(p, opts) {\r\n        return this.prepareFs().createReadStream(p, opts);\r\n    }\r\n    createWriteStream(p, opts) {\r\n        return this.prepareFs().createWriteStream(p, opts);\r\n    }\r\n    async realpathPromise(p) {\r\n        return await this.prepareFs().realpathPromise(p);\r\n    }\r\n    realpathSync(p) {\r\n        return this.prepareFs().realpathSync(p);\r\n    }\r\n    async existsPromise(p) {\r\n        return await this.prepareFs().existsPromise(p);\r\n    }\r\n    existsSync(p) {\r\n        return this.prepareFs().existsSync(p);\r\n    }\r\n    async accessPromise(p, mode) {\r\n        return await this.prepareFs().accessPromise(p, mode);\r\n    }\r\n    accessSync(p, mode) {\r\n        return this.prepareFs().accessSync(p, mode);\r\n    }\r\n    async statPromise(p) {\r\n        return await this.prepareFs().statPromise(p);\r\n    }\r\n    statSync(p) {\r\n        return this.prepareFs().statSync(p);\r\n    }\r\n    async lstatPromise(p) {\r\n        return await this.prepareFs().lstatPromise(p);\r\n    }\r\n    lstatSync(p) {\r\n        return this.prepareFs().lstatSync(p);\r\n    }\r\n    async chmodPromise(p, mask) {\r\n        return await this.prepareFs().chmodPromise(p, mask);\r\n    }\r\n    chmodSync(p, mask) {\r\n        return this.prepareFs().chmodSync(p, mask);\r\n    }\r\n    async renamePromise(oldP, newP) {\r\n        return await this.prepareFs().renamePromise(oldP, newP);\r\n    }\r\n    renameSync(oldP, newP) {\r\n        return this.prepareFs().renameSync(oldP, newP);\r\n    }\r\n    async copyFilePromise(sourceP, destP, flags) {\r\n        return await this.prepareFs().copyFilePromise(sourceP, destP, flags);\r\n    }\r\n    copyFileSync(sourceP, destP, flags) {\r\n        return this.prepareFs().copyFileSync(sourceP, destP, flags);\r\n    }\r\n    async writeFilePromise(p, content, opts) {\r\n        return await this.prepareFs().writeFilePromise(p, content, opts);\r\n    }\r\n    writeFileSync(p, content, opts) {\r\n        return this.prepareFs().writeFileSync(p, content, opts);\r\n    }\r\n    async unlinkPromise(p) {\r\n        return await this.prepareFs().unlinkPromise(p);\r\n    }\r\n    unlinkSync(p) {\r\n        return this.prepareFs().unlinkSync(p);\r\n    }\r\n    async utimesPromise(p, atime, mtime) {\r\n        return await this.prepareFs().utimesPromise(p, atime, mtime);\r\n    }\r\n    utimesSync(p, atime, mtime) {\r\n        return this.prepareFs().utimesSync(p, atime, mtime);\r\n    }\r\n    async mkdirPromise(p) {\r\n        return await this.prepareFs().mkdirPromise(p);\r\n    }\r\n    mkdirSync(p) {\r\n        return this.prepareFs().mkdirSync(p);\r\n    }\r\n    async rmdirPromise(p) {\r\n        return await this.prepareFs().rmdirPromise(p);\r\n    }\r\n    rmdirSync(p) {\r\n        return this.prepareFs().rmdirSync(p);\r\n    }\r\n    async symlinkPromise(target, p) {\r\n        return await this.prepareFs().symlinkPromise(target, p);\r\n    }\r\n    symlinkSync(target, p) {\r\n        return this.prepareFs().symlinkSync(target, p);\r\n    }\r\n    async readFilePromise(p, encoding) {\r\n        // This weird switch is required to tell TypeScript that the signatures are proper (otherwise it thinks that only the generic one is covered)\r\n        switch (encoding) {\r\n            case `utf8`:\r\n                return await this.prepareFs().readFilePromise(p, encoding);\r\n            default:\r\n                return await this.prepareFs().readFilePromise(p, encoding);\r\n        }\r\n    }\r\n    readFileSync(p, encoding) {\r\n        // This weird switch is required to tell TypeScript that the signatures are proper (otherwise it thinks that only the generic one is covered)\r\n        switch (encoding) {\r\n            case `utf8`:\r\n                return this.prepareFs().readFileSync(p, encoding);\r\n            default:\r\n                return this.prepareFs().readFileSync(p, encoding);\r\n        }\r\n    }\r\n    async readdirPromise(p) {\r\n        return await this.prepareFs().readdirPromise(p);\r\n    }\r\n    readdirSync(p) {\r\n        return this.prepareFs().readdirSync(p);\r\n    }\r\n    async readlinkPromise(p) {\r\n        return await this.prepareFs().readlinkPromise(p);\r\n    }\r\n    readlinkSync(p) {\r\n        return this.prepareFs().readlinkSync(p);\r\n    }\r\n    prepareFs() {\r\n        let baseFs = this.baseFs;\r\n        if (baseFs === null)\r\n            baseFs = this.baseFs = this.factory();\r\n        return baseFs;\r\n    }\r\n}\r\nexports.LazyFS = LazyFS;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst FakeFS_1 = __webpack_require__(5);\r\nconst NodeFS_1 = __webpack_require__(2);\r\nclass PosixFS extends FakeFS_1.FakeFS {\r\n    constructor(baseFs) {\r\n        super();\r\n        this.baseFs = baseFs;\r\n    }\r\n    getRealPath() {\r\n        return NodeFS_1.NodeFS.fromPortablePath(this.baseFs.getRealPath());\r\n    }\r\n    async openPromise(p, flags, mode) {\r\n        return await this.baseFs.openPromise(NodeFS_1.NodeFS.toPortablePath(p), flags, mode);\r\n    }\r\n    openSync(p, flags, mode) {\r\n        return this.baseFs.openSync(NodeFS_1.NodeFS.toPortablePath(p), flags, mode);\r\n    }\r\n    async closePromise(fd) {\r\n        await this.baseFs.closePromise(fd);\r\n    }\r\n    closeSync(fd) {\r\n        this.baseFs.closeSync(fd);\r\n    }\r\n    createReadStream(p, opts) {\r\n        return this.baseFs.createReadStream(NodeFS_1.NodeFS.toPortablePath(p), opts);\r\n    }\r\n    createWriteStream(p, opts) {\r\n        return this.baseFs.createWriteStream(NodeFS_1.NodeFS.toPortablePath(p), opts);\r\n    }\r\n    async realpathPromise(p) {\r\n        return NodeFS_1.NodeFS.fromPortablePath(await this.baseFs.realpathPromise(NodeFS_1.NodeFS.toPortablePath(p)));\r\n    }\r\n    realpathSync(p) {\r\n        return NodeFS_1.NodeFS.fromPortablePath(this.baseFs.realpathSync(NodeFS_1.NodeFS.toPortablePath(p)));\r\n    }\r\n    async existsPromise(p) {\r\n        return await this.baseFs.existsPromise(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    existsSync(p) {\r\n        return this.baseFs.existsSync(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    async accessPromise(p, mode) {\r\n        return await this.baseFs.accessPromise(NodeFS_1.NodeFS.toPortablePath(p), mode);\r\n    }\r\n    accessSync(p, mode) {\r\n        return this.baseFs.accessSync(NodeFS_1.NodeFS.toPortablePath(p), mode);\r\n    }\r\n    async statPromise(p) {\r\n        return await this.baseFs.statPromise(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    statSync(p) {\r\n        return this.baseFs.statSync(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    async lstatPromise(p) {\r\n        return await this.baseFs.lstatPromise(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    lstatSync(p) {\r\n        return this.baseFs.lstatSync(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    async chmodPromise(p, mask) {\r\n        return await this.baseFs.chmodPromise(NodeFS_1.NodeFS.toPortablePath(p), mask);\r\n    }\r\n    chmodSync(p, mask) {\r\n        return this.baseFs.chmodSync(NodeFS_1.NodeFS.toPortablePath(p), mask);\r\n    }\r\n    async renamePromise(oldP, newP) {\r\n        return await this.baseFs.renamePromise(NodeFS_1.NodeFS.toPortablePath(oldP), NodeFS_1.NodeFS.toPortablePath(newP));\r\n    }\r\n    renameSync(oldP, newP) {\r\n        return this.baseFs.renameSync(NodeFS_1.NodeFS.toPortablePath(oldP), NodeFS_1.NodeFS.toPortablePath(newP));\r\n    }\r\n    async copyFilePromise(sourceP, destP, flags) {\r\n        return await this.baseFs.copyFilePromise(NodeFS_1.NodeFS.toPortablePath(sourceP), NodeFS_1.NodeFS.toPortablePath(destP), flags);\r\n    }\r\n    copyFileSync(sourceP, destP, flags) {\r\n        return this.baseFs.copyFileSync(NodeFS_1.NodeFS.toPortablePath(sourceP), NodeFS_1.NodeFS.toPortablePath(destP), flags);\r\n    }\r\n    async writeFilePromise(p, content, opts) {\r\n        return await this.baseFs.writeFilePromise(NodeFS_1.NodeFS.toPortablePath(p), content, opts);\r\n    }\r\n    writeFileSync(p, content, opts) {\r\n        return this.baseFs.writeFileSync(NodeFS_1.NodeFS.toPortablePath(p), content, opts);\r\n    }\r\n    async unlinkPromise(p) {\r\n        return await this.baseFs.unlinkPromise(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    unlinkSync(p) {\r\n        return this.baseFs.unlinkSync(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    async utimesPromise(p, atime, mtime) {\r\n        return await this.baseFs.utimesPromise(NodeFS_1.NodeFS.toPortablePath(p), atime, mtime);\r\n    }\r\n    utimesSync(p, atime, mtime) {\r\n        return this.baseFs.utimesSync(NodeFS_1.NodeFS.toPortablePath(p), atime, mtime);\r\n    }\r\n    async mkdirPromise(p) {\r\n        return await this.baseFs.mkdirPromise(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    mkdirSync(p) {\r\n        return this.baseFs.mkdirSync(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    async rmdirPromise(p) {\r\n        return await this.baseFs.rmdirPromise(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    rmdirSync(p) {\r\n        return this.baseFs.rmdirSync(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    async symlinkPromise(target, p) {\r\n        return await this.baseFs.symlinkPromise(target, NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    symlinkSync(target, p) {\r\n        return this.baseFs.symlinkSync(target, NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    async readFilePromise(p, encoding) {\r\n        // This weird switch is required to tell TypeScript that the signatures are proper (otherwise it thinks that only the generic one is covered)\r\n        switch (encoding) {\r\n            case `utf8`:\r\n                return await this.baseFs.readFilePromise(NodeFS_1.NodeFS.toPortablePath(p), encoding);\r\n            default:\r\n                return await this.baseFs.readFilePromise(NodeFS_1.NodeFS.toPortablePath(p), encoding);\r\n        }\r\n    }\r\n    readFileSync(p, encoding) {\r\n        // This weird switch is required to tell TypeScript that the signatures are proper (otherwise it thinks that only the generic one is covered)\r\n        switch (encoding) {\r\n            case `utf8`:\r\n                return this.baseFs.readFileSync(NodeFS_1.NodeFS.toPortablePath(p), encoding);\r\n            default:\r\n                return this.baseFs.readFileSync(NodeFS_1.NodeFS.toPortablePath(p), encoding);\r\n        }\r\n    }\r\n    async readdirPromise(p) {\r\n        return await this.baseFs.readdirPromise(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    readdirSync(p) {\r\n        return this.baseFs.readdirSync(NodeFS_1.NodeFS.toPortablePath(p));\r\n    }\r\n    async readlinkPromise(p) {\r\n        return NodeFS_1.NodeFS.fromPortablePath(await this.baseFs.readlinkPromise(NodeFS_1.NodeFS.toPortablePath(p)));\r\n    }\r\n    readlinkSync(p) {\r\n        return NodeFS_1.NodeFS.fromPortablePath(this.baseFs.readlinkSync(NodeFS_1.NodeFS.toPortablePath(p)));\r\n    }\r\n}\r\nexports.PosixFS = PosixFS;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst libzip_1 = __importDefault(__webpack_require__(12));\r\nconst fs_1 = __webpack_require__(3);\r\nconst path_1 = __webpack_require__(4);\r\nconst stream_1 = __webpack_require__(15);\r\nconst util_1 = __webpack_require__(16);\r\nconst FakeFS_1 = __webpack_require__(5);\r\nconst NodeFS_1 = __webpack_require__(2);\r\nconst S_IFMT = 0o170000;\r\nconst S_IFDIR = 0o040000;\r\nconst S_IFREG = 0o100000;\r\nconst S_IFLNK = 0o120000;\r\nclass StatEntry {\r\n    constructor() {\r\n        this.dev = 0;\r\n        this.ino = 0;\r\n        this.mode = 0;\r\n        this.nlink = 1;\r\n        this.rdev = 0;\r\n        this.blocks = 1;\r\n    }\r\n    isBlockDevice() {\r\n        return false;\r\n    }\r\n    isCharacterDevice() {\r\n        return false;\r\n    }\r\n    isDirectory() {\r\n        return (this.mode & S_IFMT) === S_IFDIR;\r\n    }\r\n    isFIFO() {\r\n        return false;\r\n    }\r\n    isFile() {\r\n        return (this.mode & S_IFMT) === S_IFREG;\r\n    }\r\n    isSocket() {\r\n        return false;\r\n    }\r\n    isSymbolicLink() {\r\n        return (this.mode & S_IFMT) === S_IFLNK;\r\n    }\r\n}\r\nfunction makeDefaultStats() {\r\n    return Object.assign(new StatEntry(), {\r\n        uid: 0,\r\n        gid: 0,\r\n        size: 0,\r\n        blksize: 0,\r\n        atimeMs: 0,\r\n        mtimeMs: 0,\r\n        ctimeMs: 0,\r\n        birthtimeMs: 0,\r\n        atime: new Date(0),\r\n        mtime: new Date(0),\r\n        ctime: new Date(0),\r\n        birthtime: new Date(0),\r\n        mode: S_IFREG | 0o644,\r\n    });\r\n}\r\nfunction toUnixTimestamp(time) {\r\n    if (typeof time === 'string' && String(+time) === time)\r\n        return +time;\r\n    // @ts-ignore\r\n    if (Number.isFinite(time)) {\r\n        if (time < 0) {\r\n            return Date.now() / 1000;\r\n        }\r\n        else {\r\n            return time;\r\n        }\r\n    }\r\n    // convert to 123.456 UNIX timestamp\r\n    if (util_1.isDate(time))\r\n        return time.getTime() / 1000;\r\n    throw new Error(`Invalid time`);\r\n}\r\nclass ZipFS extends FakeFS_1.FakeFS {\r\n    constructor(source, opts) {\r\n        super();\r\n        this.listings = new Map();\r\n        this.entries = new Map();\r\n        this.ready = false;\r\n        const pathOptions = opts;\r\n        if (typeof source === `string`) {\r\n            const { baseFs = new NodeFS_1.NodeFS() } = pathOptions;\r\n            this.baseFs = baseFs;\r\n            this.path = source;\r\n        }\r\n        else {\r\n            this.path = null;\r\n            this.baseFs = null;\r\n        }\r\n        if (opts.stats) {\r\n            this.stats = opts.stats;\r\n        }\r\n        else {\r\n            if (typeof source === `string`) {\r\n                try {\r\n                    this.stats = this.baseFs.statSync(source);\r\n                }\r\n                catch (error) {\r\n                    if (error.code === `ENOENT` && pathOptions.create) {\r\n                        this.stats = makeDefaultStats();\r\n                    }\r\n                    else {\r\n                        throw error;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.stats = makeDefaultStats();\r\n            }\r\n        }\r\n        const errPtr = libzip_1.default.malloc(4);\r\n        try {\r\n            let flags = 0;\r\n            if (typeof source === `string` && pathOptions.create)\r\n                flags |= libzip_1.default.ZIP_CREATE | libzip_1.default.ZIP_TRUNCATE;\r\n            if (opts.readOnly)\r\n                flags |= libzip_1.default.ZIP_RDONLY;\r\n            if (typeof source === `string`) {\r\n                this.zip = libzip_1.default.open(NodeFS_1.NodeFS.fromPortablePath(source), flags, errPtr);\r\n            }\r\n            else {\r\n                const lzSource = this.allocateUnattachedSource(source);\r\n                try {\r\n                    this.zip = libzip_1.default.openFromSource(lzSource, flags, errPtr);\r\n                }\r\n                catch (error) {\r\n                    libzip_1.default.source.free(lzSource);\r\n                    throw error;\r\n                }\r\n            }\r\n            if (this.zip === 0) {\r\n                const error = libzip_1.default.struct.errorS();\r\n                libzip_1.default.error.initWithCode(error, libzip_1.default.getValue(errPtr, `i32`));\r\n                throw new Error(libzip_1.default.error.strerror(error));\r\n            }\r\n        }\r\n        finally {\r\n            libzip_1.default.free(errPtr);\r\n        }\r\n        this.listings.set(`/`, new Set());\r\n        const entryCount = libzip_1.default.getNumEntries(this.zip, 0);\r\n        for (let t = 0; t < entryCount; ++t) {\r\n            const raw = libzip_1.default.getName(this.zip, t, 0);\r\n            if (path_1.posix.isAbsolute(raw))\r\n                continue;\r\n            const p = path_1.posix.resolve(`/`, raw);\r\n            this.registerEntry(p, t);\r\n            // If the raw path is a directory, register it\r\n            // to prevent empty folder being skipped\r\n            if (raw.endsWith('/')) {\r\n                this.registerListing(p);\r\n            }\r\n        }\r\n        this.ready = true;\r\n    }\r\n    getAllFiles() {\r\n        return Array.from(this.entries.keys());\r\n    }\r\n    getRealPath() {\r\n        if (!this.path)\r\n            throw new Error(`ZipFS don't have real paths when loaded from a buffer`);\r\n        return this.path;\r\n    }\r\n    saveAndClose() {\r\n        if (!this.path || !this.baseFs)\r\n            throw new Error(`ZipFS cannot be saved and must be discarded when loaded from a buffer`);\r\n        if (!this.ready)\r\n            throw Object.assign(new Error(`EBUSY: archive closed, close`), { code: `EBUSY` });\r\n        const previousMod = this.baseFs.existsSync(this.path)\r\n            ? this.baseFs.statSync(this.path).mode & 0o777\r\n            : null;\r\n        const rc = libzip_1.default.close(this.zip);\r\n        if (rc === -1)\r\n            throw new Error(libzip_1.default.error.strerror(libzip_1.default.getError(this.zip)));\r\n        // Libzip overrides the chmod when writing the archive, which is a weird\r\n        // behavior I don't totally understand (plus the umask seems bogus in some\r\n        // weird cases - maybe related to emscripten?)\r\n        //\r\n        // See also https://github.com/nih-at/libzip/issues/77\r\n        if (previousMod !== null && previousMod !== (this.baseFs.statSync(this.path).mode & 0o777))\r\n            this.baseFs.chmodSync(this.path, previousMod);\r\n        this.ready = false;\r\n    }\r\n    discardAndClose() {\r\n        libzip_1.default.discard(this.zip);\r\n        this.ready = false;\r\n    }\r\n    async openPromise(p, flags, mode) {\r\n        return this.openSync(p, flags, mode);\r\n    }\r\n    openSync(p, flags, mode) {\r\n        throw new Error(`Unimplemented`);\r\n    }\r\n    async closePromise(fd) {\r\n        this.closeSync(fd);\r\n    }\r\n    closeSync(fd) {\r\n        throw new Error(`Unimplemented`);\r\n    }\r\n    createReadStream(p, { encoding } = {}) {\r\n        const stream = Object.assign(new stream_1.PassThrough(), {\r\n            bytesRead: 0,\r\n            path: p,\r\n            close: () => {\r\n                clearImmediate(immediate);\r\n            },\r\n        });\r\n        const immediate = setImmediate(() => {\r\n            try {\r\n                const data = this.readFileSync(p, encoding);\r\n                stream.bytesRead = data.length;\r\n                stream.write(data);\r\n                stream.end();\r\n            }\r\n            catch (error) {\r\n                stream.emit(`error`, error);\r\n                stream.end();\r\n            }\r\n        });\r\n        return stream;\r\n    }\r\n    createWriteStream(p, { encoding } = {}) {\r\n        const stream = Object.assign(new stream_1.PassThrough(), {\r\n            bytesWritten: 0,\r\n            path: p,\r\n            close: () => {\r\n                stream.end();\r\n            },\r\n        });\r\n        const chunks = [];\r\n        stream.on(`data`, chunk => {\r\n            const chunkBuffer = Buffer.from(chunk);\r\n            stream.bytesWritten += chunkBuffer.length;\r\n            chunks.push(chunkBuffer);\r\n        });\r\n        stream.on(`end`, () => {\r\n            this.writeFileSync(p, Buffer.concat(chunks), encoding);\r\n        });\r\n        return stream;\r\n    }\r\n    async realpathPromise(p) {\r\n        return this.realpathSync(p);\r\n    }\r\n    realpathSync(p) {\r\n        const resolvedP = this.resolveFilename(`lstat '${p}'`, p);\r\n        if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`ENOENT: no such file or directory, lstat '${p}'`), { code: `ENOENT` });\r\n        return resolvedP;\r\n    }\r\n    async existsPromise(p) {\r\n        return this.existsSync(p);\r\n    }\r\n    existsSync(p) {\r\n        let resolvedP;\r\n        try {\r\n            resolvedP = this.resolveFilename(`stat '${p}'`, p);\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n        return this.entries.has(resolvedP) || this.listings.has(resolvedP);\r\n    }\r\n    async accessPromise(p, mode) {\r\n        return this.accessSync(p, mode);\r\n    }\r\n    accessSync(p, mode) {\r\n        const resolvedP = this.resolveFilename(`access '${p}'`, p);\r\n        if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP)) {\r\n            throw Object.assign(new Error(`ENOENT: no such file or directory, access '${p}'`), { code: `ENOENT` });\r\n        }\r\n    }\r\n    async statPromise(p) {\r\n        return this.statSync(p);\r\n    }\r\n    statSync(p) {\r\n        const resolvedP = this.resolveFilename(`stat '${p}'`, p);\r\n        if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`ENOENT: no such file or directory, stat '${p}'`), { code: `ENOENT` });\r\n        if (p[p.length - 1] === `/` && !this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`ENOTDIR: not a directory, stat '${p}'`), { code: `ENOTDIR` });\r\n        return this.statImpl(`stat '${p}'`, resolvedP);\r\n    }\r\n    async lstatPromise(p) {\r\n        return this.lstatSync(p);\r\n    }\r\n    lstatSync(p) {\r\n        const resolvedP = this.resolveFilename(`lstat '${p}'`, p, false);\r\n        if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`ENOENT: no such file or directory, lstat '${p}'`), { code: `ENOENT` });\r\n        if (p[p.length - 1] === `/` && !this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`ENOTDIR: not a directory, lstat '${p}'`), { code: `ENOTDIR` });\r\n        return this.statImpl(`lstat '${p}'`, resolvedP);\r\n    }\r\n    statImpl(reason, p) {\r\n        if (this.listings.has(p)) {\r\n            const uid = this.stats.uid;\r\n            const gid = this.stats.gid;\r\n            const size = 0;\r\n            const blksize = 512;\r\n            const blocks = 0;\r\n            const atimeMs = this.stats.mtimeMs;\r\n            const birthtimeMs = this.stats.mtimeMs;\r\n            const ctimeMs = this.stats.mtimeMs;\r\n            const mtimeMs = this.stats.mtimeMs;\r\n            const atime = new Date(atimeMs);\r\n            const birthtime = new Date(birthtimeMs);\r\n            const ctime = new Date(ctimeMs);\r\n            const mtime = new Date(mtimeMs);\r\n            const mode = S_IFDIR | 0o755;\r\n            return Object.assign(new StatEntry(), { uid, gid, size, blksize, blocks, atime, birthtime, ctime, mtime, atimeMs, birthtimeMs, ctimeMs, mtimeMs, mode });\r\n        }\r\n        const entry = this.entries.get(p);\r\n        if (entry !== undefined) {\r\n            const stat = libzip_1.default.struct.statS();\r\n            const rc = libzip_1.default.statIndex(this.zip, entry, 0, 0, stat);\r\n            if (rc === -1)\r\n                throw new Error(libzip_1.default.error.strerror(libzip_1.default.getError(this.zip)));\r\n            const uid = this.stats.uid;\r\n            const gid = this.stats.gid;\r\n            const size = (libzip_1.default.struct.statSize(stat) >>> 0);\r\n            const blksize = 512;\r\n            const blocks = Math.ceil(size / blksize);\r\n            const mtimeMs = (libzip_1.default.struct.statMtime(stat) >>> 0) * 1000;\r\n            const atimeMs = mtimeMs;\r\n            const birthtimeMs = mtimeMs;\r\n            const ctimeMs = mtimeMs;\r\n            const atime = new Date(atimeMs);\r\n            const birthtime = new Date(birthtimeMs);\r\n            const ctime = new Date(ctimeMs);\r\n            const mtime = new Date(mtimeMs);\r\n            const mode = this.getUnixMode(entry, S_IFREG | 0o644);\r\n            return Object.assign(new StatEntry(), { uid, gid, size, blksize, blocks, atime, birthtime, ctime, mtime, atimeMs, birthtimeMs, ctimeMs, mtimeMs, mode });\r\n        }\r\n        throw new Error(`Unreachable`);\r\n    }\r\n    getUnixMode(index, defaultMode) {\r\n        const rc = libzip_1.default.file.getExternalAttributes(this.zip, index, 0, 0, libzip_1.default.uint08S, libzip_1.default.uint32S);\r\n        if (rc === -1)\r\n            throw new Error(libzip_1.default.error.strerror(libzip_1.default.getError(this.zip)));\r\n        const opsys = libzip_1.default.getValue(libzip_1.default.uint08S, `i8`) >>> 0;\r\n        if (opsys !== libzip_1.default.ZIP_OPSYS_UNIX)\r\n            return defaultMode;\r\n        return libzip_1.default.getValue(libzip_1.default.uint32S, `i32`) >>> 16;\r\n    }\r\n    registerListing(p) {\r\n        let listing = this.listings.get(p);\r\n        if (listing)\r\n            return listing;\r\n        const parentListing = this.registerListing(path_1.posix.dirname(p));\r\n        listing = new Set();\r\n        parentListing.add(path_1.posix.basename(p));\r\n        this.listings.set(p, listing);\r\n        return listing;\r\n    }\r\n    registerEntry(p, index) {\r\n        const parentListing = this.registerListing(path_1.posix.dirname(p));\r\n        parentListing.add(path_1.posix.basename(p));\r\n        this.entries.set(p, index);\r\n    }\r\n    resolveFilename(reason, p, resolveLastComponent = true) {\r\n        if (!this.ready)\r\n            throw Object.assign(new Error(`EBUSY: archive closed, ${reason}`), { code: `EBUSY` });\r\n        let resolvedP = path_1.posix.resolve(`/`, p);\r\n        if (resolvedP === `/`)\r\n            return `/`;\r\n        while (true) {\r\n            const parentP = this.resolveFilename(reason, path_1.posix.dirname(resolvedP), true);\r\n            const isDir = this.listings.has(parentP);\r\n            const doesExist = this.entries.has(parentP);\r\n            if (!isDir && !doesExist)\r\n                throw Object.assign(new Error(`ENOENT: no such file or directory, ${reason}`), { code: `ENOENT` });\r\n            if (!isDir)\r\n                throw Object.assign(new Error(`ENOTDIR: not a directory, ${reason}`), { code: `ENOTDIR` });\r\n            resolvedP = path_1.posix.resolve(parentP, path_1.posix.basename(resolvedP));\r\n            if (!resolveLastComponent)\r\n                break;\r\n            const index = libzip_1.default.name.locate(this.zip, resolvedP);\r\n            if (index === -1)\r\n                break;\r\n            if (this.isSymbolicLink(index)) {\r\n                const target = this.getFileSource(index).toString();\r\n                resolvedP = path_1.posix.resolve(path_1.posix.dirname(resolvedP), target);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return resolvedP;\r\n    }\r\n    allocateBuffer(content) {\r\n        if (!Buffer.isBuffer(content))\r\n            content = Buffer.from(content);\r\n        const buffer = libzip_1.default.malloc(content.byteLength);\r\n        if (!buffer)\r\n            throw new Error(`Couldn't allocate enough memory`);\r\n        // Copy the file into the Emscripten heap\r\n        const heap = new Uint8Array(libzip_1.default.HEAPU8.buffer, buffer, content.byteLength);\r\n        heap.set(content);\r\n        return { buffer, byteLength: content.byteLength };\r\n    }\r\n    allocateUnattachedSource(content) {\r\n        const error = libzip_1.default.struct.errorS();\r\n        const { buffer, byteLength } = this.allocateBuffer(content);\r\n        const source = libzip_1.default.source.fromUnattachedBuffer(buffer, byteLength, 0, true, error);\r\n        if (source === 0) {\r\n            libzip_1.default.free(error);\r\n            throw new Error(libzip_1.default.error.strerror(error));\r\n        }\r\n        return source;\r\n    }\r\n    allocateSource(content) {\r\n        const { buffer, byteLength } = this.allocateBuffer(content);\r\n        const source = libzip_1.default.source.fromBuffer(this.zip, buffer, byteLength, 0, true);\r\n        if (source === 0) {\r\n            libzip_1.default.free(buffer);\r\n            throw new Error(libzip_1.default.error.strerror(libzip_1.default.getError(this.zip)));\r\n        }\r\n        return source;\r\n    }\r\n    setFileSource(p, content) {\r\n        const target = path_1.posix.relative(`/`, p);\r\n        const lzSource = this.allocateSource(content);\r\n        try {\r\n            return libzip_1.default.file.add(this.zip, target, lzSource, libzip_1.default.ZIP_FL_OVERWRITE);\r\n        }\r\n        catch (error) {\r\n            libzip_1.default.source.free(lzSource);\r\n            throw error;\r\n        }\r\n    }\r\n    isSymbolicLink(index) {\r\n        const attrs = libzip_1.default.file.getExternalAttributes(this.zip, index, 0, 0, libzip_1.default.uint08S, libzip_1.default.uint32S);\r\n        if (attrs === -1)\r\n            throw new Error(libzip_1.default.error.strerror(libzip_1.default.getError(this.zip)));\r\n        const opsys = libzip_1.default.getValue(libzip_1.default.uint08S, `i8`) >>> 0;\r\n        if (opsys !== libzip_1.default.ZIP_OPSYS_UNIX)\r\n            return false;\r\n        const attributes = libzip_1.default.getValue(libzip_1.default.uint32S, `i32`) >>> 16;\r\n        return (attributes & S_IFMT) === S_IFLNK;\r\n    }\r\n    getFileSource(index) {\r\n        const stat = libzip_1.default.struct.statS();\r\n        const rc = libzip_1.default.statIndex(this.zip, index, 0, 0, stat);\r\n        if (rc === -1)\r\n            throw new Error(libzip_1.default.error.strerror(libzip_1.default.getError(this.zip)));\r\n        const size = libzip_1.default.struct.statSize(stat);\r\n        const buffer = libzip_1.default.malloc(size);\r\n        try {\r\n            const file = libzip_1.default.fopenIndex(this.zip, index, 0, 0);\r\n            if (file === 0)\r\n                throw new Error(libzip_1.default.error.strerror(libzip_1.default.getError(this.zip)));\r\n            try {\r\n                const rc = libzip_1.default.fread(file, buffer, size, 0);\r\n                if (rc === -1)\r\n                    throw new Error(libzip_1.default.error.strerror(libzip_1.default.file.getError(file)));\r\n                else if (rc < size)\r\n                    throw new Error(`Incomplete read`);\r\n                else if (rc > size)\r\n                    throw new Error(`Overread`);\r\n                const memory = libzip_1.default.HEAPU8.subarray(buffer, buffer + size);\r\n                const data = Buffer.from(memory);\r\n                return data;\r\n            }\r\n            finally {\r\n                libzip_1.default.fclose(file);\r\n            }\r\n        }\r\n        finally {\r\n            libzip_1.default.free(buffer);\r\n        }\r\n    }\r\n    async chmodPromise(p, mask) {\r\n        return this.chmodSync(p, mask);\r\n    }\r\n    chmodSync(p, mask) {\r\n        const resolvedP = this.resolveFilename(`chmod '${p}'`, p, false);\r\n        // We silently ignore chmod requests for directories\r\n        if (this.listings.has(resolvedP))\r\n            return;\r\n        const entry = this.entries.get(resolvedP);\r\n        if (entry === undefined)\r\n            throw new Error(`Unreachable`);\r\n        const oldMod = this.getUnixMode(entry, S_IFREG | 0o000);\r\n        const newMod = oldMod & (~0o777) | mask;\r\n        const rc = libzip_1.default.file.setExternalAttributes(this.zip, entry, 0, 0, libzip_1.default.ZIP_OPSYS_UNIX, newMod << 16);\r\n        if (rc === -1) {\r\n            throw new Error(libzip_1.default.error.strerror(libzip_1.default.getError(this.zip)));\r\n        }\r\n    }\r\n    async renamePromise(oldP, newP) {\r\n        return this.renameSync(oldP, newP);\r\n    }\r\n    renameSync(oldP, newP) {\r\n        throw new Error(`Unimplemented`);\r\n    }\r\n    async copyFilePromise(sourceP, destP, flags) {\r\n        return this.copyFileSync(sourceP, destP, flags);\r\n    }\r\n    copyFileSync(sourceP, destP, flags = 0) {\r\n        if ((flags & fs_1.constants.COPYFILE_FICLONE_FORCE) !== 0)\r\n            throw Object.assign(new Error(`ENOSYS: unsupported clone operation, copyfile '${sourceP}' -> ${destP}'`), { code: `ENOSYS` });\r\n        const resolvedSourceP = this.resolveFilename(`copyfile '${sourceP} -> ${destP}'`, sourceP);\r\n        const indexSource = this.entries.get(resolvedSourceP);\r\n        if (typeof indexSource === `undefined`)\r\n            throw Object.assign(new Error(`EINVAL: invalid argument, copyfile '${sourceP}' -> '${destP}'`), { code: `EINVAL` });\r\n        const resolvedDestP = this.resolveFilename(`copyfile '${sourceP}' -> ${destP}'`, destP);\r\n        const indexDest = this.entries.get(resolvedDestP);\r\n        if ((flags & (fs_1.constants.COPYFILE_EXCL | fs_1.constants.COPYFILE_FICLONE_FORCE)) !== 0 && typeof indexDest !== `undefined`)\r\n            throw Object.assign(new Error(`EEXIST: file already exists, copyfile '${sourceP}' -> '${destP}'`), { code: `EEXIST` });\r\n        const source = this.getFileSource(indexSource);\r\n        const newIndex = this.setFileSource(resolvedDestP, source);\r\n        if (newIndex !== indexDest) {\r\n            this.registerEntry(resolvedDestP, newIndex);\r\n        }\r\n    }\r\n    async writeFilePromise(p, content, opts) {\r\n        return this.writeFileSync(p, content, opts);\r\n    }\r\n    writeFileSync(p, content, opts) {\r\n        const resolvedP = this.resolveFilename(`open '${p}'`, p);\r\n        if (this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`EISDIR: illegal operation on a directory, open '${p}'`), { code: `EISDIR` });\r\n        const index = this.entries.get(resolvedP);\r\n        if (index !== undefined && typeof opts === `object` && opts.flag && opts.flag.includes(`a`))\r\n            content = Buffer.concat([this.getFileSource(index), Buffer.from(content)]);\r\n        let encoding = null;\r\n        if (typeof opts === `string`)\r\n            encoding = opts;\r\n        else if (typeof opts === `object` && opts.encoding)\r\n            encoding = opts.encoding;\r\n        if (encoding !== null)\r\n            content = content.toString(encoding);\r\n        const newIndex = this.setFileSource(resolvedP, content);\r\n        if (newIndex !== index) {\r\n            this.registerEntry(resolvedP, newIndex);\r\n        }\r\n    }\r\n    async unlinkPromise(p) {\r\n        return this.unlinkSync(p);\r\n    }\r\n    unlinkSync(p) {\r\n        throw new Error(`Unimplemented`);\r\n    }\r\n    async utimesPromise(p, atime, mtime) {\r\n        return this.utimesSync(p, atime, mtime);\r\n    }\r\n    utimesSync(p, atime, mtime) {\r\n        const resolvedP = this.resolveFilename(`chmod '${p}'`, p);\r\n        return this.utimesImpl(resolvedP, mtime);\r\n    }\r\n    async lutimesPromise(p, atime, mtime) {\r\n        return this.lutimesSync(p, atime, mtime);\r\n    }\r\n    lutimesSync(p, atime, mtime) {\r\n        const resolvedP = this.resolveFilename(`chmod '${p}'`, p, false);\r\n        return this.utimesImpl(resolvedP, mtime);\r\n    }\r\n    utimesImpl(resolvedP, mtime) {\r\n        if (this.listings.has(resolvedP))\r\n            if (!this.entries.has(resolvedP))\r\n                this.hydrateDirectory(resolvedP);\r\n        const entry = this.entries.get(resolvedP);\r\n        if (entry === undefined)\r\n            throw new Error(`Unreachable`);\r\n        const rc = libzip_1.default.file.setMtime(this.zip, entry, 0, toUnixTimestamp(mtime), 0);\r\n        if (rc === -1) {\r\n            throw new Error(libzip_1.default.error.strerror(libzip_1.default.getError(this.zip)));\r\n        }\r\n    }\r\n    async mkdirPromise(p) {\r\n        return this.mkdirSync(p);\r\n    }\r\n    mkdirSync(p) {\r\n        const resolvedP = this.resolveFilename(`mkdir '${p}'`, p);\r\n        if (this.entries.has(resolvedP) || this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`EEXIST: file already exists, mkdir '${p}'`), { code: `EEXIST` });\r\n        this.hydrateDirectory(resolvedP);\r\n    }\r\n    async rmdirPromise(p) {\r\n        return this.rmdirSync(p);\r\n    }\r\n    rmdirSync(p) {\r\n        throw new Error(`Unimplemented`);\r\n    }\r\n    hydrateDirectory(resolvedP) {\r\n        const index = libzip_1.default.dir.add(this.zip, path_1.posix.relative(`/`, resolvedP));\r\n        if (index === -1)\r\n            throw new Error(libzip_1.default.error.strerror(libzip_1.default.getError(this.zip)));\r\n        this.registerListing(resolvedP);\r\n        this.registerEntry(resolvedP, index);\r\n        return index;\r\n    }\r\n    async symlinkPromise(target, p) {\r\n        return this.symlinkSync(target, p);\r\n    }\r\n    symlinkSync(target, p) {\r\n        const resolvedP = this.resolveFilename(`symlink '${target}' -> '${p}'`, p);\r\n        if (this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`EISDIR: illegal operation on a directory, symlink '${target}' -> '${p}'`), { code: `EISDIR` });\r\n        if (this.entries.has(resolvedP))\r\n            throw Object.assign(new Error(`EEXIST: file already exists, symlink '${target}' -> '${p}'`), { code: `EEXIST` });\r\n        const index = this.setFileSource(resolvedP, target);\r\n        this.registerEntry(resolvedP, index);\r\n        const rc = libzip_1.default.file.setExternalAttributes(this.zip, index, 0, 0, libzip_1.default.ZIP_OPSYS_UNIX, (0o120000 | 0o777) << 16);\r\n        if (rc === -1) {\r\n            throw new Error(libzip_1.default.error.strerror(libzip_1.default.getError(this.zip)));\r\n        }\r\n    }\r\n    async readFilePromise(p, encoding) {\r\n        // This weird switch is required to tell TypeScript that the signatures are proper (otherwise it thinks that only the generic one is covered)\r\n        switch (encoding) {\r\n            case `utf8`:\r\n                return this.readFileSync(p, encoding);\r\n            default:\r\n                return this.readFileSync(p, encoding);\r\n        }\r\n    }\r\n    readFileSync(p, encoding) {\r\n        // This is messed up regarding the TS signatures\r\n        if (typeof encoding === `object`)\r\n            // @ts-ignore\r\n            encoding = encoding ? encoding.encoding : undefined;\r\n        const resolvedP = this.resolveFilename(`open '${p}'`, p);\r\n        if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`ENOENT: no such file or directory, open '${p}'`), { code: `ENOENT` });\r\n        // Ensures that the last component is a directory, if the user said so (even if it is we'll throw right after with EISDIR anyway)\r\n        if (p[p.length - 1] === `/` && !this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`ENOTDIR: not a directory, open '${p}'`), { code: `ENOTDIR` });\r\n        if (this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`EISDIR: illegal operation on a directory, read`), { code: `EISDIR` });\r\n        const entry = this.entries.get(resolvedP);\r\n        if (entry === undefined)\r\n            throw new Error(`Unreachable`);\r\n        const data = this.getFileSource(entry);\r\n        return encoding ? data.toString(encoding) : data;\r\n    }\r\n    async readdirPromise(p) {\r\n        return this.readdirSync(p);\r\n    }\r\n    readdirSync(p) {\r\n        const resolvedP = this.resolveFilename(`scandir '${p}'`, p);\r\n        if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`ENOENT: no such file or directory, scandir '${p}'`), { code: `ENOENT` });\r\n        const directoryListing = this.listings.get(resolvedP);\r\n        if (!directoryListing)\r\n            throw Object.assign(new Error(`ENOTDIR: not a directory, scandir '${p}'`), { code: `ENOTDIR` });\r\n        return Array.from(directoryListing);\r\n    }\r\n    async readlinkPromise(p) {\r\n        return this.readlinkSync(p);\r\n    }\r\n    readlinkSync(p) {\r\n        const resolvedP = this.resolveFilename(`readlink '${p}'`, p, false);\r\n        if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`ENOENT: no such file or directory, readlink '${p}'`), { code: `ENOENT` });\r\n        // Ensure that the last component is a directory (if it is we'll throw right after with EISDIR anyway)\r\n        if (p[p.length - 1] === `/` && !this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`ENOTDIR: not a directory, open '${p}'`), { code: `ENOTDIR` });\r\n        if (this.listings.has(resolvedP))\r\n            throw Object.assign(new Error(`EINVAL: invalid argument, readlink '${p}'`), { code: `EINVAL` });\r\n        const entry = this.entries.get(resolvedP);\r\n        if (entry === undefined)\r\n            throw new Error(`Unreachable`);\r\n        const rc = libzip_1.default.file.getExternalAttributes(this.zip, entry, 0, 0, libzip_1.default.uint08S, libzip_1.default.uint32S);\r\n        if (rc === -1)\r\n            throw new Error(libzip_1.default.error.strerror(libzip_1.default.getError(this.zip)));\r\n        const opsys = libzip_1.default.getValue(libzip_1.default.uint08S, `i8`) >>> 0;\r\n        if (opsys !== libzip_1.default.ZIP_OPSYS_UNIX)\r\n            throw Object.assign(new Error(`EINVAL: invalid argument, readlink '${p}'`), { code: `EINVAL` });\r\n        const attributes = libzip_1.default.getValue(libzip_1.default.uint32S, `i32`) >>> 16;\r\n        if ((attributes & 0o170000) !== 0o120000)\r\n            throw Object.assign(new Error(`EINVAL: invalid argument, readlink '${p}'`), { code: `EINVAL` });\r\n        return this.getFileSource(entry).toString();\r\n    }\r\n}\r\nexports.ZipFS = ZipFS;\r\n;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst libzip_1 = __importDefault(__webpack_require__(13));\r\nconst number64 = [\r\n    `number`,\r\n    `number`,\r\n];\r\n// eslint-disable-next-line arca/no-default-export\r\nexports.default = {\r\n    // Those are getters because they can change after memory growth\r\n    get HEAP8() { return libzip_1.default.HEAP8; },\r\n    get HEAPU8() { return libzip_1.default.HEAPU8; },\r\n    ZIP_CHECKCONS: 4,\r\n    ZIP_CREATE: 1,\r\n    ZIP_EXCL: 2,\r\n    ZIP_TRUNCATE: 8,\r\n    ZIP_RDONLY: 16,\r\n    ZIP_FL_OVERWRITE: 8192,\r\n    ZIP_OPSYS_DOS: 0x00,\r\n    ZIP_OPSYS_AMIGA: 0x01,\r\n    ZIP_OPSYS_OPENVMS: 0x02,\r\n    ZIP_OPSYS_UNIX: 0x03,\r\n    ZIP_OPSYS_VM_CMS: 0x04,\r\n    ZIP_OPSYS_ATARI_ST: 0x05,\r\n    ZIP_OPSYS_OS_2: 0x06,\r\n    ZIP_OPSYS_MACINTOSH: 0x07,\r\n    ZIP_OPSYS_Z_SYSTEM: 0x08,\r\n    ZIP_OPSYS_CPM: 0x09,\r\n    ZIP_OPSYS_WINDOWS_NTFS: 0x0a,\r\n    ZIP_OPSYS_MVS: 0x0b,\r\n    ZIP_OPSYS_VSE: 0x0c,\r\n    ZIP_OPSYS_ACORN_RISC: 0x0d,\r\n    ZIP_OPSYS_VFAT: 0x0e,\r\n    ZIP_OPSYS_ALTERNATE_MVS: 0x0f,\r\n    ZIP_OPSYS_BEOS: 0x10,\r\n    ZIP_OPSYS_TANDEM: 0x11,\r\n    ZIP_OPSYS_OS_400: 0x12,\r\n    ZIP_OPSYS_OS_X: 0x13,\r\n    uint08S: libzip_1.default._malloc(1),\r\n    uint16S: libzip_1.default._malloc(2),\r\n    uint32S: libzip_1.default._malloc(4),\r\n    uint64S: libzip_1.default._malloc(8),\r\n    malloc: libzip_1.default._malloc,\r\n    free: libzip_1.default._free,\r\n    getValue: libzip_1.default.getValue,\r\n    open: libzip_1.default.cwrap(`zip_open`, `number`, [`string`, `number`, `number`]),\r\n    openFromSource: libzip_1.default.cwrap(`zip_open_from_source`, `number`, [`number`, `number`, `number`]),\r\n    close: libzip_1.default.cwrap(`zip_close`, `number`, [`number`]),\r\n    discard: libzip_1.default.cwrap(`zip_discard`, `void`, [`number`]),\r\n    getError: libzip_1.default.cwrap(`zip_get_error`, `number`, [`number`]),\r\n    getName: libzip_1.default.cwrap(`zip_get_name`, `string`, [`number`, `number`, `number`]),\r\n    getNumEntries: libzip_1.default.cwrap(`zip_get_num_entries`, `number`, [`number`, `number`]),\r\n    stat: libzip_1.default.cwrap(`zip_stat`, `number`, [`number`, `string`, `number`, `number`]),\r\n    statIndex: libzip_1.default.cwrap(`zip_stat_index`, `number`, [`number`, ...number64, `number`, `number`]),\r\n    fopen: libzip_1.default.cwrap(`zip_fopen`, `number`, [`number`, `string`, `number`]),\r\n    fopenIndex: libzip_1.default.cwrap(`zip_fopen_index`, `number`, [`number`, ...number64, `number`]),\r\n    fread: libzip_1.default.cwrap(`zip_fread`, `number`, [`number`, `number`, `number`, `number`]),\r\n    fclose: libzip_1.default.cwrap(`zip_fclose`, `number`, [`number`]),\r\n    dir: {\r\n        add: libzip_1.default.cwrap(`zip_dir_add`, `number`, [`number`, `string`]),\r\n    },\r\n    file: {\r\n        add: libzip_1.default.cwrap(`zip_file_add`, `number`, [`number`, `string`, `number`, `number`]),\r\n        getError: libzip_1.default.cwrap(`zip_file_get_error`, `number`, [`number`]),\r\n        getExternalAttributes: libzip_1.default.cwrap(`zip_file_get_external_attributes`, `number`, [`number`, ...number64, `number`, `number`, `number`]),\r\n        setExternalAttributes: libzip_1.default.cwrap(`zip_file_set_external_attributes`, `number`, [`number`, ...number64, `number`, `number`, `number`]),\r\n        setMtime: libzip_1.default.cwrap(`zip_file_set_mtime`, `number`, [`number`, ...number64, `number`, `number`]),\r\n    },\r\n    error: {\r\n        initWithCode: libzip_1.default.cwrap(`zip_error_init_with_code`, `void`, [`number`, `number`]),\r\n        strerror: libzip_1.default.cwrap(`zip_error_strerror`, `string`, [`number`]),\r\n    },\r\n    name: {\r\n        locate: libzip_1.default.cwrap(`zip_name_locate`, `number`, [`number`, `string`, `number`]),\r\n    },\r\n    source: {\r\n        fromUnattachedBuffer: libzip_1.default.cwrap(`zip_source_buffer_create`, `number`, [`number`, `number`, `number`, `number`]),\r\n        fromBuffer: libzip_1.default.cwrap(`zip_source_buffer`, `number`, [`number`, `number`, ...number64, `number`]),\r\n        free: libzip_1.default.cwrap(`zip_source_free`, `void`, [`number`]),\r\n    },\r\n    struct: {\r\n        stat: libzip_1.default.cwrap(`zipstruct_stat`, `number`, []),\r\n        statS: libzip_1.default.cwrap(`zipstruct_statS`, `number`, []),\r\n        statName: libzip_1.default.cwrap(`zipstruct_stat_name`, `string`, [`number`]),\r\n        statIndex: libzip_1.default.cwrap(`zipstruct_stat_index`, `number`, [`number`]),\r\n        statSize: libzip_1.default.cwrap(`zipstruct_stat_size`, `number`, [`number`]),\r\n        statMtime: libzip_1.default.cwrap(`zipstruct_stat_mtime`, `number`, [`number`]),\r\n        error: libzip_1.default.cwrap(`zipstruct_error`, `number`, []),\r\n        errorS: libzip_1.default.cwrap(`zipstruct_errorS`, `number`, []),\r\n    },\r\n};\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar frozenFs = Object.assign({}, __webpack_require__(3));\r\nvar Module=typeof Module!==\"undefined\"?Module:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\"./this.program\";Module[\"quit\"]=function(status,toThrow){throw toThrow};Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=true;if(Module[\"ENVIRONMENT\"]){throw new Error(\"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)\")}var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){if(!(typeof process===\"object\"&&\"function\"===\"function\"))throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;ret=tryParseAsDataURI(filename);if(!ret){if(!nodeFS)nodeFS=frozenFs;if(!nodePath)nodePath=__webpack_require__(4);filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename)}return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);if(true){module[\"exports\"]=Module}(function(){})(\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});(function(){})(\"unhandledRejection\",abort);Module[\"quit\"]=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else{throw new Error(\"environment detection error\")}var out=Module[\"print\"]||(typeof console!==\"undefined\"?console.log.bind(console):typeof print!==\"undefined\"?print:null);var err=Module[\"printErr\"]||(typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;assert(typeof Module[\"memoryInitializerPrefixURL\"]===\"undefined\",\"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"pthreadMainPrefixURL\"]===\"undefined\",\"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"cdInitializerPrefixURL\"]===\"undefined\",\"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"filePackagePrefixURL\"]===\"undefined\",\"Module.filePackagePrefixURL option was removed, use Module.locateFile instead\");stackSave=stackRestore=stackAlloc=function(){abort(\"cannot use the stack before compiled code is ready to run, and has provided stack access\")};function dynamicAlloc(size){assert(DYNAMICTOP_PTR);var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;if(end<=_emscripten_get_heap_size()){HEAP32[DYNAMICTOP_PTR>>2]=end}else{var success=_emscripten_resize_heap(end);if(!success)return 0}return ret}function getNativeTypeSize(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return 4}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0,\"getNativeTypeSize invalid bits \"+bits+\", type \"+type);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var asm2wasmImports={\"f64-rem\":function(x,y){return x%y},\"debugger\":function(){debugger}};var functionPointers=new Array(0);var tempRet0=0;var setTempRet0=function(value){tempRet0=value};if(typeof WebAssembly!==\"object\"){abort(\"No WebAssembly support found. Build with -s WASM=0 to target JavaScript instead.\")}function getValue(ptr,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";if(noSafe){switch(type){case\"i1\":return HEAP8[ptr>>0];case\"i8\":return HEAP8[ptr>>0];case\"i16\":return HEAP16[ptr>>1];case\"i32\":return HEAP32[ptr>>2];case\"i64\":return HEAP32[ptr>>2];case\"float\":return HEAPF32[ptr>>2];case\"double\":return HEAPF64[ptr>>3];default:abort(\"invalid type for getValue: \"+type)}}else{switch(type){case\"i1\":return SAFE_HEAP_LOAD(ptr|0,1,0)|0;case\"i8\":return SAFE_HEAP_LOAD(ptr|0,1,0)|0;case\"i16\":return SAFE_HEAP_LOAD(ptr|0,2,0)|0;case\"i32\":return SAFE_HEAP_LOAD(ptr|0,4,0)|0;case\"i64\":return SAFE_HEAP_LOAD(ptr|0,8,0)|0;case\"float\":return Math_fround(SAFE_HEAP_LOAD_D(ptr|0,4,0));case\"double\":return+SAFE_HEAP_LOAD_D(ptr|0,8,0);default:abort(\"invalid type for getValue: \"+type)}}return null}function getSafeHeapType(bytes,isFloat){switch(bytes){case 1:return\"i8\";case 2:return\"i16\";case 4:return isFloat?\"float\":\"i32\";case 8:return\"double\";default:assert(0)}}function SAFE_HEAP_STORE(dest,value,bytes,isFloat){if(dest<=0)abort(\"segmentation fault storing \"+bytes+\" bytes to address \"+dest);if(dest%bytes!==0)abort(\"alignment error storing to address \"+dest+\", which was expected to be aligned to a multiple of \"+bytes);if(dest+bytes>HEAP32[DYNAMICTOP_PTR>>2])abort(\"segmentation fault, exceeded the top of the available dynamic heap when storing \"+bytes+\" bytes to address \"+dest+\". DYNAMICTOP=\"+HEAP32[DYNAMICTOP_PTR>>2]);assert(DYNAMICTOP_PTR);assert(HEAP32[DYNAMICTOP_PTR>>2]<=HEAP8.length);setValue(dest,value,getSafeHeapType(bytes,isFloat),1)}function SAFE_HEAP_STORE_D(dest,value,bytes){SAFE_HEAP_STORE(dest,value,bytes,true)}function SAFE_HEAP_LOAD(dest,bytes,unsigned,isFloat){if(dest<=0)abort(\"segmentation fault loading \"+bytes+\" bytes from address \"+dest);if(dest%bytes!==0)abort(\"alignment error loading from address \"+dest+\", which was expected to be aligned to a multiple of \"+bytes);if(dest+bytes>HEAP32[DYNAMICTOP_PTR>>2])abort(\"segmentation fault, exceeded the top of the available dynamic heap when loading \"+bytes+\" bytes from address \"+dest+\". DYNAMICTOP=\"+HEAP32[DYNAMICTOP_PTR>>2]);assert(DYNAMICTOP_PTR);assert(HEAP32[DYNAMICTOP_PTR>>2]<=HEAP8.length);var type=getSafeHeapType(bytes,isFloat);var ret=getValue(dest,type,1);if(unsigned)ret=unSign(ret,parseInt(type.substr(1)),1);return ret}function SAFE_HEAP_LOAD_D(dest,bytes,unsigned){return SAFE_HEAP_LOAD(dest,bytes,unsigned,true)}function segfault(){abort(\"segmentation fault\")}function alignfault(){abort(\"alignment fault\")}var wasmMemory;var wasmTable;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;assert(returnType!==\"array\",'Return type should not be \"array\".');if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";if(noSafe){switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}else{switch(type){case\"i1\":SAFE_HEAP_STORE(ptr|0,value|0,1);break;case\"i8\":SAFE_HEAP_STORE(ptr|0,value|0,1);break;case\"i16\":SAFE_HEAP_STORE(ptr|0,value|0,2);break;case\"i32\":SAFE_HEAP_STORE(ptr|0,value|0,4);break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],SAFE_HEAP_STORE(ptr|0,tempI64[0]|0,4),SAFE_HEAP_STORE(ptr+4|0,tempI64[1]|0,4);break;case\"float\":SAFE_HEAP_STORE_D(ptr|0,Math_fround(value),4);break;case\"double\":SAFE_HEAP_STORE_D(ptr|0,+value,8);break;default:abort(\"invalid type for setValue: \"+type)}}}var ALLOC_NORMAL=0;var ALLOC_NONE=3;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab===\"number\"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types===\"string\"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[_malloc,stackAlloc,dynamicAlloc][allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType===\"i8\"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue}assert(type,\"Must know what type to store in allocate!\");if(type==\"i64\")type=\"i32\";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}function getMemory(size){if(!runtimeInitialized)return dynamicAlloc(size);return _malloc(size)}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{if((u0&248)!=240)warnOnce(\"Invalid UTF-8 leading byte 0x\"+u0.toString(16)+\" encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!\");u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;if(u>=2097152)warnOnce(\"Invalid Unicode code point 0x\"+u.toString(16)+\" encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF).\");outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){assert(typeof maxBytesToWrite==\"number\",\"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){assert(array.length>=0,\"writeArrayToMemory array must have a length (should be an array or typed array)\");HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){assert(str.charCodeAt(i)===str.charCodeAt(i)&255);SAFE_HEAP_STORE(buffer++|0,str.charCodeAt(i)|0,1)}if(!dontAddNull)SAFE_HEAP_STORE(buffer|0,0|0,1)}function demangle(func){warnOnce(\"warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling\");return func}function demangleAll(text){var regex=/__Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return\"(no stack trace available)\"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module[\"extraStackTrace\"])js+=\"\\n\"+Module[\"extraStackTrace\"]();return demangleAll(js)}var WASM_PAGE_SIZE=65536;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var STACK_BASE=22720,STACK_MAX=5265600,DYNAMIC_BASE=5265600,DYNAMICTOP_PTR=22464;assert(STACK_BASE%16===0,\"stack must start aligned\");assert(DYNAMIC_BASE%16===0,\"heap must start aligned\");var TOTAL_STACK=5242880;if(Module[\"TOTAL_STACK\"])assert(TOTAL_STACK===Module[\"TOTAL_STACK\"],\"the stack size can no longer be determined at runtime\");var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(INITIAL_TOTAL_MEMORY<TOTAL_STACK)err(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+INITIAL_TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");assert(typeof Int32Array!==\"undefined\"&&typeof Float64Array!==\"undefined\"&&Int32Array.prototype.subarray!==undefined&&Int32Array.prototype.set!==undefined,\"JS engine does not provide full typed array support\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"];assert(buffer.byteLength===INITIAL_TOTAL_MEMORY,\"provided buffer should be \"+INITIAL_TOTAL_MEMORY+\" bytes, but it is \"+buffer.byteLength)}else{if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Memory===\"function\"){assert(INITIAL_TOTAL_MEMORY%WASM_PAGE_SIZE===0);wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=wasmMemory.buffer}else{buffer=new ArrayBuffer(INITIAL_TOTAL_MEMORY)}assert(buffer.byteLength===INITIAL_TOTAL_MEMORY)}updateGlobalBufferViews();HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function writeStackCookie(){assert((STACK_MAX&3)==0);HEAPU32[(STACK_MAX>>2)-1]=34821223;HEAPU32[(STACK_MAX>>2)-2]=2310721022}function checkStackCookie(){if(HEAPU32[(STACK_MAX>>2)-1]!=34821223||HEAPU32[(STACK_MAX>>2)-2]!=2310721022){abort(\"Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x\"+HEAPU32[(STACK_MAX>>2)-2].toString(16)+\" \"+HEAPU32[(STACK_MAX>>2)-1].toString(16))}if(HEAP32[0]!==1668509029)throw\"Runtime error: The application has corrupted its heap memory area (address zero)!\"}function abortStackOverflow(allocSize){abort(\"Stack overflow! Attempted to allocate \"+allocSize+\" bytes on the stack, but stack has only \"+(STACK_MAX-stackSave()+allocSize)+\" bytes available!\")}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw\"Runtime error: expected the system to be little-endian!\";function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){checkStackCookie();if(runtimeInitialized)return;runtimeInitialized=true;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();TTY.init();callRuntimeCallbacks(__ATINIT__)}function preMain(){checkStackCookie();FS.ignorePermissions=false;callRuntimeCallbacks(__ATMAIN__)}function postRun(){checkStackCookie();if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}function unSign(value,bits,ignore){if(value>=0){return value}return bits<=32?2*Math.abs(1<<bits-1)+value:Math.pow(2,bits)+value}assert(Math.imul,\"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");assert(Math.fround,\"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");assert(Math.clz32,\"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");assert(Math.trunc,\"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_fround=Math.fround;var Math_min=Math.min;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;var runDependencyTracking={};function getUniqueRunDependency(id){var orig=id;while(1){if(!runDependencyTracking[id])return id;id=orig+Math.random()}return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(id){assert(!runDependencyTracking[id]);runDependencyTracking[id]=1;if(runDependencyWatcher===null&&typeof setInterval!==\"undefined\"){runDependencyWatcher=setInterval(function(){if(ABORT){clearInterval(runDependencyWatcher);runDependencyWatcher=null;return}var shown=false;for(var dep in runDependencyTracking){if(!shown){shown=true;err(\"still waiting on run dependencies:\")}err(\"dependency: \"+dep)}if(shown){err(\"(end of list)\")}},1e4)}}else{err(\"warning: run dependency added without ID\")}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(id){assert(runDependencyTracking[id]);delete runDependencyTracking[id]}else{err(\"warning: run dependency removed without ID\")}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(Module[\"wasmBinary\"]){return new Uint8Array(Module[\"wasmBinary\"])}var binary=tryParseAsDataURI(wasmBinaryFile);if(binary){return binary}if(Module[\"readBinary\"]){return Module[\"readBinary\"](wasmBinaryFile)}else{throw\"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)\"}}catch(err){abort(err)}}function createWasm(env){var info={\"env\":env,\"global\":{\"NaN\":NaN,Infinity:Infinity},\"global.Math\":Math,\"asm2wasm\":asm2wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}var instance;var module;try{module=new WebAssembly.Module(getBinary());instance=new WebAssembly.Instance(module,info)}catch(e){err(\"failed to compile wasm module: \"+e);if(e.toString().indexOf(\"imported Memory with incompatible size\")>=0){err(\"Memory size incompatibility issues may be due to changing TOTAL_MEMORY at runtime to something too large. Use ALLOW_MEMORY_GROWTH to allow any size memory (and also make sure not to set TOTAL_MEMORY at runtime to something smaller than it was at compile time).\")}return false}receiveInstance(instance,module);return Module[\"asm\"]}Module[\"asm\"]=function(global,env,providedBuffer){env[\"memory\"]=wasmMemory;env[\"table\"]=wasmTable=new WebAssembly.Table({\"initial\":55,\"maximum\":55,\"element\":\"anyfunc\"});env[\"__memory_base\"]=1024;env[\"__table_base\"]=0;var exports=createWasm(env);assert(exports,\"binaryen setup failed (no wasm support?)\");return exports};__ATINIT__.push({func:function(){___emscripten_environ_constructor()}});var tempDoublePtr=22704;assert(tempDoublePtr%8==0);var ENV={};function ___buildEnvironment(environ){var MAX_ENV_VALUES=64;var TOTAL_ENV_SIZE=1024;var poolPtr;var envPtr;if(!___buildEnvironment.called){___buildEnvironment.called=true;ENV[\"USER\"]=ENV[\"LOGNAME\"]=\"web_user\";ENV[\"PATH\"]=\"/\";ENV[\"PWD\"]=\"/\";ENV[\"HOME\"]=\"/home/web_user\";ENV[\"LANG\"]=\"C.UTF-8\";ENV[\"_\"]=Module[\"thisProgram\"];poolPtr=getMemory(TOTAL_ENV_SIZE);envPtr=getMemory(MAX_ENV_VALUES*4);SAFE_HEAP_STORE(envPtr|0,poolPtr|0,4);SAFE_HEAP_STORE(environ|0,envPtr|0,4)}else{envPtr=SAFE_HEAP_LOAD(environ|0,4,0)|0;poolPtr=SAFE_HEAP_LOAD(envPtr|0,4,0)|0}var strings=[];var totalSize=0;for(var key in ENV){if(typeof ENV[key]===\"string\"){var line=key+\"=\"+ENV[key];strings.push(line);totalSize+=line.length}}if(totalSize>TOTAL_ENV_SIZE){throw new Error(\"Environment size exceeded TOTAL_ENV_SIZE!\")}var ptrSize=4;for(var i=0;i<strings.length;i++){var line=strings[i];writeAsciiToMemory(line,poolPtr);SAFE_HEAP_STORE(envPtr+i*ptrSize|0,poolPtr|0,4);poolPtr+=line.length+1}SAFE_HEAP_STORE(envPtr+strings.length*ptrSize|0,0|0,4)}function _emscripten_get_now(){abort()}function _emscripten_get_now_is_monotonic(){return  false||ENVIRONMENT_IS_NODE}function ___setErrNo(value){if(Module[\"___errno_location\"])SAFE_HEAP_STORE(Module[\"___errno_location\"]()|0,value|0,4);else err(\"failed to set errno from JS\");return value}function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if(clk_id===1&&_emscripten_get_now_is_monotonic()){now=_emscripten_get_now()}else{___setErrNo(22);return-1}SAFE_HEAP_STORE(tp|0,now/1e3|0|0,4);SAFE_HEAP_STORE(tp+4|0,now%1e3*1e3*1e3|0|0,4);return 0}function ___clock_gettime(a0,a1){return _clock_gettime(a0,a1)}function ___lock(){}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)},resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\"}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var isPosixPlatform=process.platform!=\"win32\";var fd=process.stdin.fd;if(isPosixPlatform){var usingDevice=false;try{fd=fs.openSync(\"/dev/stdin\",\"r\");usingDevice=true}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf(\"EOF\")!=-1)bytesRead=0;else throw e}if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString(\"utf-8\")}else{result=null}}else if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node},getFileDataAsRegularArray:function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name]},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(canOwn){warnOnce(\"file packager has copied file data into memory, but in memory growth we are forced to copy it again (see --no-heap-copy)\")}canOwn=false;if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){assert(position===0,\"canOwn must imply no weird position inside the file\");node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};var NODEFS={isWindows:false,staticInit:function(){NODEFS.isWindows=!!process.platform.match(/^win/);var flags=process[\"binding\"](\"constants\");if(flags[\"fs\"]){flags=flags[\"fs\"]}NODEFS.flagsForNodeMap={1024:flags[\"O_APPEND\"],64:flags[\"O_CREAT\"],128:flags[\"O_EXCL\"],0:flags[\"O_RDONLY\"],2:flags[\"O_RDWR\"],4096:flags[\"O_SYNC\"],512:flags[\"O_TRUNC\"],1:flags[\"O_WRONLY\"]}},bufferFrom:function(arrayBuffer){return Buffer.alloc?Buffer.from(arrayBuffer):new Buffer(arrayBuffer)},mount:function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,\"/\",NODEFS.getMode(mount.opts.root),0)},createNode:function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node},getMode:function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&292)>>2}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode},realPath:function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)},flagsForNode:function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;var newFlags=0;for(var k in NODEFS.flagsForNodeMap){if(flags&k){newFlags|=NODEFS.flagsForNodeMap[k];flags^=k}}if(!flags){return newFlags}else{throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}},node_ops:{getattr:function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}},setattr:function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},lookup:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)},mknod:function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,\"\",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node},rename:function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},unlink:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},rmdir:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},readdir:function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},symlink:function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},readlink:function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}},stream_ops:{open:function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsForNode(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},close:function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},read:function(stream,buffer,offset,length,position){if(length===0)return 0;try{return fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}},write:function(stream,buffer,offset,length,position){try{return fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}}};var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var NODERAWFS={lookupPath:function(path){return{path:path,node:{mode:NODEFS.getMode(path)}}},createStandardStreams:function(){FS.streams[0]={fd:0,nfd:0,position:0,path:\"\",flags:0,tty:true,seekable:false};for(var i=1;i<3;i++){FS.streams[i]={fd:i,nfd:i,position:0,path:\"\",flags:577,tty:true,seekable:false}}},cwd:function(){return process.cwd()},chdir:function(){process.chdir.apply(void 0,arguments)},mknod:function(path,mode){if(FS.isDir(path)){fs.mkdirSync(path,mode)}else{fs.writeFileSync(path,\"\",{mode:mode})}},mkdir:function(){fs.mkdirSync.apply(void 0,arguments)},symlink:function(){fs.symlinkSync.apply(void 0,arguments)},rename:function(){fs.renameSync.apply(void 0,arguments)},rmdir:function(){fs.rmdirSync.apply(void 0,arguments)},readdir:function(){fs.readdirSync.apply(void 0,arguments)},unlink:function(){fs.unlinkSync.apply(void 0,arguments)},readlink:function(){return fs.readlinkSync.apply(void 0,arguments)},stat:function(){return fs.statSync.apply(void 0,arguments)},lstat:function(){return fs.lstatSync.apply(void 0,arguments)},chmod:function(){fs.chmodSync.apply(void 0,arguments)},fchmod:function(){fs.fchmodSync.apply(void 0,arguments)},chown:function(){fs.chownSync.apply(void 0,arguments)},fchown:function(){fs.fchownSync.apply(void 0,arguments)},truncate:function(){fs.truncateSync.apply(void 0,arguments)},ftruncate:function(){fs.ftruncateSync.apply(void 0,arguments)},utime:function(){fs.utimesSync.apply(void 0,arguments)},open:function(path,flags,mode,suggestFD){if(typeof flags===\"string\"){flags=VFS.modeStringToFlags(flags)}var nfd=fs.openSync(path,NODEFS.flagsForNode(flags),mode);var fd=suggestFD!=null?suggestFD:FS.nextfd(nfd);var stream={fd:fd,nfd:nfd,position:0,path:path,flags:flags,seekable:true};FS.streams[fd]=stream;return stream},close:function(stream){if(!stream.stream_ops){fs.closeSync(stream.nfd)}FS.closeStream(stream.fd)},llseek:function(stream,offset,whence){if(stream.stream_ops){return VFS.llseek(stream,offset,whence)}var position=offset;if(whence===1){position+=stream.position}else if(whence===2){position+=fs.fstatSync(stream.nfd).size}else if(whence!==0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}stream.position=position;return position},read:function(stream,buffer,offset,length,position){if(stream.stream_ops){return VFS.read(stream,buffer,offset,length,position)}var seeking=typeof position!==\"undefined\";if(!seeking&&stream.seekable)position=stream.position;var bytesRead=fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:function(stream,buffer,offset,length,position){if(stream.stream_ops){return VFS.write(stream,buffer,offset,length,position)}if(stream.flags&+\"1024\"){FS.llseek(stream,0,+\"2\")}var seeking=typeof position!==\"undefined\";if(!seeking&&stream.seekable)position=stream.position;var bytesWritten=fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate:function(){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)},mmap:function(){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)},msync:function(){return 0},munmap:function(){return 0},ioctl:function(){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}};var ERRNO_MESSAGES={0:\"Success\",1:\"Not super-user\",2:\"No such file or directory\",3:\"No such process\",4:\"Interrupted system call\",5:\"I/O error\",6:\"No such device or address\",7:\"Arg list too long\",8:\"Exec format error\",9:\"Bad file number\",10:\"No children\",11:\"No more processes\",12:\"Not enough core\",13:\"Permission denied\",14:\"Bad address\",15:\"Block device required\",16:\"Mount device busy\",17:\"File exists\",18:\"Cross-device link\",19:\"No such device\",20:\"Not a directory\",21:\"Is a directory\",22:\"Invalid argument\",23:\"Too many open files in system\",24:\"Too many open files\",25:\"Not a typewriter\",26:\"Text file busy\",27:\"File too large\",28:\"No space left on device\",29:\"Illegal seek\",30:\"Read only file system\",31:\"Too many links\",32:\"Broken pipe\",33:\"Math arg out of domain of func\",34:\"Math result not representable\",35:\"File locking deadlock error\",36:\"File or path name too long\",37:\"No record locks available\",38:\"Function not implemented\",39:\"Directory not empty\",40:\"Too many symbolic links\",42:\"No message of desired type\",43:\"Identifier removed\",44:\"Channel number out of range\",45:\"Level 2 not synchronized\",46:\"Level 3 halted\",47:\"Level 3 reset\",48:\"Link number out of range\",49:\"Protocol driver not attached\",50:\"No CSI structure available\",51:\"Level 2 halted\",52:\"Invalid exchange\",53:\"Invalid request descriptor\",54:\"Exchange full\",55:\"No anode\",56:\"Invalid request code\",57:\"Invalid slot\",59:\"Bad font file fmt\",60:\"Device not a stream\",61:\"No data (for no delay io)\",62:\"Timer expired\",63:\"Out of streams resources\",64:\"Machine is not on the network\",65:\"Package not installed\",66:\"The object is remote\",67:\"The link has been severed\",68:\"Advertise error\",69:\"Srmount error\",70:\"Communication error on send\",71:\"Protocol error\",72:\"Multihop attempted\",73:\"Cross mount point (not really error)\",74:\"Trying to read unreadable message\",75:\"Value too large for defined data type\",76:\"Given log. name not unique\",77:\"f.d. invalid for this operation\",78:\"Remote address changed\",79:\"Can   access a needed shared lib\",80:\"Accessing a corrupted shared lib\",81:\".lib section in a.out corrupted\",82:\"Attempting to link in too many libs\",83:\"Attempting to exec a shared library\",84:\"Illegal byte sequence\",86:\"Streams pipe error\",87:\"Too many users\",88:\"Socket operation on non-socket\",89:\"Destination address required\",90:\"Message too long\",91:\"Protocol wrong type for socket\",92:\"Protocol not available\",93:\"Unknown protocol\",94:\"Socket type not supported\",95:\"Not supported\",96:\"Protocol family not supported\",97:\"Address family not supported by protocol family\",98:\"Address already in use\",99:\"Address not available\",100:\"Network interface is not configured\",101:\"Network is unreachable\",102:\"Connection reset by network\",103:\"Connection aborted\",104:\"Connection reset by peer\",105:\"No buffer space available\",106:\"Socket is already connected\",107:\"Socket is not connected\",108:\"Can't send after socket shutdown\",109:\"Too many references\",110:\"Connection timed out\",111:\"Connection refused\",112:\"Host is down\",113:\"Host is unreachable\",114:\"Socket already connected\",115:\"Connection already in progress\",116:\"Stale file handle\",122:\"Quota exceeded\",123:\"No medium (in tape drive)\",125:\"Operation canceled\",130:\"Previous owner died\",131:\"State not recoverable\"};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e){if(!(e instanceof FS.ErrnoError))throw e+\" : \"+stackTrace();return ___setErrNo(e.errno)},lookupPath:function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(40)}var parts=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(40)}}}}return{path:current_path,node:current}},getPath:function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}},hashName:function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:function(node){FS.hashRemoveNode(node)},isRoot:function(node){return node===node.parent},isMountpoint:function(node){return!!node.mounted},isFile:function(mode){return(mode&61440)===32768},isDir:function(mode){return(mode&61440)===16384},isLink:function(mode){return(mode&61440)===40960},isChrdev:function(mode){return(mode&61440)===8192},isBlkdev:function(mode){return(mode&61440)===24576},isFIFO:function(mode){return(mode&61440)===4096},isSocket:function(mode){return(mode&49152)===49152},flagModes:{\"r\":0,\"rs\":1052672,\"r+\":2,\"w\":577,\"wx\":705,\"xw\":705,\"w+\":578,\"wx+\":706,\"xw+\":706,\"a\":1089,\"ax\":1217,\"xa\":1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218},modeStringToFlags:function(str){var flags=FS.flagModes[str];if(typeof flags===\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags},flagsToPermissionString:function(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions:function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf(\"r\")!==-1&&!(node.mode&292)){return 13}else if(perms.indexOf(\"w\")!==-1&&!(node.mode&146)){return 13}else if(perms.indexOf(\"x\")!==-1&&!(node.mode&73)){return 13}return 0},mayLookup:function(dir){var err=FS.nodePermissions(dir,\"x\");if(err)return err;if(!dir.node_ops.lookup)return 13;return 0},mayCreate:function(dir,name){try{var node=FS.lookupNode(dir,name);return 17}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete:function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,\"wx\");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return 20}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 16}}else{if(FS.isDir(node.mode)){return 21}}return 0},mayOpen:function(node,flags){if(!node){return 2}if(FS.isLink(node.mode)){return 40}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 21}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(24)},getStream:function(fd){return FS.streams[fd]},createStream:function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:function(fd){FS.streams[fd]=null},chrdev_stream_ops:{open:function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:function(){throw new FS.ErrnoError(29)}},major:function(dev){return dev>>8},minor:function(dev){return dev&255},makedev:function(ma,mi){return ma<<8|mi},registerDevice:function(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:function(dev){return FS.devices[dev]},getMounts:function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:function(populate,callback){if(typeof populate===\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:function(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(16)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(16)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(20)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(22)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)},lookup:function(parent,name){return parent.node_ops.lookup(parent,name)},mknod:function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(22)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(1)}return parent.node_ops.mknod(parent,name,mode,dev)},create:function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:function(path,mode){var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=17)throw e}}},mkdev:function(path,mode,dev){if(typeof dev===\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(2)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(2)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(1)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(16)}if(!old_dir||!new_dir)throw new FS.ErrnoError(2);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(18)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(22)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(39)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(1)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(16)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,\"w\");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate[\"willMovePath\"]){FS.trackingDelegate[\"willMovePath\"](old_path,new_path)}}catch(e){console.log(\"FS.trackingDelegate['willMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate[\"onMovePath\"])FS.trackingDelegate[\"onMovePath\"](old_path,new_path)}catch(e){console.log(\"FS.trackingDelegate['onMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}},rmdir:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(1)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(16)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}},readdir:function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(20)}return node.node_ops.readdir(node)},unlink:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(1)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(16)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}},readlink:function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(2)}if(!link.node_ops.readlink){throw new FS.ErrnoError(22)}return PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(2)}if(!node.node_ops.getattr){throw new FS.ErrnoError(1)}return node.node_ops.getattr(node)},lstat:function(path){return FS.stat(path,true)},chmod:function(path,mode,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(1)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:function(path,mode){FS.chmod(path,mode,true)},fchmod:function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(9)}FS.chmod(stream.node,mode)},chown:function(path,uid,gid,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(1)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:function(path,uid,gid){FS.chown(path,uid,gid,true)},fchown:function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(9)}FS.chown(stream.node,uid,gid)},truncate:function(path,len){if(len<0){throw new FS.ErrnoError(22)}var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(1)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(21)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(22)}var err=FS.nodePermissions(node,\"w\");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(9)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(22)}FS.truncate(stream.node,len)},utime:function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:function(path,flags,mode,fd_start,fd_end){if(path===\"\"){throw new FS.ErrnoError(2)}flags=typeof flags===\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode===\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path===\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(17)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(2)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(20)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;console.log(\"FS.trackingDelegate error on read file: \"+path)}}try{if(FS.trackingDelegate[\"onOpenFile\"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate[\"onOpenFile\"](path,trackingFlags)}}catch(e){console.log(\"FS.trackingDelegate['onOpenFile']('\"+path+\"', flags) threw an exception: \"+e.message)}return stream},close:function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:function(stream){return stream.fd===null},llseek:function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(29)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(22)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(22)}if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(9)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(21)}if(!stream.stream_ops.read){throw new FS.ErrnoError(22)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(29)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(22)}if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(9)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(21)}if(!stream.stream_ops.write){throw new FS.ErrnoError(22)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(29)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate[\"onWriteToFile\"])FS.trackingDelegate[\"onWriteToFile\"](stream.path)}catch(e){console.log(\"FS.trackingDelegate['onWriteToFile']('\"+stream.path+\"') threw an exception: \"+e.message)}return bytesWritten},allocate:function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if(offset<0||length<=0){throw new FS.ErrnoError(22)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(9)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(19)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(95)}stream.stream_ops.allocate(stream,offset,length)},mmap:function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(13)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(19)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)},msync:function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:function(stream){return 0},ioctl:function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(25)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:function(path,opts){opts=opts||{};opts.flags=opts.flags||\"r\";opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile:function(path,data,opts){opts=opts||{};opts.flags=opts.flags||\"w\";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data===\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:function(){return FS.currentPath},chdir:function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(2)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(20)}var err=FS.nodePermissions(lookup.node,\"x\");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path},createDefaultDirectories:function(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices:function(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(stream,buffer,offset,length,pos){return length}});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device;if(typeof crypto===\"object\"&&typeof crypto[\"getRandomValues\"]===\"function\"){var randomBuffer=new Uint8Array(1);random_device=function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=__webpack_require__(14);random_device=function(){return crypto_module[\"randomBytes\"](1)[0]}}catch(e){}}else{}if(!random_device){random_device=function(){abort(\"no cryptographic support found for random_device. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };\")}}FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:function(){FS.mkdir(\"/proc\");FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:function(){var node=FS.createNode(\"/proc/self\",\"fd\",16384|511,73);node.node_ops={lookup:function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(9);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:function(){return stream.path}}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams:function(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",\"r\");var stdout=FS.open(\"/dev/stdout\",\"w\");var stderr=FS.open(\"/dev/stderr\",\"w\");assert(stdin.fd===0,\"invalid handle for stdin (\"+stdin.fd+\")\");assert(stdout.fd===1,\"invalid handle for stdout (\"+stdout.fd+\")\");assert(stderr.fd===2,\"invalid handle for stderr (\"+stderr.fd+\")\")},ensureErrnoError:function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}};this.setErrno(errno);this.message=ERRNO_MESSAGES[errno];if(this.stack)Object.defineProperty(this,\"stack\",{value:(new Error).stack,writable:true});if(this.stack)this.stack=demangleAll(this.stack)};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[2].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit:function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS,\"NODEFS\":NODEFS}},init:function(input,output,error){assert(!FS.init.initialized,\"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit:function(){FS.init.initialized=false;var fflush=Module[\"_fflush\"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},joinPath:function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]==\"/\")path=path.substr(1);return path},absolutePath:function(relative,base){return PATH.resolve(base,relative)},standardizePath:function(path){return PATH.normalize(path)},findObject:function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}},analyzePath:function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createFolder:function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)},createPath:function(parent,path,canRead,canWrite){parent=typeof parent===\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data===\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,\"w\");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:function(parent,name,input,output){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function(stream){stream.seekable=false},close:function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read:function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(5)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(11)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(5)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},createLink:function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);return FS.symlink(target,path)},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!==\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(Module[\"read\"]){try{obj.contents=intArrayFromString(Module[\"read\"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}if(!success)___setErrNo(5);return success},createLazyFile:function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function(from,to){if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);if(typeof Uint8Array!=\"undefined\")xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]===\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]===\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!==\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(5)}return fn.apply(null,arguments)}});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(5)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node},createPreloadedFile:function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module[\"preloadPlugins\"].forEach(function(plugin){if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep)});handled=true}});if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){Browser.asyncLoad(url,function(byteArray){processData(byteArray)},onerror)}else{processData(url)}},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function(dirfd,path){if(path[0]!==\"/\"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path}path=PATH.join2(dir,path)}return path},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR}throw e}SAFE_HEAP_STORE(buf|0,stat.dev|0,4);SAFE_HEAP_STORE(buf+4|0,0|0,4);SAFE_HEAP_STORE(buf+8|0,stat.ino|0,4);SAFE_HEAP_STORE(buf+12|0,stat.mode|0,4);SAFE_HEAP_STORE(buf+16|0,stat.nlink|0,4);SAFE_HEAP_STORE(buf+20|0,stat.uid|0,4);SAFE_HEAP_STORE(buf+24|0,stat.gid|0,4);SAFE_HEAP_STORE(buf+28|0,stat.rdev|0,4);SAFE_HEAP_STORE(buf+32|0,0|0,4);SAFE_HEAP_STORE(buf+36|0,stat.size|0,4);SAFE_HEAP_STORE(buf+40|0,4096|0,4);SAFE_HEAP_STORE(buf+44|0,stat.blocks|0,4);SAFE_HEAP_STORE(buf+48|0,stat.atime.getTime()/1e3|0|0,4);SAFE_HEAP_STORE(buf+52|0,0|0,4);SAFE_HEAP_STORE(buf+56|0,stat.mtime.getTime()/1e3|0|0,4);SAFE_HEAP_STORE(buf+60|0,0|0,4);SAFE_HEAP_STORE(buf+64|0,stat.ctime.getTime()/1e3|0|0,4);SAFE_HEAP_STORE(buf+68|0,0|0,4);SAFE_HEAP_STORE(buf+72|0,stat.ino|0,4);return 0},doMsync:function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL}FS.mknod(path,mode,dev);return 0},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len},doAccess:function(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var perms=\"\";if(amode&4)perms+=\"r\";if(amode&2)perms+=\"w\";if(amode&1)perms+=\"x\";if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES}return 0},doDup:function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=SAFE_HEAP_LOAD(iov+i*8|0,4,0)|0;var len=SAFE_HEAP_LOAD(iov+(i*8+4)|0,4,0)|0;var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=SAFE_HEAP_LOAD(iov+i*8|0,4,0)|0;var len=SAFE_HEAP_LOAD(iov+(i*8+4)|0,4,0)|0;var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret},varargs:0,get:function(varargs){SYSCALLS.varargs+=4;var ret=SAFE_HEAP_LOAD(SYSCALLS.varargs-4|0,4,0)|0;return ret},getStr:function(){var ret=UTF8ToString(SYSCALLS.get());return ret},getStreamFromFD:function(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream},getSocketFromFD:function(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket},getSocketAddress:function(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info},get64:function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low},getZero:function(){assert(SYSCALLS.get()===0)}};function ___syscall10(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr();FS.unlink(path);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);SAFE_HEAP_STORE(result|0,stream.position|0,4);if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall145(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall15(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),mode=SYSCALLS.get();FS.chmod(path,mode);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall195(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),buf=SYSCALLS.get();return SYSCALLS.doStat(FS.stat,path,buf)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall197(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),buf=SYSCALLS.get();return SYSCALLS.doStat(FS.stat,stream.path,buf)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),cmd=SYSCALLS.get();switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-ERRNO_CODES.EINVAL}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 12:{var arg=SYSCALLS.get();var offset=0;SAFE_HEAP_STORE(arg+offset|0,2|0,2);return 0}case 13:case 14:return 0;case 16:case 8:return-ERRNO_CODES.EINVAL;case 9:___setErrNo(ERRNO_CODES.EINVAL);return-1;default:{return-ERRNO_CODES.EINVAL}}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall38(which,varargs){SYSCALLS.varargs=varargs;try{var old_path=SYSCALLS.getStr(),new_path=SYSCALLS.getStr();FS.rename(old_path,new_path);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall40(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr();FS.rmdir(path);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21509:case 21505:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0}case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0}case 21519:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;var argp=SYSCALLS.get();SAFE_HEAP_STORE(argp|0,0|0,4);return 0}case 21520:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return-ERRNO_CODES.EINVAL}case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0}case 21524:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0}default:abort(\"bad ioctl syscall \"+op)}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall60(which,varargs){SYSCALLS.varargs=varargs;try{var mask=SYSCALLS.get();var old=SYSCALLS.umask;SYSCALLS.umask=mask;return old}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___unlock(){}function _emscripten_get_heap_size(){return HEAP8.length}function abortOnCannotGrowMemory(requestedSize){abort(\"Cannot enlarge memory arrays to size \"+requestedSize+\" bytes (OOM). Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+HEAP8.length+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")}function emscripten_realloc_buffer(size){var PAGE_MULTIPLE=65536;size=alignUp(size,PAGE_MULTIPLE);var oldSize=buffer.byteLength;try{var result=wasmMemory.grow((size-oldSize)/65536);if(result!==(-1|0)){return buffer=wasmMemory.buffer}else{return null}}catch(e){console.error(\"emscripten_realloc_buffer: Attempted to grow from \"+oldSize+\" bytes to \"+size+\" bytes, but got error: \"+e);return null}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();assert(requestedSize>oldSize);var PAGE_MULTIPLE=65536;var LIMIT=2147483648-PAGE_MULTIPLE;if(requestedSize>LIMIT){err(\"Cannot enlarge memory, asked to go up to \"+requestedSize+\" bytes, but the limit is \"+LIMIT+\" bytes!\");return false}var MIN_TOTAL_MEMORY=16777216;var newSize=Math.max(oldSize,MIN_TOTAL_MEMORY);while(newSize<requestedSize){if(newSize<=536870912){newSize=alignUp(2*newSize,PAGE_MULTIPLE)}else{newSize=Math.min(alignUp((3*newSize+2147483648)/4,PAGE_MULTIPLE),LIMIT);if(newSize===oldSize){warnOnce(\"Cannot ask for more memory since we reached the practical limit in browsers (which is just below 2GB), so the request would have failed. Requesting only \"+HEAP8.length)}}}var start=Date.now();var replacement=emscripten_realloc_buffer(newSize);if(!replacement||replacement.byteLength!=newSize){err(\"Failed to grow the heap from \"+oldSize+\" bytes to \"+newSize+\" bytes, not enough memory!\");if(replacement){err(\"Expected to get back a buffer of size \"+newSize+\" bytes, but instead got back a buffer of size \"+replacement.byteLength)}return false}updateGlobalBufferViews();return true}var ___tm_current=22560;var ___tm_timezone=(stringToUTF8(\"GMT\",22608,4),22608);function _gmtime_r(time,tmPtr){var date=new Date((SAFE_HEAP_LOAD(time|0,4,0)|0)*1e3);SAFE_HEAP_STORE(tmPtr|0,date.getUTCSeconds()|0,4);SAFE_HEAP_STORE(tmPtr+4|0,date.getUTCMinutes()|0,4);SAFE_HEAP_STORE(tmPtr+8|0,date.getUTCHours()|0,4);SAFE_HEAP_STORE(tmPtr+12|0,date.getUTCDate()|0,4);SAFE_HEAP_STORE(tmPtr+16|0,date.getUTCMonth()|0,4);SAFE_HEAP_STORE(tmPtr+20|0,date.getUTCFullYear()-1900|0,4);SAFE_HEAP_STORE(tmPtr+24|0,date.getUTCDay()|0,4);SAFE_HEAP_STORE(tmPtr+36|0,0|0,4);SAFE_HEAP_STORE(tmPtr+32|0,0|0,4);var start=Date.UTC(date.getUTCFullYear(),0,1,0,0,0,0);var yday=(date.getTime()-start)/(1e3*60*60*24)|0;SAFE_HEAP_STORE(tmPtr+28|0,yday|0,4);SAFE_HEAP_STORE(tmPtr+40|0,___tm_timezone|0,4);return tmPtr}function _gmtime(time){return _gmtime_r(time,___tm_current)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function _tzset(){if(_tzset.called)return;_tzset.called=true;SAFE_HEAP_STORE(__get_timezone()|0,(new Date).getTimezoneOffset()*60|0,4);var winter=new Date(2e3,0,1);var summer=new Date(2e3,6,1);SAFE_HEAP_STORE(__get_daylight()|0,Number(winter.getTimezoneOffset()!=summer.getTimezoneOffset())|0,4);function extractZone(date){var match=date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return match?match[1]:\"GMT\"}var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=allocate(intArrayFromString(winterName),\"i8\",ALLOC_NORMAL);var summerNamePtr=allocate(intArrayFromString(summerName),\"i8\",ALLOC_NORMAL);if(summer.getTimezoneOffset()<winter.getTimezoneOffset()){SAFE_HEAP_STORE(__get_tzname()|0,winterNamePtr|0,4);SAFE_HEAP_STORE(__get_tzname()+4|0,summerNamePtr|0,4)}else{SAFE_HEAP_STORE(__get_tzname()|0,summerNamePtr|0,4);SAFE_HEAP_STORE(__get_tzname()+4|0,winterNamePtr|0,4)}}function _mktime(tmPtr){_tzset();var date=new Date((SAFE_HEAP_LOAD(tmPtr+20|0,4,0)|0)+1900,SAFE_HEAP_LOAD(tmPtr+16|0,4,0)|0,SAFE_HEAP_LOAD(tmPtr+12|0,4,0)|0,SAFE_HEAP_LOAD(tmPtr+8|0,4,0)|0,SAFE_HEAP_LOAD(tmPtr+4|0,4,0)|0,SAFE_HEAP_LOAD(tmPtr|0,4,0)|0,0);var dst=SAFE_HEAP_LOAD(tmPtr+32|0,4,0)|0;var guessedOffset=date.getTimezoneOffset();var start=new Date(date.getFullYear(),0,1);var summerOffset=new Date(2e3,6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dstOffset=Math.min(winterOffset,summerOffset);if(dst<0){SAFE_HEAP_STORE(tmPtr+32|0,Number(summerOffset!=winterOffset&&dstOffset==guessedOffset)|0,4)}else if(dst>0!=(dstOffset==guessedOffset)){var nonDstOffset=Math.max(winterOffset,summerOffset);var trueOffset=dst>0?dstOffset:nonDstOffset;date.setTime(date.getTime()+(trueOffset-guessedOffset)*6e4)}SAFE_HEAP_STORE(tmPtr+24|0,date.getDay()|0,4);var yday=(date.getTime()-start.getTime())/(1e3*60*60*24)|0;SAFE_HEAP_STORE(tmPtr+28|0,yday|0,4);return date.getTime()/1e3|0}function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){SAFE_HEAP_STORE(ptr|0,ret|0,4)}return ret}if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function _emscripten_get_now_actual(){var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6}}else if(typeof dateNow!==\"undefined\"){_emscripten_get_now=dateNow}else if(typeof performance===\"object\"&&performance&&typeof performance[\"now\"]===\"function\"){_emscripten_get_now=function(){return performance[\"now\"]()}}else{_emscripten_get_now=Date.now}FS.staticInit();if(ENVIRONMENT_IS_NODE){var fs=frozenFs;var NODEJS_PATH=__webpack_require__(4);NODEFS.staticInit()}if(ENVIRONMENT_IS_NODE){var _wrapNodeError=function(func){return function(){try{return func.apply(this,arguments)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}};var VFS=Object.assign({},FS);for(var _key in NODERAWFS)FS[_key]=_wrapNodeError(NODERAWFS[_key])}else{throw new Error(\"NODERAWFS is currently only supported on Node.js environment.\")}function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var decodeBase64=typeof atob===\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE===\"boolean\"&&ENVIRONMENT_IS_NODE){var buf;try{buf=Buffer.from(s,\"base64\")}catch(_){buf=new Buffer(s,\"base64\")}return new Uint8Array(buf.buffer,buf.byteOffset,buf.byteLength)}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}function nullFunc_ii(x){err(\"Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");err(\"Build with ASSERTIONS=2 for more info.\");abort(x)}function nullFunc_iii(x){err(\"Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");err(\"Build with ASSERTIONS=2 for more info.\");abort(x)}function nullFunc_iiii(x){err(\"Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");err(\"Build with ASSERTIONS=2 for more info.\");abort(x)}function nullFunc_iiiiii(x){err(\"Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");err(\"Build with ASSERTIONS=2 for more info.\");abort(x)}function nullFunc_iiij(x){err(\"Invalid function pointer called with signature 'iiij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");err(\"Build with ASSERTIONS=2 for more info.\");abort(x)}function nullFunc_jiiiji(x){err(\"Invalid function pointer called with signature 'jiiiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");err(\"Build with ASSERTIONS=2 for more info.\");abort(x)}function nullFunc_jiiji(x){err(\"Invalid function pointer called with signature 'jiiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");err(\"Build with ASSERTIONS=2 for more info.\");abort(x)}function nullFunc_vi(x){err(\"Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");err(\"Build with ASSERTIONS=2 for more info.\");abort(x)}function nullFunc_vidi(x){err(\"Invalid function pointer called with signature 'vidi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");err(\"Build with ASSERTIONS=2 for more info.\");abort(x)}function nullFunc_vii(x){err(\"Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");err(\"Build with ASSERTIONS=2 for more info.\");abort(x)}var asmGlobalArg={};var asmLibraryArg={\"e\":setTempRet0,\"b\":abortStackOverflow,\"c\":segfault,\"d\":alignfault,\"C\":nullFunc_ii,\"u\":nullFunc_iii,\"t\":nullFunc_iiii,\"s\":nullFunc_iiiiii,\"r\":nullFunc_iiij,\"q\":nullFunc_jiiiji,\"p\":nullFunc_jiiji,\"O\":nullFunc_vi,\"N\":nullFunc_vidi,\"M\":nullFunc_vii,\"L\":___buildEnvironment,\"K\":___clock_gettime,\"i\":___lock,\"o\":___setErrNo,\"J\":___syscall10,\"I\":___syscall140,\"H\":___syscall145,\"n\":___syscall146,\"G\":___syscall15,\"m\":___syscall195,\"F\":___syscall197,\"f\":___syscall221,\"E\":___syscall38,\"D\":___syscall40,\"l\":___syscall5,\"k\":___syscall54,\"h\":___syscall6,\"B\":___syscall60,\"g\":___unlock,\"A\":_emscripten_get_heap_size,\"z\":_emscripten_memcpy_big,\"y\":_emscripten_resize_heap,\"x\":_gmtime,\"w\":_mktime,\"j\":_time,\"v\":abortOnCannotGrowMemory,\"a\":DYNAMICTOP_PTR};var asm=Module[\"asm\"](asmGlobalArg,asmLibraryArg,buffer);var real____emscripten_environ_constructor=asm[\"P\"];asm[\"P\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real____emscripten_environ_constructor.apply(null,arguments)};var real____errno_location=asm[\"Q\"];asm[\"Q\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real____errno_location.apply(null,arguments)};var real___get_daylight=asm[\"R\"];asm[\"R\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real___get_daylight.apply(null,arguments)};var real___get_timezone=asm[\"S\"];asm[\"S\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real___get_timezone.apply(null,arguments)};var real___get_tzname=asm[\"T\"];asm[\"T\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real___get_tzname.apply(null,arguments)};var real__fflush=asm[\"U\"];asm[\"U\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__fflush.apply(null,arguments)};var real__free=asm[\"V\"];asm[\"V\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__free.apply(null,arguments)};var real__llvm_bswap_i32=asm[\"W\"];asm[\"W\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__llvm_bswap_i32.apply(null,arguments)};var real__malloc=asm[\"X\"];asm[\"X\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__malloc.apply(null,arguments)};var real__sbrk=asm[\"Y\"];asm[\"Y\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__sbrk.apply(null,arguments)};var real__zip_close=asm[\"Z\"];asm[\"Z\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_close.apply(null,arguments)};var real__zip_dir_add=asm[\"_\"];asm[\"_\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_dir_add.apply(null,arguments)};var real__zip_discard=asm[\"$\"];asm[\"$\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_discard.apply(null,arguments)};var real__zip_error_init_with_code=asm[\"aa\"];asm[\"aa\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_error_init_with_code.apply(null,arguments)};var real__zip_error_strerror=asm[\"ba\"];asm[\"ba\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_error_strerror.apply(null,arguments)};var real__zip_fclose=asm[\"ca\"];asm[\"ca\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_fclose.apply(null,arguments)};var real__zip_file_add=asm[\"da\"];asm[\"da\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_file_add.apply(null,arguments)};var real__zip_file_get_error=asm[\"ea\"];asm[\"ea\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_file_get_error.apply(null,arguments)};var real__zip_file_get_external_attributes=asm[\"fa\"];asm[\"fa\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_file_get_external_attributes.apply(null,arguments)};var real__zip_file_set_external_attributes=asm[\"ga\"];asm[\"ga\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_file_set_external_attributes.apply(null,arguments)};var real__zip_file_set_mtime=asm[\"ha\"];asm[\"ha\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_file_set_mtime.apply(null,arguments)};var real__zip_fopen=asm[\"ia\"];asm[\"ia\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_fopen.apply(null,arguments)};var real__zip_fopen_index=asm[\"ja\"];asm[\"ja\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_fopen_index.apply(null,arguments)};var real__zip_fread=asm[\"ka\"];asm[\"ka\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_fread.apply(null,arguments)};var real__zip_get_error=asm[\"la\"];asm[\"la\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_get_error.apply(null,arguments)};var real__zip_get_name=asm[\"ma\"];asm[\"ma\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_get_name.apply(null,arguments)};var real__zip_get_num_entries=asm[\"na\"];asm[\"na\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_get_num_entries.apply(null,arguments)};var real__zip_name_locate=asm[\"oa\"];asm[\"oa\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_name_locate.apply(null,arguments)};var real__zip_open=asm[\"pa\"];asm[\"pa\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_open.apply(null,arguments)};var real__zip_open_from_source=asm[\"qa\"];asm[\"qa\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_open_from_source.apply(null,arguments)};var real__zip_source_buffer=asm[\"ra\"];asm[\"ra\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_source_buffer.apply(null,arguments)};var real__zip_source_buffer_create=asm[\"sa\"];asm[\"sa\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_source_buffer_create.apply(null,arguments)};var real__zip_source_free=asm[\"ta\"];asm[\"ta\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_source_free.apply(null,arguments)};var real__zip_stat=asm[\"ua\"];asm[\"ua\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_stat.apply(null,arguments)};var real__zip_stat_index=asm[\"va\"];asm[\"va\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zip_stat_index.apply(null,arguments)};var real__zipstruct_error=asm[\"wa\"];asm[\"wa\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zipstruct_error.apply(null,arguments)};var real__zipstruct_errorS=asm[\"xa\"];asm[\"xa\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zipstruct_errorS.apply(null,arguments)};var real__zipstruct_stat=asm[\"ya\"];asm[\"ya\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zipstruct_stat.apply(null,arguments)};var real__zipstruct_statS=asm[\"za\"];asm[\"za\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zipstruct_statS.apply(null,arguments)};var real__zipstruct_stat_index=asm[\"Aa\"];asm[\"Aa\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zipstruct_stat_index.apply(null,arguments)};var real__zipstruct_stat_mtime=asm[\"Ba\"];asm[\"Ba\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zipstruct_stat_mtime.apply(null,arguments)};var real__zipstruct_stat_name=asm[\"Ca\"];asm[\"Ca\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zipstruct_stat_name.apply(null,arguments)};var real__zipstruct_stat_size=asm[\"Da\"];asm[\"Da\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real__zipstruct_stat_size.apply(null,arguments)};var real_establishStackSpace=asm[\"Fa\"];asm[\"Fa\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real_establishStackSpace.apply(null,arguments)};var real_stackAlloc=asm[\"Ga\"];asm[\"Ga\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real_stackAlloc.apply(null,arguments)};var real_stackRestore=asm[\"Ha\"];asm[\"Ha\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real_stackRestore.apply(null,arguments)};var real_stackSave=asm[\"Ia\"];asm[\"Ia\"]=function(){assert(runtimeInitialized,\"you need to wait for the runtime to be ready (e.g. wait for main() to be called)\");assert(!runtimeExited,\"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)\");return real_stackSave.apply(null,arguments)};var ___emscripten_environ_constructor=Module[\"___emscripten_environ_constructor\"]=asm[\"P\"];var ___errno_location=Module[\"___errno_location\"]=asm[\"Q\"];var __get_daylight=Module[\"__get_daylight\"]=asm[\"R\"];var __get_timezone=Module[\"__get_timezone\"]=asm[\"S\"];var __get_tzname=Module[\"__get_tzname\"]=asm[\"T\"];var _fflush=Module[\"_fflush\"]=asm[\"U\"];var _free=Module[\"_free\"]=asm[\"V\"];var _llvm_bswap_i32=Module[\"_llvm_bswap_i32\"]=asm[\"W\"];var _malloc=Module[\"_malloc\"]=asm[\"X\"];var _sbrk=Module[\"_sbrk\"]=asm[\"Y\"];var _zip_close=Module[\"_zip_close\"]=asm[\"Z\"];var _zip_dir_add=Module[\"_zip_dir_add\"]=asm[\"_\"];var _zip_discard=Module[\"_zip_discard\"]=asm[\"$\"];var _zip_error_init_with_code=Module[\"_zip_error_init_with_code\"]=asm[\"aa\"];var _zip_error_strerror=Module[\"_zip_error_strerror\"]=asm[\"ba\"];var _zip_fclose=Module[\"_zip_fclose\"]=asm[\"ca\"];var _zip_file_add=Module[\"_zip_file_add\"]=asm[\"da\"];var _zip_file_get_error=Module[\"_zip_file_get_error\"]=asm[\"ea\"];var _zip_file_get_external_attributes=Module[\"_zip_file_get_external_attributes\"]=asm[\"fa\"];var _zip_file_set_external_attributes=Module[\"_zip_file_set_external_attributes\"]=asm[\"ga\"];var _zip_file_set_mtime=Module[\"_zip_file_set_mtime\"]=asm[\"ha\"];var _zip_fopen=Module[\"_zip_fopen\"]=asm[\"ia\"];var _zip_fopen_index=Module[\"_zip_fopen_index\"]=asm[\"ja\"];var _zip_fread=Module[\"_zip_fread\"]=asm[\"ka\"];var _zip_get_error=Module[\"_zip_get_error\"]=asm[\"la\"];var _zip_get_name=Module[\"_zip_get_name\"]=asm[\"ma\"];var _zip_get_num_entries=Module[\"_zip_get_num_entries\"]=asm[\"na\"];var _zip_name_locate=Module[\"_zip_name_locate\"]=asm[\"oa\"];var _zip_open=Module[\"_zip_open\"]=asm[\"pa\"];var _zip_open_from_source=Module[\"_zip_open_from_source\"]=asm[\"qa\"];var _zip_source_buffer=Module[\"_zip_source_buffer\"]=asm[\"ra\"];var _zip_source_buffer_create=Module[\"_zip_source_buffer_create\"]=asm[\"sa\"];var _zip_source_free=Module[\"_zip_source_free\"]=asm[\"ta\"];var _zip_stat=Module[\"_zip_stat\"]=asm[\"ua\"];var _zip_stat_index=Module[\"_zip_stat_index\"]=asm[\"va\"];var _zipstruct_error=Module[\"_zipstruct_error\"]=asm[\"wa\"];var _zipstruct_errorS=Module[\"_zipstruct_errorS\"]=asm[\"xa\"];var _zipstruct_stat=Module[\"_zipstruct_stat\"]=asm[\"ya\"];var _zipstruct_statS=Module[\"_zipstruct_statS\"]=asm[\"za\"];var _zipstruct_stat_index=Module[\"_zipstruct_stat_index\"]=asm[\"Aa\"];var _zipstruct_stat_mtime=Module[\"_zipstruct_stat_mtime\"]=asm[\"Ba\"];var _zipstruct_stat_name=Module[\"_zipstruct_stat_name\"]=asm[\"Ca\"];var _zipstruct_stat_size=Module[\"_zipstruct_stat_size\"]=asm[\"Da\"];var establishStackSpace=Module[\"establishStackSpace\"]=asm[\"Fa\"];var stackAlloc=Module[\"stackAlloc\"]=asm[\"Ga\"];var stackRestore=Module[\"stackRestore\"]=asm[\"Ha\"];var stackSave=Module[\"stackSave\"]=asm[\"Ia\"];var dynCall_vi=Module[\"dynCall_vi\"]=asm[\"Ea\"];Module[\"asm\"]=asm;if(!Module[\"intArrayFromString\"])Module[\"intArrayFromString\"]=function(){abort(\"'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"intArrayToString\"])Module[\"intArrayToString\"]=function(){abort(\"'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"ccall\"])Module[\"ccall\"]=function(){abort(\"'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};Module[\"cwrap\"]=cwrap;if(!Module[\"setValue\"])Module[\"setValue\"]=function(){abort(\"'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};Module[\"getValue\"]=getValue;if(!Module[\"allocate\"])Module[\"allocate\"]=function(){abort(\"'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"getMemory\"])Module[\"getMemory\"]=function(){abort(\"'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\")};if(!Module[\"AsciiToString\"])Module[\"AsciiToString\"]=function(){abort(\"'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"stringToAscii\"])Module[\"stringToAscii\"]=function(){abort(\"'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"UTF8ArrayToString\"])Module[\"UTF8ArrayToString\"]=function(){abort(\"'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"UTF8ToString\"])Module[\"UTF8ToString\"]=function(){abort(\"'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"stringToUTF8Array\"])Module[\"stringToUTF8Array\"]=function(){abort(\"'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"stringToUTF8\"])Module[\"stringToUTF8\"]=function(){abort(\"'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"lengthBytesUTF8\"])Module[\"lengthBytesUTF8\"]=function(){abort(\"'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"UTF16ToString\"])Module[\"UTF16ToString\"]=function(){abort(\"'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"stringToUTF16\"])Module[\"stringToUTF16\"]=function(){abort(\"'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"lengthBytesUTF16\"])Module[\"lengthBytesUTF16\"]=function(){abort(\"'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"UTF32ToString\"])Module[\"UTF32ToString\"]=function(){abort(\"'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"stringToUTF32\"])Module[\"stringToUTF32\"]=function(){abort(\"'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"lengthBytesUTF32\"])Module[\"lengthBytesUTF32\"]=function(){abort(\"'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"allocateUTF8\"])Module[\"allocateUTF8\"]=function(){abort(\"'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"stackTrace\"])Module[\"stackTrace\"]=function(){abort(\"'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"addOnPreRun\"])Module[\"addOnPreRun\"]=function(){abort(\"'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"addOnInit\"])Module[\"addOnInit\"]=function(){abort(\"'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"addOnPreMain\"])Module[\"addOnPreMain\"]=function(){abort(\"'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"addOnExit\"])Module[\"addOnExit\"]=function(){abort(\"'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"addOnPostRun\"])Module[\"addOnPostRun\"]=function(){abort(\"'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"writeStringToMemory\"])Module[\"writeStringToMemory\"]=function(){abort(\"'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"writeArrayToMemory\"])Module[\"writeArrayToMemory\"]=function(){abort(\"'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"writeAsciiToMemory\"])Module[\"writeAsciiToMemory\"]=function(){abort(\"'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"addRunDependency\"])Module[\"addRunDependency\"]=function(){abort(\"'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\")};if(!Module[\"removeRunDependency\"])Module[\"removeRunDependency\"]=function(){abort(\"'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\")};if(!Module[\"ENV\"])Module[\"ENV\"]=function(){abort(\"'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"FS\"])Module[\"FS\"]=function(){abort(\"'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"FS_createFolder\"])Module[\"FS_createFolder\"]=function(){abort(\"'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\")};if(!Module[\"FS_createPath\"])Module[\"FS_createPath\"]=function(){abort(\"'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\")};if(!Module[\"FS_createDataFile\"])Module[\"FS_createDataFile\"]=function(){abort(\"'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\")};if(!Module[\"FS_createPreloadedFile\"])Module[\"FS_createPreloadedFile\"]=function(){abort(\"'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\")};if(!Module[\"FS_createLazyFile\"])Module[\"FS_createLazyFile\"]=function(){abort(\"'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\")};if(!Module[\"FS_createLink\"])Module[\"FS_createLink\"]=function(){abort(\"'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\")};if(!Module[\"FS_createDevice\"])Module[\"FS_createDevice\"]=function(){abort(\"'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\")};if(!Module[\"FS_unlink\"])Module[\"FS_unlink\"]=function(){abort(\"'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\")};if(!Module[\"GL\"])Module[\"GL\"]=function(){abort(\"'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"dynamicAlloc\"])Module[\"dynamicAlloc\"]=function(){abort(\"'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"warnOnce\"])Module[\"warnOnce\"]=function(){abort(\"'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"loadDynamicLibrary\"])Module[\"loadDynamicLibrary\"]=function(){abort(\"'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"loadWebAssemblyModule\"])Module[\"loadWebAssemblyModule\"]=function(){abort(\"'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"getLEB\"])Module[\"getLEB\"]=function(){abort(\"'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"getFunctionTables\"])Module[\"getFunctionTables\"]=function(){abort(\"'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"alignFunctionTables\"])Module[\"alignFunctionTables\"]=function(){abort(\"'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"registerFunctions\"])Module[\"registerFunctions\"]=function(){abort(\"'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"addFunction\"])Module[\"addFunction\"]=function(){abort(\"'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"removeFunction\"])Module[\"removeFunction\"]=function(){abort(\"'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"getFuncWrapper\"])Module[\"getFuncWrapper\"]=function(){abort(\"'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"prettyPrint\"])Module[\"prettyPrint\"]=function(){abort(\"'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"makeBigInt\"])Module[\"makeBigInt\"]=function(){abort(\"'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"dynCall\"])Module[\"dynCall\"]=function(){abort(\"'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"getCompilerSetting\"])Module[\"getCompilerSetting\"]=function(){abort(\"'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"stackSave\"])Module[\"stackSave\"]=function(){abort(\"'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"stackRestore\"])Module[\"stackRestore\"]=function(){abort(\"'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"stackAlloc\"])Module[\"stackAlloc\"]=function(){abort(\"'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"establishStackSpace\"])Module[\"establishStackSpace\"]=function(){abort(\"'establishStackSpace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"print\"])Module[\"print\"]=function(){abort(\"'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"printErr\"])Module[\"printErr\"]=function(){abort(\"'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"getTempRet0\"])Module[\"getTempRet0\"]=function(){abort(\"'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"setTempRet0\"])Module[\"setTempRet0\"]=function(){abort(\"'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"Pointer_stringify\"])Module[\"Pointer_stringify\"]=function(){abort(\"'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"intArrayFromBase64\"])Module[\"intArrayFromBase64\"]=function(){abort(\"'intArrayFromBase64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"tryParseAsDataURI\"])Module[\"tryParseAsDataURI\"]=function(){abort(\"'tryParseAsDataURI' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")};if(!Module[\"ALLOC_NORMAL\"])Object.defineProperty(Module,\"ALLOC_NORMAL\",{get:function(){abort(\"'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")}});if(!Module[\"ALLOC_STACK\"])Object.defineProperty(Module,\"ALLOC_STACK\",{get:function(){abort(\"'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")}});if(!Module[\"ALLOC_DYNAMIC\"])Object.defineProperty(Module,\"ALLOC_DYNAMIC\",{get:function(){abort(\"'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")}});if(!Module[\"ALLOC_NONE\"])Object.defineProperty(Module,\"ALLOC_NONE\",{get:function(){abort(\"'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\")}});function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}writeStackCookie();preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();assert(!Module[\"_main\"],'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}checkStackCookie()}Module[\"run\"]=run;var abortDecorators=[];function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;var extra=\"\";var output=\"abort(\"+what+\") at \"+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach(function(decorator){output=decorator(output,what)})}throw output}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run();\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"crypto\");\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"stream\");\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"util\");\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst fs_1 = __webpack_require__(3);\r\nconst path_1 = __webpack_require__(4);\r\nconst FakeFS_1 = __webpack_require__(5);\r\nconst NodeFS_1 = __webpack_require__(2);\r\nconst ZipFS_1 = __webpack_require__(11);\r\nclass ZipOpenFS extends FakeFS_1.FakeFS {\r\n    constructor({ baseFs = new NodeFS_1.NodeFS(), filter = null, useCache = true } = {}) {\r\n        super();\r\n        this.isZip = new Set();\r\n        this.notZip = new Set();\r\n        this.baseFs = baseFs;\r\n        this.zipInstances = useCache ? new Map() : null;\r\n        this.filter = filter;\r\n        this.isZip = new Set();\r\n        this.notZip = new Set();\r\n    }\r\n    static open(fn) {\r\n        const zipOpenFs = new ZipOpenFS();\r\n        try {\r\n            return fn(zipOpenFs);\r\n        }\r\n        finally {\r\n            zipOpenFs.saveAndClose();\r\n        }\r\n    }\r\n    static async openPromise(fn) {\r\n        const zipOpenFs = new ZipOpenFS();\r\n        try {\r\n            return await fn(zipOpenFs);\r\n        }\r\n        finally {\r\n            zipOpenFs.saveAndClose();\r\n        }\r\n    }\r\n    getRealPath() {\r\n        return this.baseFs.getRealPath();\r\n    }\r\n    saveAndClose() {\r\n        if (this.zipInstances) {\r\n            for (const [path, zipFs] of this.zipInstances.entries()) {\r\n                zipFs.saveAndClose();\r\n                this.zipInstances.delete(path);\r\n            }\r\n        }\r\n    }\r\n    discardAndClose() {\r\n        if (this.zipInstances) {\r\n            for (const [path, zipFs] of this.zipInstances.entries()) {\r\n                zipFs.discardAndClose();\r\n                this.zipInstances.delete(path);\r\n            }\r\n        }\r\n    }\r\n    async openPromise(p, flags, mode) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.openPromise(p, flags, mode);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            throw new Error(`Unsupported action (we wouldn't be able to disambiguate the close)`);\r\n        });\r\n    }\r\n    openSync(p, flags, mode) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.openSync(p, flags, mode);\r\n        }, (zipFs, { archivePath, subPath }) => {\r\n            throw new Error(`Unsupported action (we wouldn't be able to disambiguate the close)`);\r\n        });\r\n    }\r\n    async closePromise(fd) {\r\n        return await this.baseFs.closePromise(fd);\r\n    }\r\n    closeSync(fd) {\r\n        return this.baseFs.closeSync(fd);\r\n    }\r\n    createReadStream(p, opts) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.createReadStream(p, opts);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.createReadStream(subPath, opts);\r\n        });\r\n    }\r\n    createWriteStream(p, opts) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.createWriteStream(p, opts);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.createWriteStream(subPath, opts);\r\n        });\r\n    }\r\n    async realpathPromise(p) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.realpathPromise(p);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            return path_1.posix.resolve(archivePath, path_1.posix.relative(`/`, await zipFs.realpathPromise(subPath)));\r\n        });\r\n    }\r\n    realpathSync(p) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.realpathSync(p);\r\n        }, (zipFs, { archivePath, subPath }) => {\r\n            return path_1.posix.resolve(archivePath, path_1.posix.relative(`/`, zipFs.realpathSync(subPath)));\r\n        });\r\n    }\r\n    async existsPromise(p) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.existsPromise(p);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            return await zipFs.existsPromise(subPath);\r\n        });\r\n    }\r\n    existsSync(p) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.existsSync(p);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.existsSync(subPath);\r\n        });\r\n    }\r\n    async accessPromise(p, mode) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.accessPromise(p, mode);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            return await zipFs.accessPromise(subPath, mode);\r\n        });\r\n    }\r\n    accessSync(p, mode) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.accessSync(p, mode);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.accessSync(subPath, mode);\r\n        });\r\n    }\r\n    async statPromise(p) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.statPromise(p);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            return await zipFs.statPromise(subPath);\r\n        });\r\n    }\r\n    statSync(p) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.statSync(p);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.statSync(subPath);\r\n        });\r\n    }\r\n    async lstatPromise(p) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.lstatPromise(p);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            return await zipFs.lstatPromise(subPath);\r\n        });\r\n    }\r\n    lstatSync(p) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.lstatSync(p);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.lstatSync(subPath);\r\n        });\r\n    }\r\n    async chmodPromise(p, mask) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.chmodPromise(p, mask);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            return await zipFs.chmodPromise(subPath, mask);\r\n        });\r\n    }\r\n    chmodSync(p, mask) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.chmodSync(p, mask);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.chmodSync(subPath, mask);\r\n        });\r\n    }\r\n    async renamePromise(oldP, newP) {\r\n        return await this.makeCallPromise(oldP, async () => {\r\n            return await this.makeCallPromise(newP, async () => {\r\n                return await this.baseFs.renamePromise(oldP, newP);\r\n            }, async () => {\r\n                throw Object.assign(new Error(`EEXDEV: cross-device link not permitted`), { code: `EEXDEV` });\r\n            });\r\n        }, async (zipFsO, { archivePath: archivePathO, subPath: subPathO }) => {\r\n            return await this.makeCallPromise(newP, async () => {\r\n                throw Object.assign(new Error(`EEXDEV: cross-device link not permitted`), { code: `EEXDEV` });\r\n            }, async (zipFsN, { archivePath: archivePathN, subPath: subPathN }) => {\r\n                if (zipFsO !== zipFsN) {\r\n                    throw Object.assign(new Error(`EEXDEV: cross-device link not permitted`), { code: `EEXDEV` });\r\n                }\r\n                else {\r\n                    return await zipFsO.renamePromise(subPathO, subPathN);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    renameSync(oldP, newP) {\r\n        return this.makeCallSync(oldP, () => {\r\n            return this.makeCallSync(newP, () => {\r\n                return this.baseFs.renameSync(oldP, newP);\r\n            }, async () => {\r\n                throw Object.assign(new Error(`EEXDEV: cross-device link not permitted`), { code: `EEXDEV` });\r\n            });\r\n        }, (zipFsO, { archivePath: archivePathO, subPath: subPathO }) => {\r\n            return this.makeCallSync(newP, () => {\r\n                throw Object.assign(new Error(`EEXDEV: cross-device link not permitted`), { code: `EEXDEV` });\r\n            }, (zipFsN, { archivePath: archivePathN, subPath: subPathN }) => {\r\n                if (zipFsO !== zipFsN) {\r\n                    throw Object.assign(new Error(`EEXDEV: cross-device link not permitted`), { code: `EEXDEV` });\r\n                }\r\n                else {\r\n                    return zipFsO.renameSync(subPathO, subPathN);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    async copyFilePromise(sourceP, destP, flags = 0) {\r\n        const fallback = async (sourceFs, sourceP, destFs, destP) => {\r\n            if ((flags & fs_1.constants.COPYFILE_FICLONE_FORCE) !== 0)\r\n                throw Object.assign(new Error(`EXDEV: cross-device clone not permitted, copyfile '${sourceP}' -> ${destP}'`), { code: `EXDEV` });\r\n            if ((flags & fs_1.constants.COPYFILE_EXCL) && await this.existsPromise(sourceP))\r\n                throw Object.assign(new Error(`EEXIST: file already exists, copyfile '${sourceP}' -> '${destP}'`), { code: `EEXIST` });\r\n            let content;\r\n            try {\r\n                content = await sourceFs.readFilePromise(sourceP);\r\n            }\r\n            catch (error) {\r\n                throw Object.assign(new Error(`EINVAL: invalid argument, copyfile '${sourceP}' -> '${destP}'`), { code: `EINVAL` });\r\n            }\r\n            await destFs.writeFilePromise(destP, content);\r\n        };\r\n        return await this.makeCallPromise(sourceP, async () => {\r\n            return await this.makeCallPromise(destP, async () => {\r\n                return await this.baseFs.copyFilePromise(sourceP, destP, flags);\r\n            }, async (zipFsD, { archivePath: archivePathD, subPath: subPathD }) => {\r\n                return await fallback(this.baseFs, sourceP, zipFsD, subPathD);\r\n            });\r\n        }, async (zipFsS, { archivePath: archivePathS, subPath: subPathS }) => {\r\n            return await this.makeCallPromise(destP, async () => {\r\n                return await fallback(zipFsS, subPathS, this.baseFs, destP);\r\n            }, async (zipFsD, { archivePath: archivePathD, subPath: subPathD }) => {\r\n                if (zipFsS !== zipFsD) {\r\n                    return await fallback(zipFsS, subPathS, zipFsD, subPathD);\r\n                }\r\n                else {\r\n                    return await zipFsS.copyFilePromise(subPathS, subPathD, flags);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    copyFileSync(sourceP, destP, flags = 0) {\r\n        const fallback = (sourceFs, sourceP, destFs, destP) => {\r\n            if ((flags & fs_1.constants.COPYFILE_FICLONE_FORCE) !== 0)\r\n                throw Object.assign(new Error(`EXDEV: cross-device clone not permitted, copyfile '${sourceP}' -> ${destP}'`), { code: `EXDEV` });\r\n            if ((flags & fs_1.constants.COPYFILE_EXCL) && this.existsSync(sourceP))\r\n                throw Object.assign(new Error(`EEXIST: file already exists, copyfile '${sourceP}' -> '${destP}'`), { code: `EEXIST` });\r\n            let content;\r\n            try {\r\n                content = sourceFs.readFileSync(sourceP);\r\n            }\r\n            catch (error) {\r\n                throw Object.assign(new Error(`EINVAL: invalid argument, copyfile '${sourceP}' -> '${destP}'`), { code: `EINVAL` });\r\n            }\r\n            destFs.writeFileSync(destP, content);\r\n        };\r\n        return this.makeCallSync(sourceP, () => {\r\n            return this.makeCallSync(destP, () => {\r\n                return this.baseFs.copyFileSync(sourceP, destP, flags);\r\n            }, (zipFsD, { archivePath: archivePathD, subPath: subPathD }) => {\r\n                return fallback(this.baseFs, sourceP, zipFsD, subPathD);\r\n            });\r\n        }, (zipFsS, { archivePath: archivePathS, subPath: subPathS }) => {\r\n            return this.makeCallSync(destP, () => {\r\n                return fallback(zipFsS, subPathS, this.baseFs, destP);\r\n            }, (zipFsD, { archivePath: archivePathD, subPath: subPathD }) => {\r\n                if (zipFsS !== zipFsD) {\r\n                    return fallback(zipFsS, subPathS, zipFsD, subPathD);\r\n                }\r\n                else {\r\n                    return zipFsS.copyFileSync(subPathS, subPathD, flags);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    async writeFilePromise(p, content, opts) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.writeFilePromise(p, content, opts);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            return await zipFs.writeFilePromise(subPath, content, opts);\r\n        });\r\n    }\r\n    writeFileSync(p, content, opts) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.writeFileSync(p, content, opts);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.writeFileSync(subPath, content, opts);\r\n        });\r\n    }\r\n    async unlinkPromise(p) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.unlinkPromise(p);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            return await zipFs.unlinkPromise(subPath);\r\n        });\r\n    }\r\n    unlinkSync(p) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.unlinkSync(p);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.unlinkSync(subPath);\r\n        });\r\n    }\r\n    async utimesPromise(p, atime, mtime) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.utimesPromise(p, atime, mtime);\r\n        }, async (zipFs, { subPath }) => {\r\n            return await zipFs.utimesPromise(subPath, atime, mtime);\r\n        });\r\n    }\r\n    utimesSync(p, atime, mtime) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.utimesSync(p, atime, mtime);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.utimesSync(subPath, atime, mtime);\r\n        });\r\n    }\r\n    async mkdirPromise(p) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.mkdirPromise(p);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            return await zipFs.mkdirPromise(subPath);\r\n        });\r\n    }\r\n    mkdirSync(p) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.mkdirSync(p);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.mkdirSync(subPath);\r\n        });\r\n    }\r\n    async rmdirPromise(p) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.rmdirPromise(p);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            return await zipFs.rmdirPromise(subPath);\r\n        });\r\n    }\r\n    rmdirSync(p) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.rmdirSync(p);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.rmdirSync(subPath);\r\n        });\r\n    }\r\n    async symlinkPromise(target, p) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.symlinkPromise(target, p);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            return await zipFs.symlinkPromise(target, subPath);\r\n        });\r\n    }\r\n    symlinkSync(target, p) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.symlinkSync(target, p);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.symlinkSync(target, subPath);\r\n        });\r\n    }\r\n    async readFilePromise(p, encoding) {\r\n        return this.makeCallPromise(p, async () => {\r\n            // This weird switch is required to tell TypeScript that the signatures are proper (otherwise it thinks that only the generic one is covered)\r\n            switch (encoding) {\r\n                case `utf8`:\r\n                    return await this.baseFs.readFilePromise(p, encoding);\r\n                default:\r\n                    return await this.baseFs.readFilePromise(p, encoding);\r\n            }\r\n        }, async (zipFs, { subPath }) => {\r\n            return await zipFs.readFilePromise(subPath, encoding);\r\n        });\r\n    }\r\n    readFileSync(p, encoding) {\r\n        return this.makeCallSync(p, () => {\r\n            // This weird switch is required to tell TypeScript that the signatures are proper (otherwise it thinks that only the generic one is covered)\r\n            switch (encoding) {\r\n                case `utf8`:\r\n                    return this.baseFs.readFileSync(p, encoding);\r\n                default:\r\n                    return this.baseFs.readFileSync(p, encoding);\r\n            }\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.readFileSync(subPath, encoding);\r\n        });\r\n    }\r\n    async readdirPromise(p) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.readdirPromise(p);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            return await zipFs.readdirPromise(subPath);\r\n        }, {\r\n            requireSubpath: false,\r\n        });\r\n    }\r\n    readdirSync(p) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.readdirSync(p);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.readdirSync(subPath);\r\n        }, {\r\n            requireSubpath: false,\r\n        });\r\n    }\r\n    async readlinkPromise(p) {\r\n        return await this.makeCallPromise(p, async () => {\r\n            return await this.baseFs.readlinkPromise(p);\r\n        }, async (zipFs, { archivePath, subPath }) => {\r\n            return await zipFs.readlinkPromise(subPath);\r\n        });\r\n    }\r\n    readlinkSync(p) {\r\n        return this.makeCallSync(p, () => {\r\n            return this.baseFs.readlinkSync(p);\r\n        }, (zipFs, { subPath }) => {\r\n            return zipFs.readlinkSync(subPath);\r\n        });\r\n    }\r\n    async makeCallPromise(p, discard, accept, { requireSubpath = true } = {}) {\r\n        p = path_1.posix.normalize(path_1.posix.resolve(`/`, p));\r\n        const zipInfo = this.findZip(p);\r\n        if (!zipInfo)\r\n            return await discard();\r\n        if (requireSubpath && zipInfo.subPath === `/`)\r\n            return await discard();\r\n        return await this.getZipPromise(zipInfo.archivePath, async (zipFs) => await accept(zipFs, zipInfo));\r\n    }\r\n    makeCallSync(p, discard, accept, { requireSubpath = true } = {}) {\r\n        p = path_1.posix.normalize(path_1.posix.resolve(`/`, p));\r\n        const zipInfo = this.findZip(p);\r\n        if (!zipInfo)\r\n            return discard();\r\n        if (requireSubpath && zipInfo.subPath === `/`)\r\n            return discard();\r\n        return this.getZipSync(zipInfo.archivePath, zipFs => accept(zipFs, zipInfo));\r\n    }\r\n    findZip(p) {\r\n        if (this.filter && !this.filter.test(p))\r\n            return null;\r\n        const parts = p.split(/\\//g);\r\n        for (let t = 2; t <= parts.length; ++t) {\r\n            const archivePath = parts.slice(0, t).join(`/`);\r\n            if (this.notZip.has(archivePath))\r\n                continue;\r\n            if (this.isZip.has(archivePath))\r\n                return { archivePath, subPath: path_1.posix.resolve(`/`, parts.slice(t).join(`/`)) };\r\n            let realArchivePath = archivePath;\r\n            let stat;\r\n            while (true) {\r\n                try {\r\n                    stat = this.baseFs.lstatSync(realArchivePath);\r\n                }\r\n                catch (error) {\r\n                    return null;\r\n                }\r\n                if (stat.isSymbolicLink()) {\r\n                    realArchivePath = path_1.posix.resolve(path_1.posix.dirname(realArchivePath), this.baseFs.readlinkSync(realArchivePath));\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            const isZip = stat.isFile() && path_1.posix.extname(realArchivePath) === `.zip`;\r\n            if (isZip) {\r\n                this.isZip.add(archivePath);\r\n                return { archivePath, subPath: path_1.posix.resolve(`/`, parts.slice(t).join(`/`)) };\r\n            }\r\n            else {\r\n                this.notZip.add(archivePath);\r\n                if (stat.isFile()) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    async getZipPromise(p, accept) {\r\n        if (this.zipInstances) {\r\n            let zipFs = this.zipInstances.get(p);\r\n            if (!zipFs)\r\n                this.zipInstances.set(p, zipFs = new ZipFS_1.ZipFS(p, { baseFs: this.baseFs, stats: await this.baseFs.statPromise(p) }));\r\n            return await accept(zipFs);\r\n        }\r\n        else {\r\n            const zipFs = new ZipFS_1.ZipFS(p, { baseFs: this.baseFs, stats: await this.baseFs.statPromise(p) });\r\n            try {\r\n                return await accept(zipFs);\r\n            }\r\n            finally {\r\n                zipFs.saveAndClose();\r\n            }\r\n        }\r\n    }\r\n    getZipSync(p, accept) {\r\n        if (this.zipInstances) {\r\n            let zipFs = this.zipInstances.get(p);\r\n            if (!zipFs)\r\n                this.zipInstances.set(p, zipFs = new ZipFS_1.ZipFS(p, { baseFs: this.baseFs }));\r\n            return accept(zipFs);\r\n        }\r\n        else {\r\n            const zipFs = new ZipFS_1.ZipFS(p, { baseFs: this.baseFs });\r\n            try {\r\n                return accept(zipFs);\r\n            }\r\n            finally {\r\n                zipFs.saveAndClose();\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.ZipOpenFS = ZipOpenFS;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"module\");\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"string_decoder\");\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst fslib_1 = __webpack_require__(1);\r\nconst fs_1 = __importDefault(__webpack_require__(3));\r\nconst module_1 = __importDefault(__webpack_require__(18));\r\nconst path_1 = __importDefault(__webpack_require__(4));\r\nconst internalTools_1 = __webpack_require__(21);\r\nfunction applyPatch(pnpapi, opts) {\r\n    // @ts-ignore\r\n    const builtinModules = new Set(module_1.default.builtinModules || Object.keys(process.binding('natives')));\r\n    // The callback function gets called to wrap the return value of the module names matching the regexp\r\n    const patchedModules = [];\r\n    if (opts.compatibilityMode) {\r\n        // Modern versions of `resolve` support a specific entry point that custom resolvers can use\r\n        // to inject a specific resolution logic without having to patch the whole package.\r\n        //\r\n        // Cf: https://github.com/browserify/resolve/pull/174\r\n        patchedModules.push([\r\n            /^\\.\\/normalize-options\\.js$/,\r\n            (issuer, normalizeOptions) => {\r\n                if (!issuer || issuer.name !== 'resolve')\r\n                    return normalizeOptions;\r\n                return (request, opts) => {\r\n                    opts = opts || {};\r\n                    if (opts.forceNodeResolution)\r\n                        return opts;\r\n                    opts.preserveSymlinks = true;\r\n                    opts.paths = function (request, basedir, getNodeModulesDir, opts) {\r\n                        // Extract the name of the package being requested (1=full name, 2=scope name, 3=local name)\r\n                        const parts = request.match(/^((?:(@[^\\/]+)\\/)?([^\\/]+))/);\r\n                        if (!parts)\r\n                            throw new Error(`Assertion failed: Expected the \"resolve\" package to call the \"paths\" callback with package names only (got \"${request}\")`);\r\n                        // make sure that basedir ends with a slash\r\n                        if (basedir.charAt(basedir.length - 1) !== '/')\r\n                            basedir = path_1.default.join(basedir, '/');\r\n                        // TODO Handle portable paths\r\n                        // This is guaranteed to return the path to the \"package.json\" file from the given package\r\n                        const manifestPath = pnpapi.resolveToUnqualified(`${parts[1]}/package.json`, basedir, {\r\n                            considerBuiltins: false,\r\n                        });\r\n                        if (manifestPath === null)\r\n                            throw new Error(`Assertion failed: The resolution thinks that \"${parts[1]}\" is a Node builtin`);\r\n                        // The first dirname strips the package.json, the second strips the local named folder\r\n                        let nodeModules = path_1.default.dirname(path_1.default.dirname(manifestPath));\r\n                        // Strips the scope named folder if needed\r\n                        if (parts[2])\r\n                            nodeModules = path_1.default.dirname(nodeModules);\r\n                        return [nodeModules];\r\n                    };\r\n                    return opts;\r\n                };\r\n            },\r\n        ]);\r\n    }\r\n    /**\r\n     * Used to disable the resolution hooks (for when we want to fallback to the previous resolution - we then need\r\n     * a way to \"reset\" the environment temporarily)\r\n     */\r\n    let enableNativeHooks = true;\r\n    // @ts-ignore\r\n    process.versions.pnp = String(pnpapi.VERSIONS.std);\r\n    // A small note: we don't replace the cache here (and instead use the native one). This is an effort to not\r\n    // break code similar to \"delete require.cache[require.resolve(FOO)]\", where FOO is a package located outside\r\n    // of the Yarn dependency tree. In this case, we defer the load to the native loader. If we were to replace the\r\n    // cache by our own, the native loader would populate its own cache, which wouldn't be exposed anymore, so the\r\n    // delete call would be broken.\r\n    const originalModuleLoad = module_1.default._load;\r\n    module_1.default._load = function (request, parent, isMain) {\r\n        if (!enableNativeHooks)\r\n            return originalModuleLoad.call(module_1.default, request, parent, isMain);\r\n        // Builtins are managed by the regular Node loader\r\n        if (builtinModules.has(request)) {\r\n            try {\r\n                enableNativeHooks = false;\r\n                return originalModuleLoad.call(module_1.default, request, parent, isMain);\r\n            }\r\n            finally {\r\n                enableNativeHooks = true;\r\n            }\r\n        }\r\n        // The 'pnpapi' name is reserved to return the PnP api currently in use by the program\r\n        if (request === `pnpapi`)\r\n            return pnpapi;\r\n        // Request `Module._resolveFilename` (ie. `resolveRequest`) to tell us which file we should load\r\n        const modulePath = module_1.default._resolveFilename(request, parent, isMain);\r\n        // Check if the module has already been created for the given file\r\n        const cacheEntry = module_1.default._cache[modulePath];\r\n        if (cacheEntry)\r\n            return cacheEntry.exports;\r\n        // Create a new module and store it into the cache\r\n        // @ts-ignore\r\n        const module = new module_1.default(modulePath, parent);\r\n        module_1.default._cache[modulePath] = module;\r\n        // The main module is exposed as global variable\r\n        if (isMain) {\r\n            // @ts-ignore\r\n            process.mainModule = module;\r\n            module.id = '.';\r\n        }\r\n        // Try to load the module, and remove it from the cache if it fails\r\n        let hasThrown = true;\r\n        try {\r\n            module.load(modulePath);\r\n            hasThrown = false;\r\n        }\r\n        finally {\r\n            if (hasThrown) {\r\n                delete module_1.default._cache[modulePath];\r\n            }\r\n        }\r\n        // Some modules might have to be patched for compatibility purposes\r\n        for (const [filter, patchFn] of patchedModules) {\r\n            if (filter.test(request)) {\r\n                const issuer = parent && parent.filename ? pnpapi.findPackageLocator(parent.filename) : null;\r\n                module.exports = patchFn(issuer, module.exports);\r\n            }\r\n        }\r\n        return module.exports;\r\n    };\r\n    const originalModuleResolveFilename = module_1.default._resolveFilename;\r\n    module_1.default._resolveFilename = function (request, parent, isMain, options) {\r\n        if (request === `pnpapi`)\r\n            return request;\r\n        if (!enableNativeHooks)\r\n            return originalModuleResolveFilename.call(module_1.default, request, parent, isMain, options);\r\n        if (options && options.plugnplay === false) {\r\n            try {\r\n                enableNativeHooks = false;\r\n                return originalModuleResolveFilename.call(module_1.default, request, parent, isMain, options);\r\n            }\r\n            finally {\r\n                enableNativeHooks = true;\r\n            }\r\n        }\r\n        let issuers;\r\n        if (options) {\r\n            const optionNames = new Set(Object.keys(options));\r\n            optionNames.delete(`paths`);\r\n            optionNames.delete(`plugnplay`);\r\n            if (optionNames.size > 0) {\r\n                throw internalTools_1.makeError(`UNSUPPORTED`, `Some options passed to require() aren't supported by PnP yet (${Array.from(optionNames).join(', ')})`);\r\n            }\r\n            if (options.paths) {\r\n                issuers = options.paths.map((entry) => {\r\n                    return `${path_1.default.normalize(entry)}/`;\r\n                });\r\n            }\r\n        }\r\n        if (!issuers) {\r\n            const issuerModule = internalTools_1.getIssuerModule(parent);\r\n            const issuer = issuerModule ? issuerModule.filename : `${fslib_1.NodeFS.toPortablePath(process.cwd())}/`;\r\n            issuers = [issuer];\r\n        }\r\n        // When Node is called, it tries to require the main script but can't\r\n        // because PnP already patched 'Module'\r\n        // We test it for an absolute Windows path and convert it to a portable path.\r\n        // We should probably always call toPortablePath and check for this directly\r\n        if (/^[A-Z]:.*/.test(request))\r\n            request = fslib_1.NodeFS.toPortablePath(request);\r\n        let firstError;\r\n        for (const issuer of issuers) {\r\n            let resolution;\r\n            try {\r\n                resolution = pnpapi.resolveRequest(request, issuer);\r\n            }\r\n            catch (error) {\r\n                firstError = firstError || error;\r\n                continue;\r\n            }\r\n            return resolution !== null ? resolution : request;\r\n        }\r\n        throw firstError;\r\n    };\r\n    const originalFindPath = module_1.default._findPath;\r\n    module_1.default._findPath = function (request, paths, isMain) {\r\n        if (request === `pnpapi`)\r\n            return false;\r\n        if (!enableNativeHooks)\r\n            return originalFindPath.call(module_1.default, request, paths, isMain);\r\n        for (const path of paths) {\r\n            let resolution;\r\n            try {\r\n                // TODO Convert path to portable path?\r\n                resolution = pnpapi.resolveRequest(request, path);\r\n            }\r\n            catch (error) {\r\n                continue;\r\n            }\r\n            if (resolution) {\r\n                return resolution;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    fslib_1.patchFs(fs_1.default, new fslib_1.PosixFS(opts.fakeFs));\r\n}\r\nexports.applyPatch = applyPatch;\r\n;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Simple helper function that assign an error code to an error, so that it can more easily be caught and used\r\n * by third-parties.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction makeError(code, message, data = {}) {\r\n    const error = new Error(message);\r\n    return Object.assign(error, { code, data });\r\n}\r\nexports.makeError = makeError;\r\n/**\r\n * Returns the module that should be used to resolve require calls. It's usually the direct parent, except if we're\r\n * inside an eval expression.\r\n */\r\nfunction getIssuerModule(parent) {\r\n    let issuer = parent;\r\n    while (issuer && (issuer.id === '[eval]' || issuer.id === '<repl>' || !issuer.filename))\r\n        issuer = issuer.parent;\r\n    return issuer;\r\n}\r\nexports.getIssuerModule = getIssuerModule;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst fslib_1 = __webpack_require__(1);\r\nconst path_1 = __webpack_require__(4);\r\nfunction hydrateRuntimeState(data, { basePath }) {\r\n    const portablePath = fslib_1.NodeFS.toPortablePath(basePath);\r\n    const ignorePattern = data.ignorePatternData\r\n        ? new RegExp(data.ignorePatternData)\r\n        : null;\r\n    const packageRegistry = new Map(data.packageRegistryData.map(([packageName, packageStoreData]) => {\r\n        return [packageName, new Map(packageStoreData.map(([packageReference, packageInformationData]) => {\r\n                return [packageReference, {\r\n                        packageLocation: path_1.posix.resolve(portablePath, packageInformationData.packageLocation),\r\n                        packageDependencies: new Map(packageInformationData.packageDependencies),\r\n                    }];\r\n            }))];\r\n    }));\r\n    const packageLocatorsByLocations = new Map(data.locationBlacklistData.map(location => {\r\n        return [location, null];\r\n    }));\r\n    for (const [packageName, storeData] of data.packageRegistryData) {\r\n        for (const [packageReference, packageInformationData] of storeData) {\r\n            if ((packageName === null) !== (packageReference === null))\r\n                throw new Error(`Assertion failed: The name and reference should be null, or neither should`);\r\n            // @ts-ignore: TypeScript isn't smart enough to understand the type assertion\r\n            const packageLocator = { name: packageName, reference: packageReference };\r\n            packageLocatorsByLocations.set(packageInformationData.packageLocation, packageLocator);\r\n        }\r\n    }\r\n    const packageLocationLengths = data.locationLengthData;\r\n    return {\r\n        basePath: portablePath,\r\n        ignorePattern,\r\n        packageRegistry,\r\n        packageLocatorsByLocations,\r\n        packageLocationLengths,\r\n    };\r\n}\r\nexports.hydrateRuntimeState = hydrateRuntimeState;\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst fslib_1 = __webpack_require__(1);\r\nconst module_1 = __importDefault(__webpack_require__(18));\r\nconst path_1 = __webpack_require__(4);\r\nconst internalTools_1 = __webpack_require__(21);\r\nfunction makeApi(runtimeState, opts) {\r\n    // @ts-ignore\r\n    const builtinModules = new Set(module_1.default.builtinModules || Object.keys(process.binding('natives')));\r\n    // Splits a require request into its components, or return null if the request is a file path\r\n    const pathRegExp = /^(?![a-zA-Z]:[\\\\\\/]|\\\\\\\\|\\.{0,2}(?:\\/|$))((?:@[^\\/]+\\/)?[^\\/]+)\\/?(.*|)$/;\r\n    // Matches if the path starts with a valid path qualifier (./, ../, /)\r\n    // eslint-disable-next-line no-unused-vars\r\n    const isStrictRegExp = /^\\.{0,2}\\//;\r\n    // Matches if the path must point to a directory (ie ends with /)\r\n    const isDirRegExp = /\\/$/;\r\n    // Matches backslashes of Windows paths\r\n    const backwardSlashRegExp = /\\\\/g;\r\n    // We only instantiate one of those so that we can use strict-equal comparisons\r\n    const topLevelLocator = { name: null, reference: null };\r\n    // Used for compatibility purposes - cf setupCompatibilityLayer\r\n    const fallbackLocators = [topLevelLocator];\r\n    if (opts.compatibilityMode) {\r\n        // ESLint currently doesn't have any portable way for shared configs to\r\n        // specify their own plugins that should be used (cf issue #10125). This\r\n        // will likely get fixed at some point but it'll take time, so in the\r\n        // meantime we'll just add additional fallback entries for common shared\r\n        // configs.\r\n        // Similarly, Gatsby generates files within the `public` folder located\r\n        // within the project, but doesn't pre-resolve the `require` calls to use\r\n        // its own dependencies. Meaning that when PnP see a file from the `public`\r\n        // folder making a require, it thinks that your project forgot to list one\r\n        // of your dependencies.\r\n        for (const name of [`react-scripts`, `gatsby`]) {\r\n            const packageStore = runtimeState.packageRegistry.get(name);\r\n            if (packageStore) {\r\n                for (const reference of packageStore.keys()) {\r\n                    if (reference === null) {\r\n                        throw new Error(`Assertion failed: This reference shouldn't be null`);\r\n                    }\r\n                    else {\r\n                        fallbackLocators.push({ name, reference });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * The setup code will be injected here. The tables listed below are guaranteed to be filled after the call to\r\n     * the $$DYNAMICALLY_GENERATED_CODE function.\r\n     */\r\n    const { ignorePattern, packageRegistry, packageLocatorsByLocations, packageLocationLengths, } = runtimeState;\r\n    /**\r\n     * Allows to print useful logs just be setting a value in the environment\r\n     */\r\n    function makeLogEntry(name, args) {\r\n        return {\r\n            fn: name,\r\n            args: args,\r\n            error: null,\r\n            result: null,\r\n        };\r\n    }\r\n    function maybeLog(name, fn) {\r\n        if (opts.allowDebug === false)\r\n            return fn;\r\n        const level = Number(process.env.PNP_DEBUG_LEVEL);\r\n        if (Number.isFinite(level)) {\r\n            if (level >= 2) {\r\n                return (...args) => {\r\n                    const logEntry = makeLogEntry(name, args);\r\n                    try {\r\n                        return logEntry.result = fn(...args);\r\n                    }\r\n                    catch (error) {\r\n                        throw logEntry.error = error;\r\n                    }\r\n                    finally {\r\n                        console.error(logEntry);\r\n                    }\r\n                };\r\n            }\r\n            else if (level >= 1) {\r\n                return (...args) => {\r\n                    try {\r\n                        return fn(...args);\r\n                    }\r\n                    catch (error) {\r\n                        const logEntry = makeLogEntry(name, args);\r\n                        logEntry.error = error;\r\n                        console.error(logEntry);\r\n                        throw error;\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        return fn;\r\n    }\r\n    /**\r\n     * Returns information about a package in a safe way (will throw if they cannot be retrieved)\r\n     */\r\n    function getPackageInformationSafe(packageLocator) {\r\n        const packageInformation = getPackageInformation(packageLocator);\r\n        if (!packageInformation) {\r\n            throw internalTools_1.makeError(`INTERNAL`, `Couldn't find a matching entry in the dependency tree for the specified parent (this is probably an internal error)`);\r\n        }\r\n        return packageInformation;\r\n    }\r\n    /**\r\n     * Implements the node resolution for folder access and extension selection\r\n     */\r\n    function applyNodeExtensionResolution(unqualifiedPath, candidates, { extensions }) {\r\n        // We use this \"infinite while\" so that we can restart the process as long as we hit package folders\r\n        while (true) {\r\n            let stat;\r\n            try {\r\n                candidates.push(unqualifiedPath);\r\n                stat = opts.fakeFs.statSync(unqualifiedPath);\r\n            }\r\n            catch (error) { }\r\n            // If the file exists and is a file, we can stop right there\r\n            if (stat && !stat.isDirectory()) {\r\n                // If the very last component of the resolved path is a symlink to a file, we then resolve it to a file. We only\r\n                // do this first the last component, and not the rest of the path! This allows us to support the case of bin\r\n                // symlinks, where a symlink in \"/xyz/pkg-name/.bin/bin-name\" will point somewhere else (like \"/xyz/pkg-name/index.js\").\r\n                // In such a case, we want relative requires to be resolved relative to \"/xyz/pkg-name/\" rather than \"/xyz/pkg-name/.bin/\".\r\n                //\r\n                // Also note that the reason we must use readlink on the last component (instead of realpath on the whole path)\r\n                // is that we must preserve the other symlinks, in particular those used by pnp to deambiguate packages using\r\n                // peer dependencies. For example, \"/xyz/.pnp/local/pnp-01234569/.bin/bin-name\" should see its relative requires\r\n                // be resolved relative to \"/xyz/.pnp/local/pnp-0123456789/\" rather than \"/xyz/pkg-with-peers/\", because otherwise\r\n                // we would lose the information that would tell us what are the dependencies of pkg-with-peers relative to its\r\n                // ancestors.\r\n                if (opts.fakeFs.lstatSync(unqualifiedPath).isSymbolicLink())\r\n                    unqualifiedPath = path_1.posix.normalize(path_1.posix.resolve(path_1.posix.dirname(unqualifiedPath), opts.fakeFs.readlinkSync(unqualifiedPath)));\r\n                return unqualifiedPath;\r\n            }\r\n            // If the file is a directory, we must check if it contains a package.json with a \"main\" entry\r\n            if (stat && stat.isDirectory()) {\r\n                let pkgJson;\r\n                try {\r\n                    pkgJson = JSON.parse(opts.fakeFs.readFileSync(`${unqualifiedPath}/package.json`, `utf8`));\r\n                }\r\n                catch (error) { }\r\n                let nextUnqualifiedPath;\r\n                if (pkgJson && pkgJson.main)\r\n                    nextUnqualifiedPath = path_1.posix.resolve(unqualifiedPath, pkgJson.main);\r\n                // If the \"main\" field changed the path, we start again from this new location\r\n                if (nextUnqualifiedPath && nextUnqualifiedPath !== unqualifiedPath) {\r\n                    const resolution = applyNodeExtensionResolution(nextUnqualifiedPath, candidates, { extensions });\r\n                    if (resolution !== null) {\r\n                        return resolution;\r\n                    }\r\n                }\r\n            }\r\n            // Otherwise we check if we find a file that match one of the supported extensions\r\n            const qualifiedPath = extensions\r\n                .map(extension => {\r\n                return `${unqualifiedPath}${extension}`;\r\n            })\r\n                .find(candidateFile => {\r\n                candidates.push(candidateFile);\r\n                return opts.fakeFs.existsSync(candidateFile);\r\n            });\r\n            if (qualifiedPath)\r\n                return qualifiedPath;\r\n            // Otherwise, we check if the path is a folder - in such a case, we try to use its index\r\n            if (stat && stat.isDirectory()) {\r\n                const indexPath = extensions\r\n                    .map(extension => {\r\n                    return `${unqualifiedPath}/index${extension}`;\r\n                })\r\n                    .find(candidateFile => {\r\n                    candidates.push(candidateFile);\r\n                    return opts.fakeFs.existsSync(candidateFile);\r\n                });\r\n                if (indexPath) {\r\n                    return indexPath;\r\n                }\r\n            }\r\n            // Otherwise there's nothing else we can do :(\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * This function creates fake modules that can be used with the _resolveFilename function.\r\n     * Ideally it would be nice to be able to avoid this, since it causes useless allocations\r\n     * and cannot be cached efficiently (we recompute the nodeModulePaths every time).\r\n     *\r\n     * Fortunately, this should only affect the fallback, and there hopefully shouldn't have a\r\n     * lot of them.\r\n     */\r\n    function makeFakeModule(path) {\r\n        // @ts-ignore\r\n        const fakeModule = new module_1.default(path, null);\r\n        fakeModule.filename = path;\r\n        fakeModule.paths = module_1.default._nodeModulePaths(path);\r\n        return fakeModule;\r\n    }\r\n    /**\r\n     * Normalize path to posix format.\r\n     */\r\n    function normalizePath(p) {\r\n        p = path_1.posix.normalize(p);\r\n        if (process.platform === 'win32')\r\n            p = p.replace(backwardSlashRegExp, '/');\r\n        return p;\r\n    }\r\n    /**\r\n     * Forward the resolution to the next resolver (usually the native one)\r\n     */\r\n    function callNativeResolution(request, issuer) {\r\n        if (issuer.endsWith('/'))\r\n            issuer += 'internal.js';\r\n        request = fslib_1.NodeFS.fromPortablePath(request);\r\n        issuer = fslib_1.NodeFS.fromPortablePath(issuer);\r\n        // Since we would need to create a fake module anyway (to call _resolveLookupPath that\r\n        // would give us the paths to give to _resolveFilename), we can as well not use\r\n        // the {paths} option at all, since it internally makes _resolveFilename create another\r\n        // fake module anyway.\r\n        return module_1.default._resolveFilename(request, makeFakeModule(issuer), false, { plugnplay: false });\r\n    }\r\n    /**\r\n     * This key indicates which version of the standard is implemented by this resolver. The `std` key is the\r\n     * Plug'n'Play standard, and any other key are third-party extensions. Third-party extensions are not allowed\r\n     * to override the standard, and can only offer new methods.\r\n     *\r\n     * If an new version of the Plug'n'Play standard is released and some extensions conflict with newly added\r\n     * functions, they'll just have to fix the conflicts and bump their own version number.\r\n     */\r\n    const VERSIONS = { std: 1 };\r\n    /**\r\n     * We export a special symbol for easy access to the top level locator.\r\n     */\r\n    const topLevel = topLevelLocator;\r\n    /**\r\n     * Gets the package information for a given locator. Returns null if they cannot be retrieved.\r\n     */\r\n    function getPackageInformation({ name, reference }) {\r\n        const packageInformationStore = packageRegistry.get(name);\r\n        if (!packageInformationStore)\r\n            return null;\r\n        const packageInformation = packageInformationStore.get(reference);\r\n        if (!packageInformation)\r\n            return null;\r\n        return packageInformation;\r\n    }\r\n    /**\r\n     * Finds the package locator that owns the specified path. If none is found, returns null instead.\r\n     */\r\n    function findPackageLocator(location) {\r\n        let relativeLocation = normalizePath(path_1.posix.relative(runtimeState.basePath, location));\r\n        if (!relativeLocation.match(isStrictRegExp))\r\n            relativeLocation = `./${relativeLocation}`;\r\n        if (location.match(isDirRegExp) && !relativeLocation.endsWith(`/`))\r\n            relativeLocation = `${relativeLocation}/`;\r\n        let from = 0;\r\n        // If someone wants to use a binary search to go from O(n) to O(log n), be my guest\r\n        while (from < packageLocationLengths.length && packageLocationLengths[from] > relativeLocation.length)\r\n            from += 1;\r\n        for (let t = from; t < packageLocationLengths.length; ++t) {\r\n            const locator = packageLocatorsByLocations.get(relativeLocation.substr(0, packageLocationLengths[t]));\r\n            if (!locator)\r\n                continue;\r\n            // Ensures that the returned locator isn't a blacklisted one.\r\n            //\r\n            // Blacklisted packages are packages that cannot be used because their dependencies cannot be deduced. This only\r\n            // happens with peer dependencies, which effectively have different sets of dependencies depending on their\r\n            // parents.\r\n            //\r\n            // In order to deambiguate those different sets of dependencies, the Yarn implementation of PnP will generate a\r\n            // symlink for each combination of <package name>/<package version>/<dependent package> it will find, and will\r\n            // blacklist the target of those symlinks. By doing this, we ensure that files loaded through a specific path\r\n            // will always have the same set of dependencies, provided the symlinks are correctly preserved.\r\n            //\r\n            // Unfortunately, some tools do not preserve them, and when it happens PnP isn't able anymore to deduce the set of\r\n            // dependencies based on the path of the file that makes the require calls. But since we've blacklisted those\r\n            // paths, we're able to print a more helpful error message that points out that a third-party package is doing\r\n            // something incompatible!\r\n            if (locator === null) {\r\n                throw internalTools_1.makeError(`BLACKLISTED`, [\r\n                    `A package has been resolved through a blacklisted path - this is usually caused by one of your tool`,\r\n                    `calling \"realpath\" on the return value of \"require.resolve\". Since the returned values use symlinks to`,\r\n                    `disambiguate peer dependencies, they must be passed untransformed to \"require\".`,\r\n                ].join(` `));\r\n            }\r\n            return locator;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Transforms a request (what's typically passed as argument to the require function) into an unqualified path.\r\n     * This path is called \"unqualified\" because it only changes the package name to the package location on the disk,\r\n     * which means that the end result still cannot be directly accessed (for example, it doesn't try to resolve the\r\n     * file extension, or to resolve directories to their \"index.js\" content). Use the \"resolveUnqualified\" function\r\n     * to convert them to fully-qualified paths, or just use \"resolveRequest\" that do both operations in one go.\r\n     *\r\n     * Note that it is extremely important that the `issuer` path ends with a forward slash if the issuer is to be\r\n     * treated as a folder (ie. \"/tmp/foo/\" rather than \"/tmp/foo\" if \"foo\" is a directory). Otherwise relative\r\n     * imports won't be computed correctly (they'll get resolved relative to \"/tmp/\" instead of \"/tmp/foo/\").\r\n     */\r\n    function resolveToUnqualified(request, issuer, { considerBuiltins = true } = {}) {\r\n        // The 'pnpapi' request is reserved and will always return the path to the PnP file, from everywhere\r\n        if (request === `pnpapi`)\r\n            return opts.pnpapiResolution;\r\n        // Bailout if the request is a native module\r\n        if (considerBuiltins && builtinModules.has(request))\r\n            return null;\r\n        // We allow disabling the pnp resolution for some subpaths. This is because some projects, often legacy,\r\n        // contain multiple levels of dependencies (ie. a yarn.lock inside a subfolder of a yarn.lock). This is\r\n        // typically solved using workspaces, but not all of them have been converted already.\r\n        if (ignorePattern && issuer && ignorePattern.test(normalizePath(issuer))) {\r\n            const result = callNativeResolution(request, issuer);\r\n            if (result === false) {\r\n                throw internalTools_1.makeError(`BUILTIN_NODE_RESOLUTION_FAIL`, `The builtin node resolution algorithm was unable to resolve the requested module (it didn't go through the pnp resolver because the issuer was explicitely ignored by the regexp)\\n\\nRequire request: \"${request}\"\\nRequired by: ${issuer}\\n`, { request, issuer });\r\n            }\r\n            return result;\r\n        }\r\n        let unqualifiedPath;\r\n        // If the request is a relative or absolute path, we just return it normalized\r\n        const dependencyNameMatch = request.match(pathRegExp);\r\n        if (!dependencyNameMatch) {\r\n            if (path_1.posix.isAbsolute(request)) {\r\n                unqualifiedPath = path_1.posix.normalize(request);\r\n            }\r\n            else {\r\n                if (!issuer) {\r\n                    throw internalTools_1.makeError(`API_ERROR`, `The resolveToUnqualified function must be called with a valid issuer when the path isn't a builtin nor absolute`, { request, issuer });\r\n                }\r\n                if (issuer.match(isDirRegExp)) {\r\n                    unqualifiedPath = path_1.posix.normalize(path_1.posix.resolve(issuer, request));\r\n                }\r\n                else {\r\n                    unqualifiedPath = path_1.posix.normalize(path_1.posix.resolve(path_1.posix.dirname(issuer), request));\r\n                }\r\n            }\r\n        }\r\n        // Things are more hairy if it's a package require - we then need to figure out which package is needed, and in\r\n        // particular the exact version for the given location on the dependency tree\r\n        else {\r\n            if (!issuer) {\r\n                throw internalTools_1.makeError(`API_ERROR`, `The resolveToUnqualified function must be called with a valid issuer when the path isn't a builtin nor absolute`, { request, issuer });\r\n            }\r\n            const [, dependencyName, subPath] = dependencyNameMatch;\r\n            const issuerLocator = findPackageLocator(issuer);\r\n            // If the issuer file doesn't seem to be owned by a package managed through pnp, then we resort to using the next\r\n            // resolution algorithm in the chain, usually the native Node resolution one\r\n            if (!issuerLocator) {\r\n                const result = callNativeResolution(request, issuer);\r\n                if (result === false) {\r\n                    throw internalTools_1.makeError(`BUILTIN_NODE_RESOLUTION_FAIL`, `The builtin node resolution algorithm was unable to resolve the requested module (it didn't go through the pnp resolver because the issuer doesn't seem to be part of the Yarn-managed dependency tree)\\n\\nRequire path: \"${request}\"\\nRequired by: ${issuer}\\n`, { request, issuer });\r\n                }\r\n                return result;\r\n            }\r\n            const issuerInformation = getPackageInformationSafe(issuerLocator);\r\n            // We obtain the dependency reference in regard to the package that request it\r\n            let dependencyReference = issuerInformation.packageDependencies.get(dependencyName);\r\n            // If we can't find it, we check if we can potentially load it from the packages that have been defined as potential fallbacks.\r\n            // It's a bit of a hack, but it improves compatibility with the existing Node ecosystem. Hopefully we should eventually be able\r\n            // to kill this logic and become stricter once pnp gets enough traction and the affected packages fix themselves.\r\n            if (issuerLocator.name !== null) {\r\n                for (let t = 0, T = fallbackLocators.length; dependencyReference === undefined && t < T; ++t) {\r\n                    const fallbackInformation = getPackageInformationSafe(fallbackLocators[t]);\r\n                    dependencyReference = fallbackInformation.packageDependencies.get(dependencyName);\r\n                }\r\n            }\r\n            // If we can't find the path, and if the package making the request is the top-level, we can offer nicer error messages\r\n            if (dependencyReference === null) {\r\n                if (issuerLocator.name === null) {\r\n                    throw internalTools_1.makeError(`MISSING_PEER_DEPENDENCY`, `Something that got detected as your top-level application (because it doesn't seem to belong to any package) tried to access a peer dependency; this isn't allowed as the peer dependency cannot be provided by any parent package\\n\\nRequired package: ${dependencyName} (via \"${request}\")\\nRequired by: ${issuer}\\n`, { request, issuer, dependencyName });\r\n                }\r\n                else {\r\n                    throw internalTools_1.makeError(`MISSING_PEER_DEPENDENCY`, `A package is trying to access a peer dependency that should be provided by its direct ancestor but isn't\\n\\nRequired package: ${dependencyName} (via \"${request}\")\\nRequired by: ${issuerLocator.name}@${issuerLocator.reference} (via ${issuer})\\n`, { request, issuer, issuerLocator: Object.assign({}, issuerLocator), dependencyName });\r\n                }\r\n            }\r\n            else if (dependencyReference === undefined) {\r\n                if (issuerLocator.name === null) {\r\n                    throw internalTools_1.makeError(`UNDECLARED_DEPENDENCY`, `Something that got detected as your top-level application (because it doesn't seem to belong to any package) tried to access a package that is not declared in your dependencies\\n\\nRequired package: ${dependencyName} (via \"${request}\")\\nRequired by: ${issuer}\\n`, { request, issuer, dependencyName });\r\n                }\r\n                else {\r\n                    const candidates = Array.from(issuerInformation.packageDependencies.keys());\r\n                    throw internalTools_1.makeError(`UNDECLARED_DEPENDENCY`, `A package is trying to access another package without the second one being listed as a dependency of the first one\\n\\nRequired package: ${dependencyName} (via \"${request}\")\\nRequired by: ${issuerLocator.name}@${issuerLocator.reference} (via ${issuer})\\n`, { request, issuer, issuerLocator: Object.assign({}, issuerLocator), dependencyName, candidates });\r\n                }\r\n            }\r\n            // We need to check that the package exists on the filesystem, because it might not have been installed\r\n            const dependencyLocator = Array.isArray(dependencyReference)\r\n                ? { name: dependencyReference[0], reference: dependencyReference[1] }\r\n                : { name: dependencyName, reference: dependencyReference };\r\n            const dependencyInformation = getPackageInformationSafe(dependencyLocator);\r\n            if (!dependencyInformation.packageLocation) {\r\n                throw internalTools_1.makeError(`MISSING_DEPENDENCY`, `A dependency seems valid but didn't get installed for some reason. This might be caused by a partial install, such as dev vs prod.\\n\\nRequired package: ${dependencyLocator.name}@${dependencyLocator.reference} (via \"${request}\")\\nRequired by: ${issuerLocator.name}@${issuerLocator.reference} (via ${issuer})\\n`, { request, issuer, dependencyLocator: Object.assign({}, dependencyLocator) });\r\n            }\r\n            // Now that we know which package we should resolve to, we only have to find out the file location\r\n            const dependencyLocation = path_1.posix.resolve(runtimeState.basePath, dependencyInformation.packageLocation);\r\n            if (subPath) {\r\n                unqualifiedPath = path_1.posix.resolve(dependencyLocation, subPath);\r\n            }\r\n            else {\r\n                unqualifiedPath = dependencyLocation;\r\n            }\r\n        }\r\n        return path_1.posix.normalize(unqualifiedPath);\r\n    }\r\n    ;\r\n    /**\r\n     * Transforms an unqualified path into a qualified path by using the Node resolution algorithm (which automatically\r\n     * appends \".js\" / \".json\", and transforms directory accesses into \"index.js\").\r\n     */\r\n    function resolveUnqualified(unqualifiedPath, { extensions = Object.keys(module_1.default._extensions) } = {}) {\r\n        const candidates = [];\r\n        const qualifiedPath = applyNodeExtensionResolution(unqualifiedPath, candidates, { extensions });\r\n        if (qualifiedPath) {\r\n            return path_1.posix.normalize(qualifiedPath);\r\n        }\r\n        else {\r\n            throw internalTools_1.makeError(`QUALIFIED_PATH_RESOLUTION_FAILED`, `Couldn't find a suitable Node resolution for the specified unqualified path\\n\\nSource path: ${unqualifiedPath}\\n${candidates.map(candidate => `Rejected resolution: ${candidate}\\n`).join(``)}`, { unqualifiedPath });\r\n        }\r\n    }\r\n    ;\r\n    /**\r\n     * Transforms a request into a fully qualified path.\r\n     *\r\n     * Note that it is extremely important that the `issuer` path ends with a forward slash if the issuer is to be\r\n     * treated as a folder (ie. \"/tmp/foo/\" rather than \"/tmp/foo\" if \"foo\" is a directory). Otherwise relative\r\n     * imports won't be computed correctly (they'll get resolved relative to \"/tmp/\" instead of \"/tmp/foo/\").\r\n     */\r\n    function resolveRequest(request, issuer, { considerBuiltins, extensions } = {}) {\r\n        let unqualifiedPath = resolveToUnqualified(request, issuer, { considerBuiltins });\r\n        if (unqualifiedPath === null)\r\n            return null;\r\n        try {\r\n            return resolveUnqualified(unqualifiedPath, { extensions });\r\n        }\r\n        catch (resolutionError) {\r\n            if (resolutionError.code === 'QUALIFIED_PATH_RESOLUTION_FAILED')\r\n                Object.assign(resolutionError.data, { request, issuer });\r\n            throw resolutionError;\r\n        }\r\n    }\r\n    ;\r\n    return {\r\n        VERSIONS,\r\n        topLevel,\r\n        getPackageInformation: (locator) => {\r\n            const info = getPackageInformation(locator);\r\n            if (info === null)\r\n                return null;\r\n            const packageLocation = fslib_1.NodeFS.fromPortablePath(info.packageLocation);\r\n            const nativeInfo = Object.assign({}, info, { packageLocation });\r\n            return nativeInfo;\r\n        },\r\n        findPackageLocator: (path) => {\r\n            path = fslib_1.NodeFS.toPortablePath(path);\r\n            return findPackageLocator(path);\r\n        },\r\n        resolveToUnqualified: maybeLog(`resolveToUnqualified`, (request, issuer, opts) => {\r\n            request = fslib_1.NodeFS.toPortablePath(request);\r\n            if (issuer !== null)\r\n                issuer = fslib_1.NodeFS.toPortablePath(issuer);\r\n            const resolution = resolveToUnqualified(request, issuer, opts);\r\n            if (resolution === null)\r\n                return null;\r\n            return fslib_1.NodeFS.fromPortablePath(resolution);\r\n        }),\r\n        resolveUnqualified: maybeLog(`resolveUnqualified`, (unqualifiedPath, opts) => {\r\n            unqualifiedPath = fslib_1.NodeFS.fromPortablePath(unqualifiedPath);\r\n            return fslib_1.NodeFS.fromPortablePath(resolveUnqualified(unqualifiedPath, opts));\r\n        }),\r\n        resolveRequest: maybeLog(`resolveRequest`, (request, issuer, opts) => {\r\n            request = fslib_1.NodeFS.toPortablePath(request);\r\n            if (issuer !== null)\r\n                issuer = fslib_1.NodeFS.toPortablePath(issuer);\r\n            const resolution = resolveRequest(request, issuer, opts);\r\n            if (resolution === null)\r\n                return null;\r\n            return fslib_1.NodeFS.fromPortablePath(resolution);\r\n        }),\r\n    };\r\n}\r\nexports.makeApi = makeApi;\r\n\n\n/***/ })\n/******/ ]);";
