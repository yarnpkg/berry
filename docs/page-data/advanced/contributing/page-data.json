{"componentChunkName":"component---src-templates-article-js","path":"/advanced/contributing","webpackCompilationHash":"be4c225e7996d60e7906","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"path":"/advanced/architecture","title":"Architecture"}}},{"node":{"frontmatter":{"path":"/advanced/contributing","title":"Contributing"}}},{"node":{"frontmatter":{"path":"/advanced/error-codes","title":"Error Codes"}}},{"node":{"frontmatter":{"path":"/advanced/lexicon","title":"Lexicon"}}},{"node":{"frontmatter":{"path":"/advanced/migration","title":"Migration"}}},{"node":{"frontmatter":{"path":"/advanced/peer-dependencies","title":"Peer Dependencies"}}},{"node":{"frontmatter":{"path":"/advanced/plugin-tutorial","title":"Plugin Tutorial"}}},{"node":{"frontmatter":{"path":"/advanced/pnpapi","title":"PnP API"}}},{"node":{"frontmatter":{"path":"/advanced/pnpify","title":"PnPify"}}}]},"markdownRemark":{"html":"<p>Thanks for being here! Yarn gives a lot of importance to being a community project, and we rely on your help as much as you rely on ours. In order to help you help us we've invested in an infra and documentation that should make contributing to Yarn very easy. If you have any feedback on what we could improve, please open an issue to discuss it!</p>\n<h2 id=\"finding-work-to-do\"><a href=\"#finding-work-to-do\" aria-label=\"finding work to do permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Finding work to do</h2>\n<p>It might be difficult to know where to start on a fresh codebase. To help a bit with this, we try to mark various issues with tags meant to highlight issues that we think don't require as much context as others:</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/yarnpkg/berry/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22\">Good First Issue</a> are typically self-contained features of a limited scope that are a good way to get some insight as to how Yarn works under the hood.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/yarnpkg/berry/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22\">Help Wanted</a> are issues that don't require a lot of context but also have less impact than the ones who do, so no core maintainer has the bandwidth to work on them.</p>\n</li>\n</ul>\n<p>Finally, feel free to pop on our <a href=\"https://discordapp.com/invite/yarnpkg\">Discord channel</a> to ask for help and guidance. We're always happy to see new blood, and will help you our best to make your first open-source contribution a success!</p>\n<h2 id=\"building-the-bundle\"><a href=\"#building-the-bundle\" aria-label=\"building the bundle permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Building the bundle</h2>\n<p>The standard bundle is built using the following command from anywhere in the repository:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$&gt; yarn build:cli</code></pre></div>\n<p>Running this command will generate a file in <code class=\"language-text\">packages/berry-cli/bundles/berry.js</code>, and starting from now any Yarn command you'll run in this repository will always use your local build. In case it inadvertently becomes corrupted, just remove this file and run <code class=\"language-text\">build:cli</code> again to get a fresh one.</p>\n<h2 id=\"working-on-plugins\"><a href=\"#working-on-plugins\" aria-label=\"working on plugins permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Working on plugins</h2>\n<p>The standard bundle uses a predefined set of plugins defined in <a href=\"https://github.com/yarnpkg/berry/blob/master/packages/berry-cli/package.json#L43\"><code class=\"language-text\">packages/berry-cli/package.json</code></a>. If your PR aims to add a new plugin to the standard build you'll need to add it there (note that this decision should be left to the core maintainers - please don't modify this setting yourself).</p>\n<p>For development purposes, you can build your plugin as part of your own local bundle by using the <code class=\"language-text\">--plugin</code> option in the command line:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$&gt; yarn build:cli --plugin @berry/plugin-typescript</code></pre></div>\n<h2 id=\"testing-your-code\"><a href=\"#testing-your-code\" aria-label=\"testing your code permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Testing your code</h2>\n<p>We currently have two testsuites, built for different purposes. The first one are unit tests and can be triggered by running the following command from anywhere within the repository:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$&gt; yarn test:unit</code></pre></div>\n<p>While various subcomponents that have a strict JS interface contract are tested via unit tests (for example the portable shell library, or the various util libraries we ship), Yarn as a whole relies on integration tests. Being much closer from what our users experience, they give us a higher confidence when refactoring the application that everything will work according to plan. Those tests can be triggered by running the following command (again, from anywhere within the repository):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$&gt; yarn test:integration</code></pre></div>\n<p>In both cases the underlying framework we use is Jest, which means that you can filter the tests you want to run by using the <code class=\"language-text\">-t</code> flag (or simply the file path):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$&gt; yarn test:unit berry-shell\n$&gt; yarn test:integration -t &#39;it should correctly install a single dependency that contains no sub-dependencies&#39;</code></pre></div>\n<p>Should you need to write a test (and you will ðŸ˜‰), they are located in the following directories:</p>\n<ul>\n<li><strong>Unit tests:</strong> <a href=\"https://github.com/search?utf8=%E2%9C%93&#x26;q=repo%3Ayarnpkg%2Fberry+filename%3Atest.ts+language%3ATypeScript+language%3ATypeScript&#x26;type=Code&#x26;ref=advsearch&#x26;l=TypeScript&#x26;l=TypeScript\"><code class=\"language-text\">packages/*/tests</code></a></li>\n<li><strong>Integration tests:</strong> <a href=\"https://github.com/yarnpkg/berry/tree/master/packages/acceptance-tests/pkg-tests-specs/sources\"><code class=\"language-text\">packages/acceptance-tests/pkg-test-specs/sources</code></a></li>\n</ul>\n<p>Don't forget that your PR will require all the tests to pass before being merged!</p>\n<h2 id=\"formatting-your-code\"><a href=\"#formatting-your-code\" aria-label=\"formatting your code permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Formatting your code</h2>\n<p>Before submitting your code for review, please make sure your code is properly formatted by using the following command from anywhere within the repository:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$&gt; yarn test:lint</code></pre></div>\n<p>We use ESLint to check this, so using the <code class=\"language-text\">--fix</code> flag will cause ESLint to attempt to automatically correct most errors that might be left in your code:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$&gt; yarn test:lint --fix</code></pre></div>\n<h2 id=\"writing-documentation\"><a href=\"#writing-documentation\" aria-label=\"writing documentation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Writing documentation</h2>\n<p>Our website is stored within the <a href=\"https://github.com/yarnpkg/berry/tree/master/packages/gatsby\"><code class=\"language-text\">packages/gatsby</code></a> directory. <em>Do not manually edit the html files in the <code class=\"language-text\">docs</code> folder!</em> Instead, just make your changes in the Gatsby directory (for example you'd edit this very page <a href=\"https://github.com/yarnpkg/berry/blob/master/packages/gatsby/content/advanced/plugin-tutorial.md\">here</a>), then run the following command to spawn a local server and see your changes:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$&gt; yarn develop</code></pre></div>\n<p>Once you're happy with what the documentation looks like, just commit your local changes and open a PR. Netlify will pick up your changes and spawn a fresh preview for everyone to see:</p>\n<p><img src=\"https://user-images.githubusercontent.com/1037931/61949789-3cc09300-afac-11e9-9817-89e97771a4e1.png\"></p>\n<p>Once everything is green and a maintainer has reviewed your changes, we'll merge them and a bot will automatically trigger a rebuild of the website and update the <code class=\"language-text\">docs</code> folder ðŸ™‚</p>","frontmatter":{"path":"/advanced/contributing","title":"Contributing"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"category":"advanced"}}}