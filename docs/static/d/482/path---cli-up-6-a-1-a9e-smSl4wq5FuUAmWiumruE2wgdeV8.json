{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"path":"/cli/add","title":"`yarn add`"}}},{"node":{"frontmatter":{"path":"/cli/bin","title":"`yarn bin`"}}},{"node":{"frontmatter":{"path":"/cli/cache/clean","title":"`yarn cache clean`"}}},{"node":{"frontmatter":{"path":"/cli/config/set","title":"`yarn config set`"}}},{"node":{"frontmatter":{"path":"/cli/config","title":"`yarn config`"}}},{"node":{"frontmatter":{"path":"/cli/constraints/check","title":"`yarn constraints check`"}}},{"node":{"frontmatter":{"path":"/cli/constraints/fix","title":"`yarn constraints fix`"}}},{"node":{"frontmatter":{"path":"/cli/constraints/query","title":"`yarn constraints query`"}}},{"node":{"frontmatter":{"path":"/cli/constraints/source","title":"`yarn constraints source`"}}},{"node":{"frontmatter":{"path":"/cli/dlx","title":"`yarn dlx`"}}},{"node":{"frontmatter":{"path":"/cli/help","title":"`yarn help`"}}},{"node":{"frontmatter":{"path":"/cli/init","title":"`yarn init`"}}},{"node":{"frontmatter":{"path":"/cli/install","title":"`yarn install`"}}},{"node":{"frontmatter":{"path":"/cli/link","title":"`yarn link`"}}},{"node":{"frontmatter":{"path":"/cli/node","title":"`yarn node`"}}},{"node":{"frontmatter":{"path":"/cli/npm/publish","title":"`yarn npm publish`"}}},{"node":{"frontmatter":{"path":"/cli/pack","title":"`yarn pack`"}}},{"node":{"frontmatter":{"path":"/cli/plugin/dl","title":"`yarn plugin dl`"}}},{"node":{"frontmatter":{"path":"/cli/plugin/list","title":"`yarn plugin list`"}}},{"node":{"frontmatter":{"path":"/cli/policies/set-resolution","title":"`yarn policies set-resolution`"}}},{"node":{"frontmatter":{"path":"/cli/remove","title":"`yarn remove`"}}},{"node":{"frontmatter":{"path":"/cli/run","title":"`yarn run`"}}},{"node":{"frontmatter":{"path":"/cli/set/version","title":"`yarn set version`"}}},{"node":{"frontmatter":{"path":"/cli/stage","title":"`yarn stage`"}}},{"node":{"frontmatter":{"path":"/cli/unplug","title":"`yarn unplug`"}}},{"node":{"frontmatter":{"path":"/cli/up","title":"`yarn up`"}}},{"node":{"frontmatter":{"path":"/cli/why","title":"`yarn why`"}}},{"node":{"frontmatter":{"path":"/cli/workspaces/foreach","title":"`yarn workspaces foreach`"}}},{"node":{"frontmatter":{"path":"/cli/workspaces/list","title":"`yarn workspaces list`"}}}]},"markdownRemark":{"html":"<p>Upgrade dependencies accross the project.</p>\n<h2 id=\"usage\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<pre><code>$> yarn up [... packages] [-i,--interactive] [-v,--verbose] [-E,--exact] [-T,--tilde]\n</code></pre>\n<h2 id=\"details\"><a href=\"#details\" aria-label=\"details permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Details</h2>\n<p>This command upgrades a list of packages to their latest available version\nacross the whole project (regardless of whether they're part of <code>dependencies</code>\nor <code>devDependencies</code> - <code>peerDependencies</code> won't be affected). This is a\nproject-wide command: all workspaces will be upgraded in the process. Note that\nbecause such dependencies are expected to be non-upgradable, dependencies\nrelying on non-semver ranges won't be updated (this includes git dependencies\nthat use a commit hash).</p>\n<p>If <code>-i,--interactive</code> is set (or if the <code>preferInteractive</code> settings is toggled\non) the command will offer various choices, depending on the detected upgrade\npaths. Some upgrades require this flag in order to resolve ambiguities.</p>\n<p>The <code>-E,--exact</code> and  <code>-T,--tilde</code> options have the same meaning as in the <code>add</code>\ncommand (they change the modifier used when the range is missing or a tag, and\nare ignored when the range is explicitly set).</p>\n<h2 id=\"examples\"><a href=\"#examples\" aria-label=\"examples permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Examples</h2>\n<p>Upgrade all instances of lodash to the latest release\n:</p>\n<pre><code>yarn up lodash\n</code></pre>\n<p>Upgrade all instances of lodash to the latest release, but ask confirmation for\neach\n:</p>\n<pre><code>yarn up lodash -i\n</code></pre>\n<p>Upgrade all instances of lodash to 1.2.3\n:</p>\n<pre><code>yarn up lodash@1.2.3\n</code></pre>","frontmatter":{"path":"/cli/up","title":"`yarn up`"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"category":"cli"}}