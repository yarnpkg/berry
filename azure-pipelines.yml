jobs:

- job: Chore
  pool:
    vmImage: 'Ubuntu 16.04'

  variables:
    os_name: Linux

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: 10.x
    displayName: 'Install Node.js'

  - bash: |
      YARN_ENABLE_NETWORK=0 node ./scripts/run-yarn.js --frozen-lockfile
    displayName: "Check that the Yarn files don't change on new installs"

  - bash: |
      if [[ $(git diff --name-only "$(git merge-base origin/"$SYSTEM_PULLREQUEST_TARGETBRANCH" HEAD)" HEAD -- .yarn/{cache,virtual} | wc -l) -gt 0 ]]; then
        rm -rf ./.yarn/cache
        node ./scripts/run-yarn.js
      fi
    displayName: 'Check that the cache files are consistent with their remote sources'
    condition: eq(variables['Build.Reason'], 'PullRequest')

  - bash: |
      [[ $(node ./scripts/run-yarn.js cache clean --dry-run --json | jq -c 'select(.path)' | wc -l) -eq 0 ]]
    displayName: "Check that the cache doesn't contain obsolete packages"

  - bash: |
      node ./scripts/run-yarn.js test:lint
    displayName: 'Check the linting passes'

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'

  variables:
    os_name: Windows

  strategy:
    matrix:
#      "Node 8.x":
#        node_version: 8.x
      "Node 10.x":
        node_version: 10.x

  steps:
  - bash: |
      git config core.symlinks true
      git reset --hard
  - template: scripts/azure-run-tests.yml

- job: Linux
  pool:
    vmImage: 'Ubuntu 16.04'

  variables:
    os_name: Linux

  strategy:
    matrix:
      "Node 8.x":
        node_version: 8.x
      "Node 10.x":
        node_version: 10.x

  steps:
  - template: scripts/azure-run-tests.yml

- job: OSX
  pool:
    vmImage: 'macOS 10.13'

  variables:
    os_name: OSX

  strategy:
    matrix:
      "Node 8.x":
        node_version: 8.x
      "Node 10.x":
        node_version: 10.x

  steps:
   - template: scripts/azure-run-tests.yml
