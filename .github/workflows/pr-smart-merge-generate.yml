on:
  pull_request:
    types: [labeled]

name: 'Smart merge: Generate'
jobs:
  generate:
    name: 'Generate an update changeset'
    runs-on: ubuntu-latest
    if: |
      github.event.label.name == 'infra: pending update'

    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/prepare

    - name: 'Generate the changeset'
      run: |
        git fetch --depth=0 origin master

        if ! git merge --no-commit origin/master; then
          export YARN_ENABLE_IMMUTABLE_INSTALLS=0

          if git diff --name-only --diff-filter=U | grep .pnp.cjs; then
            # We use a prebuilt binary so that we don't have to deal with new/removed dependencies
            YARN_ENABLE_STRICT_SETTINGS=0 YARN_IGNORE_PATH=1 node packages/yarnpkg-cli/bundles/yarn.js
          fi

          if git diff --name-only --diff-filter=U | grep packages/yarnpkg-pnp/sources/hook.js; then
            git checkout --theirs packages/yarnpkg-pnp/sources/hook.js
            yarn build:pnp:hook
            SHOULD_RUN_AN_INSTALL=1
          fi

          if git diff --name-only --diff-filter=U | grep packages/yarnpkg-pnp/sources/esm-loader/built-loader.js; then
            git checkout --theirs packages/yarnpkg-pnp/sources/esm-loader/built-loader.js
            yarn build:pnp:hook
            SHOULD_RUN_AN_INSTALL=1
          fi

          if [[ "$SHOULD_RUN_AN_INSTALL" == "1" ]]; then
            yarn install
          fi

          if git diff --name-only --diff-filter=U | grep packages/yarnpkg-parsers/sources/grammars/shell.js; then
            git checkout --theirs packages/yarnpkg-parsers/sources/grammars/shell.js
            yarn grammar:shell
          fi
        fi

        yarn test:lint --fix

    - name: Generate the artifacts
      run: |
        mkdir -p pr
        git diff > pr/update.patch

    - name: Upload the artifacts
      uses: actions/upload-artifact@v2
      with:
        name: pr
        path: pr/
