on:
  push:
    branches:
    - master
  pull_request:

name: 'Integration'
jobs:
  chore:
    name: 'Testing chores'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - name: 'Use Node.js 10.x'
      uses: actions/setup-node@master
      with:
        node-version: 10.x

    - name: 'Check that the Yarn files don''t change on new installs (fix w/ "yarn install")'
      run: |
        node ./scripts/run-yarn.js --immutable --immutable-cache
      env:
        YARN_ENABLE_NETWORK: 0

    - name: 'Check that the cache files are consistent with their remote sources'
      run: |
        if [[ $(git diff --name-only "$(git merge-base origin/"$TARGET_BRANCH" HEAD)" HEAD -- .yarn/{cache,virtual} | wc -l) -gt 0 ]]; then
          node ./scripts/run-yarn.js --immutable --immutable-cache --check-cache
        fi
      if: |
        github.event.pull_request != ''
      env:
        TARGET_BRANCH: ${{github.event.pull_request.base.ref}}

    - name: 'Check that the PR describes which packages should be bumped (fix w/ "yarn version check -i")'
      run: |
        node ./scripts/run-yarn.js version check
      if: |
        github.event.pull_request != ''

    - name: 'Check for linting errors (fix w/ "yarn test:lint --fix")'
      run: |
        node ./scripts/run-yarn.js test:lint

    - name: 'Check for unmet constraints (fix w/ "yarn constraints --fix")'
      run: |
        node ./scripts/run-yarn.js constraints

  acceptance:
    strategy:
      fail-fast: false
      matrix:
        node:
        - 8
        - 10
        - 12
        platform:
        - ubuntu-latest
        - windows-latest
        - macos-latest
        exclude:
        - node: 8
          platform: windows-latest

    name: '${{matrix.platform}} w/ Node.js ${{matrix.node}}.x'
    runs-on: ${{matrix.platform}}

    steps:
    - uses: actions/checkout@master

    - name: 'Use Node.js ${{matrix.node}}.x'
      uses: actions/setup-node@master
      with:
        node-version: ${{matrix.node}}.x

    - name: 'Build the standard bundle & plugins'
      run: |
        set -e
        node --version
        node ./scripts/run-yarn.js build:cli
        node ./scripts/run-yarn.js build:plugin-exec
        node ./scripts/run-yarn.js build:plugin-stage
        node ./scripts/run-yarn.js build:plugin-typescript
        node ./scripts/run-yarn.js build:plugin-version
        node ./scripts/run-yarn.js build:plugin-workspace-tools

    - name: 'Run the integration tests'
      run: |
        node ./scripts/run-yarn.js test:integration --runInBand

    - name: 'Run the unit tests'
      run: |
        node ./scripts/run-yarn.js test:unit
