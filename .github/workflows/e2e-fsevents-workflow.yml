on:
  schedule:
  - cron: '0 */4 * * *'
  push:
    branches:
    - master
  pull_request:
    paths:
    - .github/workflows/e2e-fsevents-workflow.yml
    - scripts/e2e-setup-ci.sh

name: 'E2E FSEvents'
jobs:
  chore:
    name: 'Validating FSEvents'
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@master

    - name: 'Use Node.js 10.x'
      uses: actions/setup-node@master
      with:
        node-version: 10.x

    - name: 'Build the standard bundle'
      run: |
        node ./scripts/run-yarn.js build:cli

    - name: 'Running the integration test (FSEvents ^1)'
      run: |
        source scripts/e2e-setup-ci.sh
        yarn init
        yarn add fsevents@^1

        cat > test.js <<EOT
          const assert = require('assert');
          const fsevents = require('fsevents');
          const fs = require('fs');
          const path = require('path');

          const virtualP = path.resolve('./\$\$virtual/foo/0');
          const fileP = path.join(virtualP, 'helloworld');

          const events = [];
          const watcher = fsevents(virtualP);
          watcher.on('change', (...args) => events.push(args));
          watcher.start();

          async function sleep(n) {
            return new Promise(resolve => {
              setTimeout(resolve, n);
            });
          }

          async function main() {
            await sleep(1000);
            fs.writeFileSync(fileP, '');
            await sleep(1000);

            if (events.length === 0)
              throw new Error(`No events recorded`);

            for (const [p] of events) {
              if (!p.startsWith(virtualP)) {
                throw new Error(p);
              }
            }
          }

          main().then(() => {
            watcher.stop();
          }, error => {
            watcher.stop();

            console.log(error.stack);
            process.exitCode = 1;
          });
        EOT

        yarn node ./test.js

    - name: 'Running the integration test (FSEvents ^1)'
      run: |
        source scripts/e2e-setup-ci.sh
        yarn init
        yarn add fsevents@latest

        cat > test.js <<EOT
          const fsevents = require('fsevents');
          const fs = require('fs');
          const path = require('path');

          const virtualP = path.resolve('./$$virtual/foo/0');

          let resolve, deferred = new Promise(resolveDeferred => {
              resolve = resolveDeferred;
          });

          fsevents(virtualP, p => {
            console.log('Received a change event', p, virtualP);
            resolve(p === virtualP ? 0 : 1);
          });

          setTimeout(() => {
            console.log('Timeout');
            resolve(1);
          }, 5000);

          fs.writeFileSync('./helloworld', 'some new text');

          deferred.then(exitCode => {
            process.exit(exitCode);
          }, error => {
            console.log(error.stack);
            process.exit(1);
          });
        EOT

        yarn node ./test.js
